"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createDragDropManager = void 0;
const DragDropManagerImpl_1 = require("./classes/DragDropManagerImpl");
const redux_1 = require("redux");
const reducers_1 = require("./reducers");
const DragDropMonitorImpl_1 = require("./classes/DragDropMonitorImpl");
const HandlerRegistryImpl_1 = require("./classes/HandlerRegistryImpl");
function createDragDropManager(backendFactory, globalContext = undefined, backendOptions = {}, debugMode = false) {
    const store = makeStoreInstance(debugMode);
    const monitor = new DragDropMonitorImpl_1.DragDropMonitorImpl(store, new HandlerRegistryImpl_1.HandlerRegistryImpl(store));
    const manager = new DragDropManagerImpl_1.DragDropManagerImpl(store, monitor);
    const backend = backendFactory(manager, globalContext, backendOptions);
    manager.receiveBackend(backend);
    return manager;
}
exports.createDragDropManager = createDragDropManager;
function makeStoreInstance(debugMode) {
    // TODO: if we ever make a react-native version of this,
    // we'll need to consider how to pull off dev-tooling
    const reduxDevTools = typeof window !== 'undefined' &&
        window.__REDUX_DEVTOOLS_EXTENSION__;
    return (0, redux_1.createStore)(reducers_1.reduce, debugMode &&
        reduxDevTools &&
        reduxDevTools({
            name: 'dnd-core',
            instanceId: 'dnd-core',
        }));
}
