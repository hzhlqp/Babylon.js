"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.validateType = exports.validateTargetContract = exports.validateSourceContract = void 0;
const invariant_1 = require("@react-dnd/invariant");
function validateSourceContract(source) {
    (0, invariant_1.invariant)(typeof source.canDrag === 'function', 'Expected canDrag to be a function.');
    (0, invariant_1.invariant)(typeof source.beginDrag === 'function', 'Expected beginDrag to be a function.');
    (0, invariant_1.invariant)(typeof source.endDrag === 'function', 'Expected endDrag to be a function.');
}
exports.validateSourceContract = validateSourceContract;
function validateTargetContract(target) {
    (0, invariant_1.invariant)(typeof target.canDrop === 'function', 'Expected canDrop to be a function.');
    (0, invariant_1.invariant)(typeof target.hover === 'function', 'Expected hover to be a function.');
    (0, invariant_1.invariant)(typeof target.drop === 'function', 'Expected beginDrag to be a function.');
}
exports.validateTargetContract = validateTargetContract;
function validateType(type, allowArray) {
    if (allowArray && Array.isArray(type)) {
        type.forEach((t) => validateType(t, false));
        return;
    }
    (0, invariant_1.invariant)(typeof type === 'string' || typeof type === 'symbol', allowArray
        ? 'Type can only be a string, a symbol, or an array of either.'
        : 'Type can only be a string or a symbol.');
}
exports.validateType = validateType;
