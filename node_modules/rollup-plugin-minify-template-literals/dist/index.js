// lib/index.ts
import * as minify from "minify-literals";
import { createFilter } from "@rollup/pluginutils";
var minifyTemplateLiterals = function RollupPluginMinifyHTMLLiterals(options = {}) {
  options.minifyHTMLLiterals = options.minifyHTMLLiterals || minify.minifyHTMLLiterals;
  options.filter = options.filter || createFilter(options.include, options.exclude);
  const minifyOptions = options.options || {};
  return {
    name: "minify-literals",
    async transform(code, id) {
      if (!options.filter?.(id))
        return;
      try {
        const res = await options.minifyHTMLLiterals(code, {
          ...minifyOptions,
          fileName: id
        });
        if (res === null || res?.code === code)
          return {};
        return {
          code: res.code,
          map: res.map
        };
      } catch (error) {
        if (!(error instanceof Error))
          return;
        (options.failOnError ? this.error : this.warn)(error.message);
      }
      return {};
    }
  };
};
var lib_default = minifyTemplateLiterals;
var RollupPluginMinifyHTMLLiterals2 = minifyTemplateLiterals;
var minifyHTMLLiterals2 = minifyTemplateLiterals;
export {
  RollupPluginMinifyHTMLLiterals2 as RollupPluginMinifyHTMLLiterals,
  lib_default as default,
  minifyHTMLLiterals2 as minifyHTMLLiterals,
  minifyTemplateLiterals
};
//# sourceMappingURL=index.js.map