{"version":3,"file":"modelConfiguration.js","sourceRoot":"","sources":["../../../src/configuration/interfaces/modelConfiguration.ts"],"names":[],"mappings":"","sourcesContent":["import type { IModelAnimationConfiguration } from \"./modelAnimationConfiguration\";\r\n\r\nexport interface IModelConfiguration {\r\n    id?: string;\r\n    url?: string;\r\n    root?: string; //optional\r\n    file?: string | File; // is a file being loaded? root and url ignored\r\n    loader?: string; // obj, gltf?\r\n    position?: { x: number; y: number; z: number };\r\n    rotation?: { x: number; y: number; z: number; w?: number };\r\n    scaling?: { x: number; y: number; z: number };\r\n    parentObjectIndex?: number; // the index of the parent object of the model in the loaded meshes array.\r\n\r\n    castShadow?: boolean;\r\n    receiveShadows?: boolean;\r\n    normalize?:\r\n        | boolean\r\n        | {\r\n              center?: boolean;\r\n              unitSize?: boolean;\r\n              parentIndex?: number;\r\n          }; // should the model be scaled to unit-size\r\n\r\n    title?: string;\r\n    subtitle?: string;\r\n    thumbnail?: string; // URL or data-url\r\n\r\n    animation?: {\r\n        autoStart?: boolean | string;\r\n        playOnce?: boolean;\r\n        autoStartIndex?: number;\r\n    };\r\n\r\n    entryAnimation?: IModelAnimationConfiguration;\r\n    exitAnimation?: IModelAnimationConfiguration;\r\n\r\n    material?: {\r\n        directEnabled?: boolean;\r\n        directIntensity?: number;\r\n        emissiveIntensity?: number;\r\n        environmentIntensity?: number;\r\n        [propName: string]: any;\r\n    };\r\n\r\n    /**\r\n     * Rotation offset axis definition\r\n     */\r\n    rotationOffsetAxis?: {\r\n        x: number;\r\n        y: number;\r\n        z: number;\r\n    };\r\n\r\n    /**\r\n     * the offset angle\r\n     */\r\n    rotationOffsetAngle?: number;\r\n\r\n    loaderConfiguration?: {\r\n        maxLODsToLoad?: number;\r\n        progressiveLoading?: boolean;\r\n    };\r\n\r\n    // [propName: string]: any; // further configuration, like title and creator\r\n}\r\n"]}