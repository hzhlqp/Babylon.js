{"version":3,"file":"printButton.js","sourceRoot":"","sources":["../../../src/templating/plugins/printButton.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,0BAA0B,EAAE,MAAM,yBAAyB,CAAC;AAErE,OAAO,EAAE,KAAK,EAAE,MAAM,iBAAiB,CAAC;AAExC,MAAM,OAAO,iBAAkB,SAAQ,0BAA0B;IAG7D,YAAoB,OAAsB;QACtC,KAAK,CAAC,OAAO,EAAE,cAAc,EAAE,iBAAiB,CAAC,YAAY,CAAC,CAAC;QAD/C,YAAO,GAAP,OAAO,CAAe;QAGtC,IAAI,CAAC,OAAO,CAAC,uBAAuB,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE;YAC/C,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;YAC3B,IAAI,KAAK,CAAC,aAAa,CAAC,GAAG,EAAE;gBACzB,MAAM,QAAQ,GAAG,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC;gBACvF,MAAM,OAAO,GAAG,KAAK,CAAC,aAAa,CAAC,IAAI,IAAI,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;gBAEzF,gBAAgB;gBAChB,MAAM,SAAS,GAAG,KAAK,CAAC,aAAa,CAAC,MAAM,IAAI,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC;gBAChF,IAAI,SAAS,GAAG,KAAK,CAAC;gBACtB,8BAA8B;gBAC9B,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;oBAC1C,IAAI,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;wBAC/B,SAAS,GAAG,IAAI,CAAC;qBACpB;gBACL,CAAC,CAAC,CAAC;gBACH,IAAI,SAAS,EAAE;oBACX,IAAI,CAAC,gBAAgB,GAAG,OAAO,GAAG,QAAQ,CAAC;iBAC9C;aACJ;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,OAAO;QACH,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACvB,MAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,aAAa,EAAE,4BAA4B,CAAC,CAAC;YAC5F,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;SAClC;IACL,CAAC;;AAED,gEAAgE;AAC/C,8BAAY,GAAW;;;;;;;;;;;;;;;8BAed,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE;;;;CAI5G,CAAC","sourcesContent":["import { AbstractViewerNavbarButton } from \"../viewerTemplatePlugin\";\r\nimport type { DefaultViewer } from \"../../viewer/defaultViewer\";\r\nimport { Tools } from \"core/Misc/tools\";\r\n\r\nexport class PrintButtonPlugin extends AbstractViewerNavbarButton {\r\n    private _currentModelUrl: string;\r\n\r\n    constructor(private _viewer: DefaultViewer) {\r\n        super(\"print\", \"print-button\", PrintButtonPlugin.HtmlTemplate);\r\n\r\n        this._viewer.onModelLoadedObservable.add((model) => {\r\n            this._currentModelUrl = \"\";\r\n            if (model.configuration.url) {\r\n                const filename = Tools.GetFilename(model.configuration.url) || model.configuration.url;\r\n                const baseUrl = model.configuration.root || Tools.GetFolderPath(model.configuration.url);\r\n\r\n                //gltf, obj, stl\r\n                const extension = model.configuration.loader || filename.split(\".\").pop() || \"\";\r\n                let printable = false;\r\n                // not using .some sue to IE11\r\n                [\"gltf\", \"glb\", \"obj\", \"stl\"].forEach((ext) => {\r\n                    if (extension.indexOf(ext) !== -1) {\r\n                        printable = true;\r\n                    }\r\n                });\r\n                if (printable) {\r\n                    this._currentModelUrl = baseUrl + filename;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    onEvent(): void {\r\n        if (this._currentModelUrl) {\r\n            const printUrl = this._currentModelUrl.replace(/https?:\\/\\//, \"com.microsoft.builder3d://\");\r\n            window.open(printUrl, \"_self\");\r\n        }\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    protected static HtmlTemplate: string = `\r\n{{#unless hidePrint}}\r\n<style>\r\n\r\n/* Show only if it's a windows 10 printer  */\r\n.print-icon.not-win-10 {\r\n    display: none;\r\n}\r\n\r\n.print-icon:after {\r\n    font-size: 16px;\r\n    content: \"\\\\E914\";\r\n}\r\n\r\n</style>\r\n<button class=\"print-button ${window.navigator.userAgent.indexOf(\"Windows NT 10.0\") === -1 ? \"no-win-10\" : \"\"}\" title=\"{{text.printButton}}\">\r\n     <span class=\"icon print-icon\"></span>\r\n </button>\r\n {{/unless}}\r\n`;\r\n}\r\n"]}