{"version":3,"file":"msftLodLoaderPlugin.js","sourceRoot":"","sources":["../../../src/loader/plugins/msftLodLoaderPlugin.ts"],"names":[],"mappings":"AAOA;;GAEG;AACH,MAAM,OAAO,mBAAmB;IAGrB,MAAM,CAAC,MAAoD,EAAE,KAAkB;QAClF,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACxB,CAAC;IAEM,iBAAiB,CAAC,SAA+B;QACpD,IAAI,SAAS,CAAC,IAAI,KAAK,UAAU,IAAI,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,mBAAmB,EAAE;YAChF,gEAAgE;YAChE,MAAM,QAAQ,GAAG,SAA2B,CAAC;YAC7C,QAAQ,CAAC,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,mBAAmB,CAAC,kBAAkB,CAAC;YACtF,QAAQ,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,mBAAmB,CAAC,aAAa,IAAI,MAAM,CAAC,SAAS,CAAC;SAC5G;IACL,CAAC;CACJ","sourcesContent":["import type { ISceneLoaderPlugin, ISceneLoaderPluginAsync } from \"core/Loading/sceneLoader\";\r\nimport type { IGLTFLoaderExtension } from \"loaders/glTF/2.0/glTFLoaderExtension\";\r\n// eslint-disable-next-line import/no-internal-modules\r\nimport type { GLTF2 } from \"loaders/glTF/index\";\r\nimport type { ViewerModel } from \"../../model/viewerModel\";\r\nimport type { ILoaderPlugin } from \"./loaderPlugin\";\r\n\r\n/**\r\n * A loader plugin to use MSFT_lod extension correctly (glTF)\r\n */\r\nexport class MSFTLodLoaderPlugin implements ILoaderPlugin {\r\n    private _model: ViewerModel;\r\n\r\n    public onInit(loader: ISceneLoaderPlugin | ISceneLoaderPluginAsync, model: ViewerModel) {\r\n        this._model = model;\r\n    }\r\n\r\n    public onExtensionLoaded(extension: IGLTFLoaderExtension) {\r\n        if (extension.name === \"MSFT_lod\" && this._model.configuration.loaderConfiguration) {\r\n            // eslint-disable-next-line @typescript-eslint/naming-convention\r\n            const MSFT_lod = extension as GLTF2.MSFT_lod;\r\n            MSFT_lod.enabled = !!this._model.configuration.loaderConfiguration.progressiveLoading;\r\n            MSFT_lod.maxLODsToLoad = this._model.configuration.loaderConfiguration.maxLODsToLoad || Number.MAX_VALUE;\r\n        }\r\n    }\r\n}\r\n"]}