{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;;AAAA,kDAAkE;AAE3D,MAAM,eAAe,GAAG,CAAC,iBAAsD,EAAE,EAAE,EAAE;IACxF,IAAA,iCAAmB,GAAE,CAAC;IACtB,uBACI,UAAU,EAAE,+BAA+B,EAC3C,MAAM,EAAE,kCAAkC,EAC1C,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,YAAY,IAAI,CAAC,IAAA,uBAAS,EAAC,CAAC,gBAAgB,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,mBAAmB,EACnH,IAAI,EAAE,2BAA2B,IAC9B,cAAc,EACnB;AACN,CAAC,CAAC;AATW,QAAA,eAAe,mBAS1B;AAEF,kDAAwB;AACxB,+DAAqC;AACrC,8DAAoC","sourcesContent":["import { checkArgs, populateEnvironment } from \"@dev/build-tools\";\r\n\r\nexport const getGlobalConfig = (overrideConfig: { root?: string; baseUrl?: string } = {}) => {\r\n    populateEnvironment();\r\n    return {\r\n        snippetUrl: \"https://snippet.babylonjs.com\",\r\n        pgRoot: \"https://playground.babylonjs.com\",\r\n        baseUrl: process.env.CDN_BASE_URL || (checkArgs([\"--enable-https\"], true) ? \"https\" : \"http\") + \"://localhost:1337\",\r\n        root: \"https://cdn.babylonjs.com\",\r\n        ...overrideConfig,\r\n    };\r\n};\r\n\r\nexport * from \"./utils\";\r\nexport * from \"./visualizationUtils\";\r\nexport * from \"./seleniumTestUtils\";\r\n"]}