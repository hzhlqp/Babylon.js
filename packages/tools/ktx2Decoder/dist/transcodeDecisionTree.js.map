{"version":3,"file":"transcodeDecisionTree.js","sourceRoot":"","sources":["../src/transcodeDecisionTree.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/naming-convention */\r\nimport * as KTX2 from \"core/Materials/Textures/ktx2decoderTypes\";\r\n\r\nconst DecisionTree: KTX2.IDecisionTree = {\r\n    ETC1S: {\r\n        option: \"forceRGBA\",\r\n        yes: {\r\n            transcodeFormat: KTX2.TranscodeTarget.RGBA32,\r\n            engineFormat: KTX2.EngineFormat.RGBA8Format,\r\n            roundToMultiple4: false,\r\n        },\r\n        no: {\r\n            cap: \"etc2\",\r\n            yes: {\r\n                alpha: true,\r\n                yes: {\r\n                    transcodeFormat: KTX2.TranscodeTarget.ETC2_RGBA,\r\n                    engineFormat: KTX2.EngineFormat.COMPRESSED_RGBA8_ETC2_EAC,\r\n                },\r\n                no: {\r\n                    transcodeFormat: KTX2.TranscodeTarget.ETC1_RGB,\r\n                    engineFormat: KTX2.EngineFormat.COMPRESSED_RGB8_ETC2,\r\n                },\r\n            },\r\n            no: {\r\n                cap: \"etc1\",\r\n                alpha: false,\r\n                yes: {\r\n                    transcodeFormat: KTX2.TranscodeTarget.ETC1_RGB,\r\n                    engineFormat: KTX2.EngineFormat.COMPRESSED_RGB_ETC1_WEBGL,\r\n                },\r\n                no: {\r\n                    cap: \"bptc\",\r\n                    yes: {\r\n                        transcodeFormat: KTX2.TranscodeTarget.BC7_RGBA,\r\n                        engineFormat: KTX2.EngineFormat.COMPRESSED_RGBA_BPTC_UNORM_EXT,\r\n                    },\r\n                    no: {\r\n                        cap: \"s3tc\",\r\n                        yes: {\r\n                            alpha: true,\r\n                            yes: {\r\n                                transcodeFormat: KTX2.TranscodeTarget.BC3_RGBA,\r\n                                engineFormat: KTX2.EngineFormat.COMPRESSED_RGBA_S3TC_DXT5_EXT,\r\n                            },\r\n                            no: {\r\n                                transcodeFormat: KTX2.TranscodeTarget.BC1_RGB,\r\n                                engineFormat: KTX2.EngineFormat.COMPRESSED_RGB_S3TC_DXT1_EXT,\r\n                            },\r\n                        },\r\n                        no: {\r\n                            cap: \"pvrtc\",\r\n                            needsPowerOfTwo: true,\r\n                            yes: {\r\n                                alpha: true,\r\n                                yes: {\r\n                                    transcodeFormat: KTX2.TranscodeTarget.PVRTC1_4_RGBA,\r\n                                    engineFormat: KTX2.EngineFormat.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG,\r\n                                },\r\n                                no: {\r\n                                    transcodeFormat: KTX2.TranscodeTarget.PVRTC1_4_RGB,\r\n                                    engineFormat: KTX2.EngineFormat.COMPRESSED_RGB_PVRTC_4BPPV1_IMG,\r\n                                },\r\n                            },\r\n                            no: {\r\n                                transcodeFormat: KTX2.TranscodeTarget.RGBA32,\r\n                                engineFormat: KTX2.EngineFormat.RGBA8Format,\r\n                                roundToMultiple4: false,\r\n                            },\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        },\r\n    },\r\n\r\n    UASTC: {\r\n        option: \"forceRGBA\",\r\n        yes: {\r\n            transcodeFormat: KTX2.TranscodeTarget.RGBA32,\r\n            engineFormat: KTX2.EngineFormat.RGBA8Format,\r\n            roundToMultiple4: false,\r\n        },\r\n        no: {\r\n            option: \"forceR8\",\r\n            yes: {\r\n                transcodeFormat: KTX2.TranscodeTarget.R8,\r\n                engineFormat: KTX2.EngineFormat.R8Format,\r\n                roundToMultiple4: false,\r\n            },\r\n            no: {\r\n                option: \"forceRG8\",\r\n                yes: {\r\n                    transcodeFormat: KTX2.TranscodeTarget.RG8,\r\n                    engineFormat: KTX2.EngineFormat.RG8Format,\r\n                    roundToMultiple4: false,\r\n                },\r\n                no: {\r\n                    cap: \"astc\",\r\n                    yes: {\r\n                        transcodeFormat: KTX2.TranscodeTarget.ASTC_4X4_RGBA,\r\n                        engineFormat: KTX2.EngineFormat.COMPRESSED_RGBA_ASTC_4X4_KHR,\r\n                    },\r\n                    no: {\r\n                        cap: \"bptc\",\r\n                        yes: {\r\n                            transcodeFormat: KTX2.TranscodeTarget.BC7_RGBA,\r\n                            engineFormat: KTX2.EngineFormat.COMPRESSED_RGBA_BPTC_UNORM_EXT,\r\n                        },\r\n                        no: {\r\n                            option: \"useRGBAIfASTCBC7NotAvailableWhenUASTC\",\r\n                            yes: {\r\n                                transcodeFormat: KTX2.TranscodeTarget.RGBA32,\r\n                                engineFormat: KTX2.EngineFormat.RGBA8Format,\r\n                                roundToMultiple4: false,\r\n                            },\r\n                            no: {\r\n                                cap: \"etc2\",\r\n                                yes: {\r\n                                    alpha: true,\r\n                                    yes: {\r\n                                        transcodeFormat: KTX2.TranscodeTarget.ETC2_RGBA,\r\n                                        engineFormat: KTX2.EngineFormat.COMPRESSED_RGBA8_ETC2_EAC,\r\n                                    },\r\n                                    no: {\r\n                                        transcodeFormat: KTX2.TranscodeTarget.ETC1_RGB,\r\n                                        engineFormat: KTX2.EngineFormat.COMPRESSED_RGB8_ETC2,\r\n                                    },\r\n                                },\r\n                                no: {\r\n                                    cap: \"etc1\",\r\n                                    yes: {\r\n                                        transcodeFormat: KTX2.TranscodeTarget.ETC1_RGB,\r\n                                        engineFormat: KTX2.EngineFormat.COMPRESSED_RGB_ETC1_WEBGL,\r\n                                    },\r\n                                    no: {\r\n                                        cap: \"s3tc\",\r\n                                        yes: {\r\n                                            alpha: true,\r\n                                            yes: {\r\n                                                transcodeFormat: KTX2.TranscodeTarget.BC3_RGBA,\r\n                                                engineFormat: KTX2.EngineFormat.COMPRESSED_RGBA_S3TC_DXT5_EXT,\r\n                                            },\r\n                                            no: {\r\n                                                transcodeFormat: KTX2.TranscodeTarget.BC1_RGB,\r\n                                                engineFormat: KTX2.EngineFormat.COMPRESSED_RGB_S3TC_DXT1_EXT,\r\n                                            },\r\n                                        },\r\n                                        no: {\r\n                                            cap: \"pvrtc\",\r\n                                            needsPowerOfTwo: true,\r\n                                            yes: {\r\n                                                alpha: true,\r\n                                                yes: {\r\n                                                    transcodeFormat: KTX2.TranscodeTarget.PVRTC1_4_RGBA,\r\n                                                    engineFormat: KTX2.EngineFormat.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG,\r\n                                                },\r\n                                                no: {\r\n                                                    transcodeFormat: KTX2.TranscodeTarget.PVRTC1_4_RGB,\r\n                                                    engineFormat: KTX2.EngineFormat.COMPRESSED_RGB_PVRTC_4BPPV1_IMG,\r\n                                                },\r\n                                            },\r\n                                            no: {\r\n                                                transcodeFormat: KTX2.TranscodeTarget.RGBA32,\r\n                                                engineFormat: KTX2.EngineFormat.RGBA8Format,\r\n                                                roundToMultiple4: false,\r\n                                            },\r\n                                        },\r\n                                    },\r\n                                },\r\n                            },\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        },\r\n    },\r\n};\r\n\r\nexport class TranscodeDecisionTree {\r\n    private static _IsLeafNode(node: KTX2.INode | KTX2.ILeaf): node is KTX2.ILeaf {\r\n        return (node as KTX2.ILeaf).engineFormat !== undefined;\r\n    }\r\n\r\n    private _textureFormat: KTX2.SourceTextureFormat;\r\n    private _hasAlpha: boolean;\r\n    private _isPowerOfTwo: boolean;\r\n    private _caps: KTX2.ICompressedFormatCapabilities;\r\n    private _options: KTX2.IKTX2DecoderOptions;\r\n    private _transcodeFormat: number;\r\n    private _engineFormat: number;\r\n    private _roundToMultiple4: boolean;\r\n\r\n    public get transcodeFormat() {\r\n        return this._transcodeFormat;\r\n    }\r\n\r\n    public get engineFormat() {\r\n        return this._engineFormat;\r\n    }\r\n\r\n    public get roundToMultiple4() {\r\n        return this._roundToMultiple4;\r\n    }\r\n\r\n    constructor(textureFormat: KTX2.SourceTextureFormat, hasAlpha: boolean, isPowerOfTwo: boolean, caps: KTX2.ICompressedFormatCapabilities, options?: KTX2.IKTX2DecoderOptions) {\r\n        this._textureFormat = textureFormat;\r\n        this._hasAlpha = hasAlpha;\r\n        this._isPowerOfTwo = isPowerOfTwo;\r\n        this._caps = caps;\r\n        this._options = options ?? {};\r\n\r\n        this.parseTree(DecisionTree);\r\n    }\r\n\r\n    public parseTree(tree: KTX2.IDecisionTree): boolean {\r\n        const node = this._textureFormat === KTX2.SourceTextureFormat.UASTC4x4 ? tree.UASTC : tree.ETC1S;\r\n        if (node) {\r\n            this._parseNode(node);\r\n        }\r\n        return node !== undefined;\r\n    }\r\n\r\n    private _parseNode(node: KTX2.INode | KTX2.ILeaf | undefined): void {\r\n        if (!node) {\r\n            return;\r\n        }\r\n\r\n        if (TranscodeDecisionTree._IsLeafNode(node)) {\r\n            this._transcodeFormat = node.transcodeFormat;\r\n            this._engineFormat = node.engineFormat;\r\n            this._roundToMultiple4 = node.roundToMultiple4 ?? true;\r\n        } else {\r\n            let condition = true;\r\n\r\n            if (node.cap !== undefined) {\r\n                condition = condition && !!this._caps[node.cap as keyof typeof this._caps];\r\n            }\r\n            if (node.option !== undefined) {\r\n                condition = condition && !!this._options[node.option as keyof typeof this._options];\r\n            }\r\n            if (node.alpha !== undefined) {\r\n                condition = condition && this._hasAlpha === node.alpha;\r\n            }\r\n            if (node.needsPowerOfTwo !== undefined) {\r\n                condition = condition && this._isPowerOfTwo === node.needsPowerOfTwo;\r\n            }\r\n            if (node.transcodeFormat !== undefined) {\r\n                if (Array.isArray(node.transcodeFormat)) {\r\n                    condition = condition && node.transcodeFormat.indexOf(this._transcodeFormat) !== -1;\r\n                } else {\r\n                    condition = condition && node.transcodeFormat === this._transcodeFormat;\r\n                }\r\n            }\r\n\r\n            this._parseNode(condition ? node.yes! : node.no!);\r\n        }\r\n    }\r\n}\r\n"]}