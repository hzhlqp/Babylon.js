{"version":3,"file":"zstddec.js","sourceRoot":"","sources":["../src/zstddec.ts"],"names":[],"mappings":"AAAA,yDAAyD;AAEzD,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AAc1C,IAAI,IAAmB,CAAC;AACxB,IAAI,QAAqC,CAAC;AAC1C,IAAI,IAAgB,CAAC;AAErB,MAAM,aAAa,GAAG;IAClB,GAAG,EAAE;QACD,+BAA+B,EAAE;YAC7B,IAAI,GAAG,IAAI,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAC1D,CAAC;KACJ;CACJ,CAAC;AAEF;;GAEG;AACH,MAAM,OAAO,WAAW;IAGpB,IAAI;QACA,IAAI,IAAI,EAAE;YACN,OAAO,IAAI,CAAC;SACf;QAED,IAAI,OAAO,KAAK,KAAK,WAAW,EAAE;YAC9B,OAAO;YAEP,IAAI,GAAG,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;iBACzD,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE;gBACf,IAAI,QAAQ,CAAC,EAAE,EAAE;oBACb,OAAO,QAAQ,CAAC,WAAW,EAAE,CAAC;iBACjC;gBACD,MAAM,IAAI,KAAK,CAAC,2EAA2E,QAAQ,CAAC,MAAM,MAAM,QAAQ,CAAC,UAAU,EAAE,CAAC,CAAC;YAC3I,CAAC,CAAC;iBACD,IAAI,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC,WAAW,CAAC,WAAW,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;iBAC1E,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACzB;aAAM;YACH,WAAW;YAEX,IAAI,GAAG,WAAW,CAAC,oBAAoB,CAAC,KAAK,CAAC,WAAW,CAAC,aAAa,CAAC,EAAE,aAAa,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC7G;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,KAAK,CAAC,MAAiD;QACnD,QAAQ,GAAG,MAAM,CAAC,QAAkD,CAAC;QAErE,aAAa,CAAC,GAAG,CAAC,+BAA+B,EAAE,CAAC,CAAC,mBAAmB;IAC5E,CAAC;IAED,MAAM,CAAC,KAAiB,EAAE,gBAAgB,GAAG,CAAC;QAC1C,IAAI,CAAC,QAAQ,EAAE;YACX,MAAM,IAAI,KAAK,CAAC,6CAA6C,CAAC,CAAC;SAClE;QAED,0CAA0C;QAC1C,MAAM,cAAc,GAAG,KAAK,CAAC,UAAU,CAAC;QACxC,MAAM,aAAa,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;QAC9D,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC;QAE/B,+BAA+B;QAC/B,gBAAgB,GAAG,gBAAgB,IAAI,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,yBAAyB,CAAC,aAAa,EAAE,cAAc,CAAC,CAAC,CAAC;QACzH,MAAM,eAAe,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;QAClE,MAAM,UAAU,GAAG,QAAQ,CAAC,OAAO,CAAC,eAAe,CAAC,eAAe,EAAE,gBAAgB,EAAE,aAAa,EAAE,cAAc,CAAC,CAAC;QAEtH,+CAA+C;QAC/C,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,eAAe,GAAG,UAAU,CAAC,CAAC;QACtE,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACrC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAEvC,OAAO,GAAG,CAAC;IACf,CAAC;;AAvDa,yBAAa,GAAG,wCAAwC,CAAC;AA0D3E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA+BG","sourcesContent":["/* eslint-disable @typescript-eslint/naming-convention */\r\n\r\nimport { Transcoder } from \"./transcoder\";\r\n\r\n/**\r\n * From https://github.com/donmccurdy/zstddec by Don McCurdy\r\n */\r\ninterface DecoderExports {\r\n    memory: Uint8Array;\r\n\r\n    ZSTD_findDecompressedSize: (compressedPtr: number, compressedSize: number) => number;\r\n    ZSTD_decompress: (uncompressedPtr: number, uncompressedSize: number, compressedPtr: number, compressedSize: number) => number;\r\n    malloc: (ptr: number) => number;\r\n    free: (ptr: number) => void;\r\n}\r\n\r\nlet init: Promise<void>;\r\nlet instance: { exports: DecoderExports };\r\nlet heap: Uint8Array;\r\n\r\nconst IMPORT_OBJECT = {\r\n    env: {\r\n        emscripten_notify_memory_growth: function (): void {\r\n            heap = new Uint8Array(instance.exports.memory.buffer);\r\n        },\r\n    },\r\n};\r\n\r\n/**\r\n * ZSTD (Zstandard) decoder.\r\n */\r\nexport class ZSTDDecoder {\r\n    public static WasmModuleURL = \"https://cdn.babylonjs.com/zstddec.wasm\";\r\n\r\n    init(): Promise<void> {\r\n        if (init) {\r\n            return init;\r\n        }\r\n\r\n        if (typeof fetch !== \"undefined\") {\r\n            // Web.\r\n\r\n            init = fetch(Transcoder.GetWasmUrl(ZSTDDecoder.WasmModuleURL))\r\n                .then((response) => {\r\n                    if (response.ok) {\r\n                        return response.arrayBuffer();\r\n                    }\r\n                    throw new Error(`Could not fetch the wasm component for the Zstandard decompression lib: ${response.status} - ${response.statusText}`);\r\n                })\r\n                .then((arrayBuffer) => WebAssembly.instantiate(arrayBuffer, IMPORT_OBJECT))\r\n                .then(this._init);\r\n        } else {\r\n            // Node.js.\r\n\r\n            init = WebAssembly.instantiateStreaming(fetch(ZSTDDecoder.WasmModuleURL), IMPORT_OBJECT).then(this._init);\r\n        }\r\n\r\n        return init;\r\n    }\r\n\r\n    _init(result: WebAssembly.WebAssemblyInstantiatedSource): void {\r\n        instance = result.instance as unknown as { exports: DecoderExports };\r\n\r\n        IMPORT_OBJECT.env.emscripten_notify_memory_growth(); // initialize heap.\r\n    }\r\n\r\n    decode(array: Uint8Array, uncompressedSize = 0): Uint8Array {\r\n        if (!instance) {\r\n            throw new Error(`ZSTDDecoder: Await .init() before decoding.`);\r\n        }\r\n\r\n        // Write compressed data into WASM memory.\r\n        const compressedSize = array.byteLength;\r\n        const compressedPtr = instance.exports.malloc(compressedSize);\r\n        heap.set(array, compressedPtr);\r\n\r\n        // Decompress into WASM memory.\r\n        uncompressedSize = uncompressedSize || Number(instance.exports.ZSTD_findDecompressedSize(compressedPtr, compressedSize));\r\n        const uncompressedPtr = instance.exports.malloc(uncompressedSize);\r\n        const actualSize = instance.exports.ZSTD_decompress(uncompressedPtr, uncompressedSize, compressedPtr, compressedSize);\r\n\r\n        // Read decompressed data and free WASM memory.\r\n        const dec = heap.slice(uncompressedPtr, uncompressedPtr + actualSize);\r\n        instance.exports.free(compressedPtr);\r\n        instance.exports.free(uncompressedPtr);\r\n\r\n        return dec;\r\n    }\r\n}\r\n\r\n/**\r\n * BSD License\r\n *\r\n * For Zstandard software\r\n *\r\n * Copyright (c) 2016-present, Yann Collet, Facebook, Inc. All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *    list of conditions and the following disclaimer.\r\n *\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n *  * Neither the name Facebook nor the names of its contributors may be used to\r\n *    endorse or promote products derived from this software without specific\r\n *    prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\r\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\r\n * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n"]}