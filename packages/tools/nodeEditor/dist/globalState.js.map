{"version":3,"file":"globalState.js","sourceRoot":"","sources":["../src/globalState.ts"],"names":[],"mappings":"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","sourcesContent":["import type { NodeMaterial } from \"core/Materials/Node/nodeMaterial\";\r\nimport { Observable } from \"core/Misc/observable\";\r\nimport { LogEntry } from \"./components/log/logComponent\";\r\nimport type { NodeMaterialBlock } from \"core/Materials/Node/nodeMaterialBlock\";\r\nimport { PreviewType } from \"./components/preview/previewType\";\r\nimport { DataStorage } from \"core/Misc/dataStorage\";\r\nimport { Color4 } from \"core/Maths/math.color\";\r\nimport { NodeMaterialModes } from \"core/Materials/Node/Enums/nodeMaterialModes\";\r\nimport { ParticleSystem } from \"core/Particles/particleSystem\";\r\nimport { RegisterElbowSupport } from \"./graphSystem/registerElbowSupport\";\r\nimport { RegisterNodePortDesign } from \"./graphSystem/registerNodePortDesign\";\r\nimport type { GraphNode } from \"shared-ui-components/nodeGraphSystem/graphNode\";\r\nimport type { GraphFrame } from \"shared-ui-components/nodeGraphSystem/graphFrame\";\r\nimport type { Nullable } from \"core/types\";\r\nimport { LockObject } from \"shared-ui-components/tabs/propertyGrids/lockObject\";\r\nimport { StateManager } from \"shared-ui-components/nodeGraphSystem/stateManager\";\r\nimport { RegisterDefaultInput } from \"./graphSystem/registerDefaultInput\";\r\nimport { RegisterExportData } from \"./graphSystem/registerExportData\";\r\nimport type { FilesInput } from \"core/Misc/filesInput\";\r\nimport { RegisterDebugSupport } from \"./graphSystem/registerDebugSupport\";\r\nimport { SerializationTools } from \"./serializationTools\";\r\n\r\nexport class GlobalState {\r\n    hostElement: HTMLElement;\r\n    hostDocument: Document;\r\n    hostWindow: Window;\r\n    stateManager: StateManager;\r\n    onBuiltObservable = new Observable<void>();\r\n    onResetRequiredObservable = new Observable<boolean>();\r\n    onClearUndoStack = new Observable<void>();\r\n    onZoomToFitRequiredObservable = new Observable<void>();\r\n    onReOrganizedRequiredObservable = new Observable<void>();\r\n    onLogRequiredObservable = new Observable<LogEntry>();\r\n    onIsLoadingChanged = new Observable<boolean>();\r\n    onLightUpdated = new Observable<void>();\r\n    onBackgroundHDRUpdated = new Observable<void>();\r\n    onPreviewBackgroundChanged = new Observable<void>();\r\n    onBackFaceCullingChanged = new Observable<void>();\r\n    onDepthPrePassChanged = new Observable<void>();\r\n    onAnimationCommandActivated = new Observable<void>();\r\n    onImportFrameObservable = new Observable<any>();\r\n    onPopupClosedObservable = new Observable<void>();\r\n    onDropEventReceivedObservable = new Observable<DragEvent>();\r\n    onGetNodeFromBlock: (block: NodeMaterialBlock) => GraphNode;\r\n    previewType: PreviewType;\r\n    previewFile: File;\r\n    envType: PreviewType;\r\n    envFile: File;\r\n    particleSystemBlendMode = ParticleSystem.BLENDMODE_ONEONE;\r\n    listOfCustomPreviewFiles: File[] = [];\r\n    rotatePreview: boolean;\r\n    backgroundColor: Color4;\r\n    backFaceCulling: boolean;\r\n    depthPrePass: boolean;\r\n    lockObject = new LockObject();\r\n    hemisphericLight: boolean;\r\n    directionalLight0: boolean;\r\n    directionalLight1: boolean;\r\n    backgroundHDR: boolean;\r\n    controlCamera: boolean;\r\n    _mode: NodeMaterialModes;\r\n    _engine: number;\r\n    pointerOverCanvas: boolean = false;\r\n    filesInput: FilesInput;\r\n    onRefreshPreviewMeshControlComponentRequiredObservable = new Observable<void>();\r\n\r\n    /** Gets the mode */\r\n    public get mode(): NodeMaterialModes {\r\n        return this._mode;\r\n    }\r\n\r\n    /** Sets the mode */\r\n    public set mode(m: NodeMaterialModes) {\r\n        DataStorage.WriteNumber(\"Mode\", m);\r\n        this._mode = m;\r\n        this.stateManager.onPreviewCommandActivated.notifyObservers(true);\r\n    }\r\n\r\n    /** Gets the engine */\r\n    public get engine(): number {\r\n        return this._engine;\r\n    }\r\n\r\n    /** Sets the engine */\r\n    public set engine(e: number) {\r\n        if (e === this._engine) {\r\n            return;\r\n        }\r\n        DataStorage.WriteNumber(\"Engine\", e);\r\n        this._engine = e;\r\n        location.reload();\r\n    }\r\n\r\n    private _nodeMaterial: NodeMaterial;\r\n\r\n    /**\r\n     * Gets the current node material\r\n     */\r\n    public get nodeMaterial(): NodeMaterial {\r\n        return this._nodeMaterial;\r\n    }\r\n\r\n    /**\r\n     * Sets the current node material\r\n     */\r\n    public set nodeMaterial(nodeMaterial: NodeMaterial) {\r\n        this._nodeMaterial = nodeMaterial;\r\n        nodeMaterial.onBuildObservable.add(() => {\r\n            this.onLogRequiredObservable.notifyObservers(new LogEntry(\"Node material build successful\", false));\r\n\r\n            SerializationTools.UpdateLocations(nodeMaterial, this);\r\n\r\n            this.onBuiltObservable.notifyObservers();\r\n        });\r\n        nodeMaterial.onBuildErrorObservable.add((err: string) => {\r\n            this.onLogRequiredObservable.notifyObservers(new LogEntry(err, true));\r\n        });\r\n    }\r\n\r\n    customSave?: { label: string; action: (data: string) => Promise<void> };\r\n\r\n    public constructor() {\r\n        this.previewType = DataStorage.ReadNumber(\"PreviewType\", PreviewType.Box);\r\n        this.envType = DataStorage.ReadNumber(\"EnvType\", PreviewType.Room);\r\n        this.backFaceCulling = DataStorage.ReadBoolean(\"BackFaceCulling\", true);\r\n        this.depthPrePass = DataStorage.ReadBoolean(\"DepthPrePass\", false);\r\n        this.hemisphericLight = DataStorage.ReadBoolean(\"HemisphericLight\", true);\r\n        this.directionalLight0 = DataStorage.ReadBoolean(\"DirectionalLight0\", false);\r\n        this.directionalLight1 = DataStorage.ReadBoolean(\"DirectionalLight1\", false);\r\n        this.backgroundHDR = DataStorage.ReadBoolean(\"backgroundHDR\", false);\r\n        this.controlCamera = DataStorage.ReadBoolean(\"ControlCamera\", true);\r\n        this._mode = DataStorage.ReadNumber(\"Mode\", NodeMaterialModes.Material);\r\n        this._engine = DataStorage.ReadNumber(\"Engine\", 0);\r\n\r\n        this.stateManager = new StateManager();\r\n        this.stateManager.data = this;\r\n        this.stateManager.lockObject = this.lockObject;\r\n        this.stateManager.getScene = () => this.nodeMaterial.getScene();\r\n\r\n        RegisterElbowSupport(this.stateManager);\r\n        RegisterDebugSupport(this.stateManager);\r\n        RegisterNodePortDesign(this.stateManager);\r\n        RegisterDefaultInput(this.stateManager);\r\n        RegisterExportData(this.stateManager);\r\n\r\n        const r = DataStorage.ReadNumber(\"BackgroundColorR\", 0.12549019607843137);\r\n        const g = DataStorage.ReadNumber(\"BackgroundColorG\", 0.09803921568627451);\r\n        const b = DataStorage.ReadNumber(\"BackgroundColorB\", 0.25098039215686274);\r\n        this.backgroundColor = new Color4(r, g, b, 1.0);\r\n    }\r\n\r\n    storeEditorData(serializationObject: any, frame?: Nullable<GraphFrame>) {\r\n        this.stateManager.storeEditorData(serializationObject, frame);\r\n    }\r\n}\r\n"]}