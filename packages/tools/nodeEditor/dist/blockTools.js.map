{"version":3,"file":"blockTools.js","sourceRoot":"","sources":["../src/blockTools.ts"],"names":[],"mappings":"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","sourcesContent":["import { DiscardBlock } from \"core/Materials/Node/Blocks/Fragment/discardBlock\";\r\nimport { BonesBlock } from \"core/Materials/Node/Blocks/Vertex/bonesBlock\";\r\nimport { InstancesBlock } from \"core/Materials/Node/Blocks/Vertex/instancesBlock\";\r\nimport { MorphTargetsBlock } from \"core/Materials/Node/Blocks/Vertex/morphTargetsBlock\";\r\nimport { ImageProcessingBlock } from \"core/Materials/Node/Blocks/Fragment/imageProcessingBlock\";\r\nimport { ColorMergerBlock } from \"core/Materials/Node/Blocks/colorMergerBlock\";\r\nimport { VectorMergerBlock } from \"core/Materials/Node/Blocks/vectorMergerBlock\";\r\nimport { ColorSplitterBlock } from \"core/Materials/Node/Blocks/colorSplitterBlock\";\r\nimport { VectorSplitterBlock } from \"core/Materials/Node/Blocks/vectorSplitterBlock\";\r\nimport { RemapBlock } from \"core/Materials/Node/Blocks/remapBlock\";\r\nimport { TextureBlock } from \"core/Materials/Node/Blocks/Dual/textureBlock\";\r\nimport { ReflectionTextureBlock } from \"core/Materials/Node/Blocks/Dual/reflectionTextureBlock\";\r\nimport { LightBlock } from \"core/Materials/Node/Blocks/Dual/lightBlock\";\r\nimport { FogBlock } from \"core/Materials/Node/Blocks/Dual/fogBlock\";\r\nimport { VertexOutputBlock } from \"core/Materials/Node/Blocks/Vertex/vertexOutputBlock\";\r\nimport { FragmentOutputBlock } from \"core/Materials/Node/Blocks/Fragment/fragmentOutputBlock\";\r\nimport { PrePassOutputBlock } from \"core/Materials/Node/Blocks/Fragment/prePassOutputBlock\";\r\nimport { NormalizeBlock } from \"core/Materials/Node/Blocks/normalizeBlock\";\r\nimport { AddBlock } from \"core/Materials/Node/Blocks/addBlock\";\r\nimport { ModBlock } from \"core/Materials/Node/Blocks/modBlock\";\r\nimport { ScaleBlock } from \"core/Materials/Node/Blocks/scaleBlock\";\r\nimport { TrigonometryBlock, TrigonometryBlockOperations } from \"core/Materials/Node/Blocks/trigonometryBlock\";\r\nimport { ConditionalBlockConditions, ConditionalBlock } from \"core/Materials/Node/Blocks/conditionalBlock\";\r\nimport { ClampBlock } from \"core/Materials/Node/Blocks/clampBlock\";\r\nimport { CrossBlock } from \"core/Materials/Node/Blocks/crossBlock\";\r\nimport { DotBlock } from \"core/Materials/Node/Blocks/dotBlock\";\r\nimport { MultiplyBlock } from \"core/Materials/Node/Blocks/multiplyBlock\";\r\nimport { TransformBlock } from \"core/Materials/Node/Blocks/transformBlock\";\r\nimport { NodeMaterialBlockConnectionPointTypes } from \"core/Materials/Node/Enums/nodeMaterialBlockConnectionPointTypes\";\r\nimport { FresnelBlock } from \"core/Materials/Node/Blocks/fresnelBlock\";\r\nimport { LerpBlock } from \"core/Materials/Node/Blocks/lerpBlock\";\r\nimport { NLerpBlock } from \"core/Materials/Node/Blocks/nLerpBlock\";\r\nimport { DivideBlock } from \"core/Materials/Node/Blocks/divideBlock\";\r\nimport { SubtractBlock } from \"core/Materials/Node/Blocks/subtractBlock\";\r\nimport { StepBlock } from \"core/Materials/Node/Blocks/stepBlock\";\r\nimport { SmoothStepBlock } from \"core/Materials/Node/Blocks/smoothStepBlock\";\r\nimport { InputBlock } from \"core/Materials/Node/Blocks/Input/inputBlock\";\r\nimport { NodeMaterialSystemValues } from \"core/Materials/Node/Enums/nodeMaterialSystemValues\";\r\nimport { AnimatedInputBlockTypes } from \"core/Materials/Node/Blocks/Input/animatedInputBlockTypes\";\r\nimport { OneMinusBlock } from \"core/Materials/Node/Blocks/oneMinusBlock\";\r\nimport { ViewDirectionBlock } from \"core/Materials/Node/Blocks/viewDirectionBlock\";\r\nimport { LightInformationBlock } from \"core/Materials/Node/Blocks/Vertex/lightInformationBlock\";\r\nimport { MaxBlock } from \"core/Materials/Node/Blocks/maxBlock\";\r\nimport { MinBlock } from \"core/Materials/Node/Blocks/minBlock\";\r\nimport { PerturbNormalBlock } from \"core/Materials/Node/Blocks/Fragment/perturbNormalBlock\";\r\nimport { TBNBlock } from \"core/Materials/Node/Blocks/Fragment/TBNBlock\";\r\nimport { LengthBlock } from \"core/Materials/Node/Blocks/lengthBlock\";\r\nimport { DistanceBlock } from \"core/Materials/Node/Blocks/distanceBlock\";\r\nimport { FrontFacingBlock } from \"core/Materials/Node/Blocks/Fragment/frontFacingBlock\";\r\nimport { MeshAttributeExistsBlock } from \"core/Materials/Node/Blocks/meshAttributeExistsBlock\";\r\nimport { NegateBlock } from \"core/Materials/Node/Blocks/negateBlock\";\r\nimport { PowBlock } from \"core/Materials/Node/Blocks/powBlock\";\r\nimport type { Scene } from \"core/scene\";\r\nimport { RandomNumberBlock } from \"core/Materials/Node/Blocks/randomNumberBlock\";\r\nimport { ReplaceColorBlock } from \"core/Materials/Node/Blocks/replaceColorBlock\";\r\nimport { PosterizeBlock } from \"core/Materials/Node/Blocks/posterizeBlock\";\r\nimport { ArcTan2Block } from \"core/Materials/Node/Blocks/arcTan2Block\";\r\nimport { ReciprocalBlock } from \"core/Materials/Node/Blocks/reciprocalBlock\";\r\nimport { GradientBlock } from \"core/Materials/Node/Blocks/gradientBlock\";\r\nimport { WaveBlock, WaveBlockKind } from \"core/Materials/Node/Blocks/waveBlock\";\r\nimport type { NodeMaterial } from \"core/Materials/Node/nodeMaterial\";\r\nimport { WorleyNoise3DBlock } from \"core/Materials/Node/Blocks/worleyNoise3DBlock\";\r\nimport { SimplexPerlin3DBlock } from \"core/Materials/Node/Blocks/simplexPerlin3DBlock\";\r\nimport { NormalBlendBlock } from \"core/Materials/Node/Blocks/normalBlendBlock\";\r\nimport { Rotate2dBlock } from \"core/Materials/Node/Blocks/rotate2dBlock\";\r\nimport { DerivativeBlock } from \"core/Materials/Node/Blocks/Fragment/derivativeBlock\";\r\nimport { RefractBlock } from \"core/Materials/Node/Blocks/refractBlock\";\r\nimport { ReflectBlock } from \"core/Materials/Node/Blocks/reflectBlock\";\r\nimport { DesaturateBlock } from \"core/Materials/Node/Blocks/desaturateBlock\";\r\nimport { PBRMetallicRoughnessBlock } from \"core/Materials/Node/Blocks/PBR/pbrMetallicRoughnessBlock\";\r\nimport { SheenBlock } from \"core/Materials/Node/Blocks/PBR/sheenBlock\";\r\nimport { AnisotropyBlock } from \"core/Materials/Node/Blocks/PBR/anisotropyBlock\";\r\nimport { ReflectionBlock } from \"core/Materials/Node/Blocks/PBR/reflectionBlock\";\r\nimport { ClearCoatBlock } from \"core/Materials/Node/Blocks/PBR/clearCoatBlock\";\r\nimport { RefractionBlock } from \"core/Materials/Node/Blocks/PBR/refractionBlock\";\r\nimport { SubSurfaceBlock } from \"core/Materials/Node/Blocks/PBR/subSurfaceBlock\";\r\nimport { CurrentScreenBlock } from \"core/Materials/Node/Blocks/Dual/currentScreenBlock\";\r\nimport { ParticleTextureBlock } from \"core/Materials/Node/Blocks/Particle/particleTextureBlock\";\r\nimport { ParticleRampGradientBlock } from \"core/Materials/Node/Blocks/Particle/particleRampGradientBlock\";\r\nimport { ParticleBlendMultiplyBlock } from \"core/Materials/Node/Blocks/Particle/particleBlendMultiplyBlock\";\r\nimport { GaussianSplattingBlock } from \"core/Materials/Node/Blocks/GaussianSplatting/gaussianSplattingBlock\";\r\nimport { GaussianBlock } from \"core/Materials/Node/Blocks/GaussianSplatting/gaussianBlock\";\r\nimport { SplatReaderBlock } from \"core/Materials/Node/Blocks/GaussianSplatting/splatReaderBlock\";\r\nimport { NodeMaterialModes } from \"core/Materials/Node/Enums/nodeMaterialModes\";\r\nimport { FragCoordBlock } from \"core/Materials/Node/Blocks/Fragment/fragCoordBlock\";\r\nimport { ScreenSizeBlock } from \"core/Materials/Node/Blocks/Fragment/screenSizeBlock\";\r\nimport { MatrixBuilderBlock } from \"core/Materials/Node/Blocks/matrixBuilderBlock\";\r\nimport { SceneDepthBlock } from \"core/Materials/Node/Blocks/Dual/sceneDepthBlock\";\r\nimport { ImageSourceBlock } from \"core/Materials/Node/Blocks/Dual/imageSourceBlock\";\r\nimport { CloudBlock } from \"core/Materials/Node/Blocks/cloudBlock\";\r\nimport { VoronoiNoiseBlock } from \"core/Materials/Node/Blocks/voronoiNoiseBlock\";\r\nimport { ScreenSpaceBlock } from \"core/Materials/Node/Blocks/Fragment/screenSpaceBlock\";\r\nimport { HeightToNormalBlock } from \"core/Materials/Node/Blocks/Fragment/heightToNormalBlock\";\r\nimport { TwirlBlock } from \"core/Materials/Node/Blocks/Fragment/twirlBlock\";\r\nimport { ElbowBlock } from \"core/Materials/Node/Blocks/elbowBlock\";\r\nimport { ClipPlanesBlock } from \"core/Materials/Node/Blocks/Dual/clipPlanesBlock\";\r\nimport { FragDepthBlock } from \"core/Materials/Node/Blocks/Fragment/fragDepthBlock\";\r\nimport { ShadowMapBlock } from \"core/Materials/Node/Blocks/Fragment/shadowMapBlock\";\r\nimport { TriPlanarBlock } from \"core/Materials/Node/Blocks/triPlanarBlock\";\r\nimport { BiPlanarBlock } from \"core/Materials/Node/Blocks/biPlanarBlock\";\r\nimport { MatrixDeterminantBlock } from \"core/Materials/Node/Blocks/matrixDeterminantBlock\";\r\nimport { MatrixTransposeBlock } from \"core/Materials/Node/Blocks/matrixTransposeBlock\";\r\nimport { CurveBlock } from \"core/Materials/Node/Blocks/curveBlock\";\r\nimport { PrePassTextureBlock } from \"core/Materials/Node/Blocks/Input/prePassTextureBlock\";\r\nimport { NodeMaterialTeleportInBlock } from \"core/Materials/Node/Blocks/Teleport/teleportInBlock\";\r\nimport { NodeMaterialTeleportOutBlock } from \"core/Materials/Node/Blocks/Teleport/teleportOutBlock\";\r\nimport { ColorConverterBlock } from \"core/Materials/Node/Blocks/colorConverterBlock\";\r\nimport { LoopBlock } from \"core/Materials/Node/Blocks/loopBlock\";\r\nimport { StorageReadBlock } from \"core/Materials/Node/Blocks/storageReadBlock\";\r\nimport { StorageWriteBlock } from \"core/Materials/Node/Blocks/storageWriteBlock\";\r\n\r\nexport class BlockTools {\r\n    public static GetBlockFromString(data: string, scene: Scene, nodeMaterial: NodeMaterial) {\r\n        switch (data) {\r\n            case \"StorageWriteBlock\":\r\n                return new StorageWriteBlock(\"StorageWrite\");\r\n            case \"StorageReadBlock\":\r\n                return new StorageReadBlock(\"StorageRead\");\r\n            case \"LoopBlock\":\r\n                return new LoopBlock(\"Loop\");\r\n            case \"ColorConverterBlock\":\r\n                return new ColorConverterBlock(\"ColorConverter\");\r\n            case \"TeleportInBlock\":\r\n                return new NodeMaterialTeleportInBlock(\"Teleport In\");\r\n            case \"TeleportOutBlock\":\r\n                return new NodeMaterialTeleportOutBlock(\"Teleport Out\");\r\n            case \"HeightToNormalBlock\":\r\n                return new HeightToNormalBlock(\"HeightToNormal\");\r\n            case \"ElbowBlock\":\r\n                return new ElbowBlock(\"\");\r\n            case \"TwirlBlock\":\r\n                return new TwirlBlock(\"Twirl\");\r\n            case \"VoronoiNoiseBlock\":\r\n                return new VoronoiNoiseBlock(\"VoronoiNoise\");\r\n            case \"ScreenSpaceBlock\":\r\n                return new ScreenSpaceBlock(\"ScreenSpace\");\r\n            case \"CloudBlock\":\r\n                return new CloudBlock(\"Cloud\");\r\n            case \"MatrixBuilderBlock\":\r\n                return new MatrixBuilderBlock(\"MatrixBuilder\");\r\n            case \"DesaturateBlock\":\r\n                return new DesaturateBlock(\"Desaturate\");\r\n            case \"RefractBlock\":\r\n                return new RefractBlock(\"Refract\");\r\n            case \"ReflectBlock\":\r\n                return new ReflectBlock(\"Reflect\");\r\n            case \"DerivativeBlock\":\r\n                return new DerivativeBlock(\"Derivative\");\r\n            case \"Rotate2dBlock\":\r\n                return new Rotate2dBlock(\"Rotate2d\");\r\n            case \"NormalBlendBlock\":\r\n                return new NormalBlendBlock(\"NormalBlend\");\r\n            case \"WorleyNoise3DBlock\":\r\n                return new WorleyNoise3DBlock(\"WorleyNoise3D\");\r\n            case \"SimplexPerlin3DBlock\":\r\n                return new SimplexPerlin3DBlock(\"SimplexPerlin3D\");\r\n            case \"BonesBlock\":\r\n                return new BonesBlock(\"Bones\");\r\n            case \"InstancesBlock\":\r\n                return new InstancesBlock(\"Instances\");\r\n            case \"MorphTargetsBlock\":\r\n                return new MorphTargetsBlock(\"MorphTargets\");\r\n            case \"DiscardBlock\":\r\n                return new DiscardBlock(\"Discard\");\r\n            case \"PrePassTextureBlock\":\r\n                return new PrePassTextureBlock(\"PrePassTexture\");\r\n            case \"ImageProcessingBlock\":\r\n                return new ImageProcessingBlock(\"ImageProcessing\");\r\n            case \"ColorMergerBlock\":\r\n                return new ColorMergerBlock(\"ColorMerger\");\r\n            case \"VectorMergerBlock\":\r\n                return new VectorMergerBlock(\"VectorMerger\");\r\n            case \"ColorSplitterBlock\":\r\n                return new ColorSplitterBlock(\"ColorSplitter\");\r\n            case \"VectorSplitterBlock\":\r\n                return new VectorSplitterBlock(\"VectorSplitter\");\r\n            case \"TextureBlock\":\r\n                return new TextureBlock(\"Texture\", nodeMaterial.mode === NodeMaterialModes.Particle);\r\n            case \"ReflectionTextureBlock\":\r\n                return new ReflectionTextureBlock(\"Reflection texture\");\r\n            case \"LightBlock\":\r\n                return new LightBlock(\"Lights\");\r\n            case \"FogBlock\":\r\n                return new FogBlock(\"Fog\");\r\n            case \"VertexOutputBlock\":\r\n                return new VertexOutputBlock(\"VertexOutput\");\r\n            case \"FragmentOutputBlock\":\r\n                return new FragmentOutputBlock(\"FragmentOutput\");\r\n            case \"PrePassOutputBlock\":\r\n                return new PrePassOutputBlock(\"PrePassOutput\");\r\n            case \"AddBlock\":\r\n                return new AddBlock(\"Add\");\r\n            case \"ClampBlock\":\r\n                return new ClampBlock(\"Clamp\");\r\n            case \"ScaleBlock\":\r\n                return new ScaleBlock(\"Scale\");\r\n            case \"CrossBlock\":\r\n                return new CrossBlock(\"Cross\");\r\n            case \"DotBlock\":\r\n                return new DotBlock(\"Dot\");\r\n            case \"PowBlock\":\r\n                return new PowBlock(\"Pow\");\r\n            case \"MultiplyBlock\":\r\n                return new MultiplyBlock(\"Multiply\");\r\n            case \"TransformBlock\":\r\n                return new TransformBlock(\"Transform\");\r\n            case \"TrigonometryBlock\":\r\n                return new TrigonometryBlock(\"Trigonometry\");\r\n            case \"RemapBlock\":\r\n                return new RemapBlock(\"Remap\");\r\n            case \"NormalizeBlock\":\r\n                return new NormalizeBlock(\"Normalize\");\r\n            case \"FresnelBlock\":\r\n                return new FresnelBlock(\"Fresnel\");\r\n            case \"LerpBlock\":\r\n                return new LerpBlock(\"Lerp\");\r\n            case \"NLerpBlock\":\r\n                return new NLerpBlock(\"NLerp\");\r\n            case \"DivideBlock\":\r\n                return new DivideBlock(\"Divide\");\r\n            case \"SubtractBlock\":\r\n                return new SubtractBlock(\"Subtract\");\r\n            case \"ModBlock\":\r\n                return new ModBlock(\"Mod\");\r\n            case \"StepBlock\":\r\n                return new StepBlock(\"Step\");\r\n            case \"SmoothStepBlock\":\r\n                return new SmoothStepBlock(\"Smooth step\");\r\n            case \"OneMinusBlock\":\r\n                return new OneMinusBlock(\"One minus\");\r\n            case \"ReciprocalBlock\":\r\n                return new ReciprocalBlock(\"Reciprocal\");\r\n            case \"ViewDirectionBlock\":\r\n                return new ViewDirectionBlock(\"View direction\");\r\n            case \"LightInformationBlock\": {\r\n                const lightInformationBlock = new LightInformationBlock(\"Light information\");\r\n                lightInformationBlock.light = scene.lights.length ? scene.lights[0] : null;\r\n                return lightInformationBlock;\r\n            }\r\n            case \"MaxBlock\":\r\n                return new MaxBlock(\"Max\");\r\n            case \"MinBlock\":\r\n                return new MinBlock(\"Min\");\r\n            case \"LengthBlock\":\r\n                return new LengthBlock(\"Length\");\r\n            case \"DistanceBlock\":\r\n                return new DistanceBlock(\"Distance\");\r\n            case \"NegateBlock\":\r\n                return new NegateBlock(\"Negate\");\r\n            case \"PerturbNormalBlock\":\r\n                return new PerturbNormalBlock(\"Perturb normal\");\r\n            case \"TBNBlock\":\r\n                return new TBNBlock(\"TBN\");\r\n            case \"RandomNumberBlock\":\r\n                return new RandomNumberBlock(\"Random number\");\r\n            case \"ReplaceColorBlock\":\r\n                return new ReplaceColorBlock(\"Replace color\");\r\n            case \"PosterizeBlock\":\r\n                return new PosterizeBlock(\"Posterize\");\r\n            case \"ArcTan2Block\":\r\n                return new ArcTan2Block(\"ArcTan2\");\r\n            case \"GradientBlock\":\r\n                return new GradientBlock(\"Gradient\");\r\n            case \"FrontFacingBlock\":\r\n                return new FrontFacingBlock(\"Front facing\");\r\n            case \"MeshAttributeExistsBlock\":\r\n                return new MeshAttributeExistsBlock(\"Attribute exists\");\r\n            case \"CosBlock\": {\r\n                const cosBlock = new TrigonometryBlock(\"Cos\");\r\n                cosBlock.operation = TrigonometryBlockOperations.Cos;\r\n                return cosBlock;\r\n            }\r\n            case \"SinBlock\": {\r\n                const sinBlock = new TrigonometryBlock(\"Sin\");\r\n                sinBlock.operation = TrigonometryBlockOperations.Sin;\r\n                return sinBlock;\r\n            }\r\n            case \"AbsBlock\": {\r\n                const absBlock = new TrigonometryBlock(\"Abs\");\r\n                absBlock.operation = TrigonometryBlockOperations.Abs;\r\n                return absBlock;\r\n            }\r\n            case \"SqrtBlock\": {\r\n                const sqrtBlock = new TrigonometryBlock(\"Sqrt\");\r\n                sqrtBlock.operation = TrigonometryBlockOperations.Sqrt;\r\n                return sqrtBlock;\r\n            }\r\n            case \"ArcCosBlock\": {\r\n                const acosBlock = new TrigonometryBlock(\"ArcCos\");\r\n                acosBlock.operation = TrigonometryBlockOperations.ArcCos;\r\n                return acosBlock;\r\n            }\r\n            case \"ArcSinBlock\": {\r\n                const asinBlock = new TrigonometryBlock(\"ArcSin\");\r\n                asinBlock.operation = TrigonometryBlockOperations.ArcSin;\r\n                return asinBlock;\r\n            }\r\n            case \"TanBlock\": {\r\n                const tanBlock = new TrigonometryBlock(\"Tan\");\r\n                tanBlock.operation = TrigonometryBlockOperations.Tan;\r\n                return tanBlock;\r\n            }\r\n            case \"ArcTanBlock\": {\r\n                const atanBlock = new TrigonometryBlock(\"ArcTan\");\r\n                atanBlock.operation = TrigonometryBlockOperations.ArcTan;\r\n                return atanBlock;\r\n            }\r\n            case \"FractBlock\": {\r\n                const fractBlock = new TrigonometryBlock(\"Fract\");\r\n                fractBlock.operation = TrigonometryBlockOperations.Fract;\r\n                return fractBlock;\r\n            }\r\n            case \"SignBlock\": {\r\n                const signBlock = new TrigonometryBlock(\"Sign\");\r\n                signBlock.operation = TrigonometryBlockOperations.Sign;\r\n                return signBlock;\r\n            }\r\n            case \"LogBlock\": {\r\n                const logBlock = new TrigonometryBlock(\"Log\");\r\n                logBlock.operation = TrigonometryBlockOperations.Log;\r\n                return logBlock;\r\n            }\r\n            case \"ExpBlock\": {\r\n                const expBlock = new TrigonometryBlock(\"Exp\");\r\n                expBlock.operation = TrigonometryBlockOperations.Exp;\r\n                return expBlock;\r\n            }\r\n            case \"Exp2Block\": {\r\n                const exp2Block = new TrigonometryBlock(\"Exp2\");\r\n                exp2Block.operation = TrigonometryBlockOperations.Exp2;\r\n                return exp2Block;\r\n            }\r\n            case \"DegreesToRadiansBlock\": {\r\n                const degreesToRadiansBlock = new TrigonometryBlock(\"Degrees to radians\");\r\n                degreesToRadiansBlock.operation = TrigonometryBlockOperations.Radians;\r\n                return degreesToRadiansBlock;\r\n            }\r\n            case \"RadiansToDegreesBlock\": {\r\n                const radiansToDegreesBlock = new TrigonometryBlock(\"Radians to degrees\");\r\n                radiansToDegreesBlock.operation = TrigonometryBlockOperations.Degrees;\r\n                return radiansToDegreesBlock;\r\n            }\r\n            case \"RoundBlock\": {\r\n                const roundBlock = new TrigonometryBlock(\"Round\");\r\n                roundBlock.operation = TrigonometryBlockOperations.Round;\r\n                return roundBlock;\r\n            }\r\n            case \"CeilingBlock\": {\r\n                const ceilingBlock = new TrigonometryBlock(\"Ceiling\");\r\n                ceilingBlock.operation = TrigonometryBlockOperations.Ceiling;\r\n                return ceilingBlock;\r\n            }\r\n            case \"FloorBlock\": {\r\n                const floorBlock = new TrigonometryBlock(\"Floor\");\r\n                floorBlock.operation = TrigonometryBlockOperations.Floor;\r\n                return floorBlock;\r\n            }\r\n            case \"SawToothWaveBlock\": {\r\n                const sawToothWaveBlock = new WaveBlock(\"SawTooth wave\");\r\n                sawToothWaveBlock.kind = WaveBlockKind.SawTooth;\r\n                return sawToothWaveBlock;\r\n            }\r\n            case \"SquareWaveBlock\": {\r\n                const squareWaveBlock = new WaveBlock(\"Square wave\");\r\n                squareWaveBlock.kind = WaveBlockKind.Square;\r\n                return squareWaveBlock;\r\n            }\r\n            case \"TriangleWaveBlock\": {\r\n                const triangleWaveBlock = new WaveBlock(\"Triangle wave\");\r\n                triangleWaveBlock.kind = WaveBlockKind.Triangle;\r\n                return triangleWaveBlock;\r\n            }\r\n            case \"SetBlock\": {\r\n                const cosBlock = new TrigonometryBlock(\"Set\");\r\n                cosBlock.operation = TrigonometryBlockOperations.Set;\r\n                return cosBlock;\r\n            }\r\n            case \"WorldMatrixBlock\": {\r\n                const worldMatrixBlock = new InputBlock(\"World\");\r\n                worldMatrixBlock.setAsSystemValue(NodeMaterialSystemValues.World);\r\n                return worldMatrixBlock;\r\n            }\r\n            case \"WorldViewMatrixBlock\": {\r\n                const worldViewMatrixBlock = new InputBlock(\"World x View\");\r\n                worldViewMatrixBlock.setAsSystemValue(NodeMaterialSystemValues.WorldView);\r\n                return worldViewMatrixBlock;\r\n            }\r\n            case \"WorldViewProjectionMatrixBlock\": {\r\n                const worldViewProjectionMatrixBlock = new InputBlock(\"World x View x Projection\");\r\n                worldViewProjectionMatrixBlock.setAsSystemValue(NodeMaterialSystemValues.WorldViewProjection);\r\n                return worldViewProjectionMatrixBlock;\r\n            }\r\n            case \"ViewMatrixBlock\": {\r\n                const viewMatrixBlock = new InputBlock(\"View\");\r\n                viewMatrixBlock.setAsSystemValue(NodeMaterialSystemValues.View);\r\n                return viewMatrixBlock;\r\n            }\r\n            case \"ViewProjectionMatrixBlock\": {\r\n                const viewProjectionMatrixBlock = new InputBlock(\"View x Projection\");\r\n                viewProjectionMatrixBlock.setAsSystemValue(NodeMaterialSystemValues.ViewProjection);\r\n                return viewProjectionMatrixBlock;\r\n            }\r\n            case \"ProjectionMatrixBlock\": {\r\n                const projectionMatrixBlock = new InputBlock(\"Projection\");\r\n                projectionMatrixBlock.setAsSystemValue(NodeMaterialSystemValues.Projection);\r\n                return projectionMatrixBlock;\r\n            }\r\n            case \"CameraPositionBlock\": {\r\n                const cameraPosition = new InputBlock(\"Camera position\");\r\n                cameraPosition.setAsSystemValue(NodeMaterialSystemValues.CameraPosition);\r\n                return cameraPosition;\r\n            }\r\n            case \"CameraParametersBlock\": {\r\n                const cameraParameters = new InputBlock(\"Camera parameters\");\r\n                cameraParameters.setAsSystemValue(NodeMaterialSystemValues.CameraParameters);\r\n\r\n                const splitter = new VectorSplitterBlock(\"Vector splitter\");\r\n                cameraParameters.connectTo(splitter);\r\n                return splitter;\r\n            }\r\n            case \"FogColorBlock\": {\r\n                const fogColor = new InputBlock(\"Fog color\");\r\n                fogColor.setAsSystemValue(NodeMaterialSystemValues.FogColor);\r\n                return fogColor;\r\n            }\r\n            case \"PositionBlock\": {\r\n                const meshPosition = new InputBlock(\"position\");\r\n                meshPosition.setAsAttribute(\"position\");\r\n                return meshPosition;\r\n            }\r\n            case \"ScreenPositionBlock\": {\r\n                const meshPosition = new InputBlock(\"position\");\r\n                meshPosition.setAsAttribute(\"position2d\");\r\n                return meshPosition;\r\n            }\r\n            case \"UVBlock\": {\r\n                const meshUV = new InputBlock(\"uv\");\r\n                meshUV.setAsAttribute(\"uv\");\r\n                return meshUV;\r\n            }\r\n            case \"ColorBlock\": {\r\n                const meshColor = new InputBlock(\"color\");\r\n                meshColor.setAsAttribute(\"color\");\r\n                return meshColor;\r\n            }\r\n            case \"InstanceColorBlock\": {\r\n                const meshColor = new InputBlock(\"Instance Color\");\r\n                meshColor.setAsAttribute(\"instanceColor\");\r\n                return meshColor;\r\n            }\r\n            case \"SplatIndexBlock\": {\r\n                const splatIndex = new InputBlock(\"SplatIndex\");\r\n                splatIndex.setAsAttribute(\"splatIndex\");\r\n                return splatIndex;\r\n            }\r\n            case \"NormalBlock\": {\r\n                const meshNormal = new InputBlock(\"normal\");\r\n                meshNormal.setAsAttribute(\"normal\");\r\n                return meshNormal;\r\n            }\r\n            case \"TangentBlock\": {\r\n                const meshTangent = new InputBlock(\"tangent\");\r\n                meshTangent.setAsAttribute(\"tangent\");\r\n                return meshTangent;\r\n            }\r\n            case \"MatrixIndicesBlock\": {\r\n                const meshMatrixIndices = new InputBlock(\"matricesIndices\");\r\n                meshMatrixIndices.setAsAttribute(\"matricesIndices\");\r\n                return meshMatrixIndices;\r\n            }\r\n            case \"MatrixWeightsBlock\": {\r\n                const meshMatrixWeights = new InputBlock(\"matricesWeights\");\r\n                meshMatrixWeights.setAsAttribute(\"matricesWeights\");\r\n                return meshMatrixWeights;\r\n            }\r\n            case \"MatrixIndicesExtraBlock\": {\r\n                const meshMatrixIndices = new InputBlock(\"matricesIndicesExtra\");\r\n                meshMatrixIndices.setAsAttribute(\"matricesIndicesExtra\");\r\n                return meshMatrixIndices;\r\n            }\r\n            case \"MatrixWeightsExtraBlock\": {\r\n                const meshMatrixWeights = new InputBlock(\"matricesWeightsExtra\");\r\n                meshMatrixWeights.setAsAttribute(\"matricesWeightsExtra\");\r\n                return meshMatrixWeights;\r\n            }\r\n\r\n            case \"MouseInfoBlock\": {\r\n                const mouseInfoBlock = new InputBlock(\"MouseInfo\", undefined, NodeMaterialBlockConnectionPointTypes.Vector4);\r\n                mouseInfoBlock.animationType = AnimatedInputBlockTypes.MouseInfo;\r\n                return mouseInfoBlock;\r\n            }\r\n            case \"TimeBlock\": {\r\n                const timeBlock = new InputBlock(\"Time\", undefined, NodeMaterialBlockConnectionPointTypes.Float);\r\n                timeBlock.animationType = AnimatedInputBlockTypes.Time;\r\n                return timeBlock;\r\n            }\r\n            case \"RealTimeBlock\": {\r\n                const realTimeBlock = new InputBlock(\"RealTime\", undefined, NodeMaterialBlockConnectionPointTypes.Float);\r\n                realTimeBlock.animationType = AnimatedInputBlockTypes.RealTime;\r\n                return realTimeBlock;\r\n            }\r\n            case \"DeltaTimeBlock\": {\r\n                const deltaTimeBlock = new InputBlock(\"Delta time\");\r\n                deltaTimeBlock.setAsSystemValue(NodeMaterialSystemValues.DeltaTime);\r\n                return deltaTimeBlock;\r\n            }\r\n            case \"MaterialAlphaBlock\": {\r\n                const deltaTimeBlock = new InputBlock(\"Material alpha\");\r\n                deltaTimeBlock.setAsSystemValue(NodeMaterialSystemValues.MaterialAlpha);\r\n                return deltaTimeBlock;\r\n            }\r\n            case \"WorldPositionBlock\": {\r\n                let worldPositionBlock = nodeMaterial.getInputBlockByPredicate((b) => b.isAttribute && b.name === \"position\");\r\n                if (!worldPositionBlock) {\r\n                    worldPositionBlock = new InputBlock(\"position\");\r\n                    worldPositionBlock.setAsAttribute(\"position\");\r\n                }\r\n\r\n                let worldMatrixBlock = nodeMaterial.getInputBlockByPredicate((b) => b.isSystemValue && b.systemValue === NodeMaterialSystemValues.World);\r\n\r\n                if (!worldMatrixBlock) {\r\n                    worldMatrixBlock = new InputBlock(\"World\");\r\n                    worldMatrixBlock.setAsSystemValue(NodeMaterialSystemValues.World);\r\n                }\r\n\r\n                const transformBlock = new TransformBlock(\"World position\");\r\n                worldPositionBlock.connectTo(transformBlock);\r\n                worldMatrixBlock.connectTo(transformBlock);\r\n\r\n                return transformBlock;\r\n            }\r\n            case \"WorldNormalBlock\": {\r\n                let worldNormalBlock = nodeMaterial.getInputBlockByPredicate((b) => b.isAttribute && b.name === \"normal\");\r\n                if (!worldNormalBlock) {\r\n                    worldNormalBlock = new InputBlock(\"normal\");\r\n                    worldNormalBlock.setAsAttribute(\"normal\");\r\n                }\r\n\r\n                let worldMatrixBlock = nodeMaterial.getInputBlockByPredicate((b) => b.isSystemValue && b.systemValue === NodeMaterialSystemValues.World);\r\n\r\n                if (!worldMatrixBlock) {\r\n                    worldMatrixBlock = new InputBlock(\"World\");\r\n                    worldMatrixBlock.setAsSystemValue(NodeMaterialSystemValues.World);\r\n                }\r\n\r\n                const transformBlock = new TransformBlock(\"World normal\");\r\n                worldNormalBlock.connectTo(transformBlock);\r\n                worldMatrixBlock.connectTo(transformBlock);\r\n\r\n                return transformBlock;\r\n            }\r\n            case \"WorldTangentBlock\": {\r\n                let worldTangentBlock = nodeMaterial.getInputBlockByPredicate((b) => b.isAttribute && b.name === \"tangent\");\r\n                if (!worldTangentBlock) {\r\n                    worldTangentBlock = new InputBlock(\"tangent\");\r\n                    worldTangentBlock.setAsAttribute(\"tangent\");\r\n                }\r\n\r\n                let worldMatrixBlock = nodeMaterial.getInputBlockByPredicate((b) => b.isSystemValue && b.systemValue === NodeMaterialSystemValues.World);\r\n\r\n                if (!worldMatrixBlock) {\r\n                    worldMatrixBlock = new InputBlock(\"World\");\r\n                    worldMatrixBlock.setAsSystemValue(NodeMaterialSystemValues.World);\r\n                }\r\n\r\n                const transformBlock = new TransformBlock(\"World tangent\");\r\n                worldTangentBlock.connectTo(transformBlock);\r\n                worldMatrixBlock.connectTo(transformBlock);\r\n\r\n                return transformBlock;\r\n            }\r\n            case \"PBRMetallicRoughnessBlock\":\r\n                return new PBRMetallicRoughnessBlock(\"PBRMetallicRoughness\");\r\n            case \"SheenBlock\":\r\n                return new SheenBlock(\"Sheen\");\r\n            case \"AnisotropyBlock\":\r\n                return new AnisotropyBlock(\"Anisotropy\");\r\n            case \"ReflectionBlock\":\r\n                return new ReflectionBlock(\"Reflection\");\r\n            case \"ClearCoatBlock\":\r\n                return new ClearCoatBlock(\"ClearCoat\");\r\n            case \"RefractionBlock\":\r\n                return new RefractionBlock(\"Refraction\");\r\n            case \"SubSurfaceBlock\":\r\n                return new SubSurfaceBlock(\"SubSurface\");\r\n            case \"CurrentScreenBlock\":\r\n                return new CurrentScreenBlock(\"CurrentScreen\");\r\n            case \"ParticleUVBlock\": {\r\n                const uv = new InputBlock(\"uv\");\r\n                uv.setAsAttribute(\"particle_uv\");\r\n                return uv;\r\n            }\r\n            case \"ParticleTextureBlock\":\r\n                return new ParticleTextureBlock(\"ParticleTexture\");\r\n            case \"ParticleColorBlock\": {\r\n                const color = new InputBlock(\"Color\");\r\n                color.setAsAttribute(\"particle_color\");\r\n                return color;\r\n            }\r\n            case \"ParticleTextureMaskBlock\": {\r\n                const u = new InputBlock(\"TextureMask\");\r\n                u.setAsAttribute(\"particle_texturemask\");\r\n                return u;\r\n            }\r\n            case \"ParticlePositionWorldBlock\": {\r\n                const pos = new InputBlock(\"PositionWorld\");\r\n                pos.setAsAttribute(\"particle_positionw\");\r\n                return pos;\r\n            }\r\n            case \"ParticleRampGradientBlock\":\r\n                return new ParticleRampGradientBlock(\"ParticleRampGradient\");\r\n            case \"ParticleBlendMultiplyBlock\":\r\n                return new ParticleBlendMultiplyBlock(\"ParticleBlendMultiply\");\r\n            case \"FragCoordBlock\":\r\n                return new FragCoordBlock(\"FragCoord\");\r\n            case \"ScreenSizeBlock\":\r\n                return new ScreenSizeBlock(\"ScreenSize\");\r\n            case \"SceneDepthBlock\":\r\n                return new SceneDepthBlock(\"SceneDepth\");\r\n            case \"EqualBlock\": {\r\n                const equalBlock = new ConditionalBlock(\"Equal\");\r\n                equalBlock.condition = ConditionalBlockConditions.Equal;\r\n                return equalBlock;\r\n            }\r\n            case \"NotEqualBlock\": {\r\n                const notEqualBlock = new ConditionalBlock(\"NotEqual\");\r\n                notEqualBlock.condition = ConditionalBlockConditions.NotEqual;\r\n                return notEqualBlock;\r\n            }\r\n            case \"LessThanBlock\": {\r\n                const lessThanBlock = new ConditionalBlock(\"LessThan\");\r\n                lessThanBlock.condition = ConditionalBlockConditions.LessThan;\r\n                return lessThanBlock;\r\n            }\r\n            case \"LessOrEqualBlock\": {\r\n                const lessOrEqualBlock = new ConditionalBlock(\"LessOrEqual\");\r\n                lessOrEqualBlock.condition = ConditionalBlockConditions.LessOrEqual;\r\n                return lessOrEqualBlock;\r\n            }\r\n            case \"GreaterThanBlock\": {\r\n                const greaterThanBlock = new ConditionalBlock(\"GreaterThan\");\r\n                greaterThanBlock.condition = ConditionalBlockConditions.GreaterThan;\r\n                return greaterThanBlock;\r\n            }\r\n            case \"GreaterOrEqualBlock\": {\r\n                const greaterOrEqualBlock = new ConditionalBlock(\"GreaterOrEqual\");\r\n                greaterOrEqualBlock.condition = ConditionalBlockConditions.GreaterOrEqual;\r\n                return greaterOrEqualBlock;\r\n            }\r\n            case \"XorBlock\": {\r\n                const xorBlock = new ConditionalBlock(\"Xor\");\r\n                xorBlock.condition = ConditionalBlockConditions.Xor;\r\n                return xorBlock;\r\n            }\r\n            case \"OrBlock\": {\r\n                const orBlock = new ConditionalBlock(\"Or\");\r\n                orBlock.condition = ConditionalBlockConditions.Or;\r\n                return orBlock;\r\n            }\r\n            case \"AndBlock\": {\r\n                const andBlock = new ConditionalBlock(\"And\");\r\n                andBlock.condition = ConditionalBlockConditions.And;\r\n                return andBlock;\r\n            }\r\n            case \"ImageSourceBlock\":\r\n                return new ImageSourceBlock(\"ImageSource\");\r\n            case \"ClipPlanesBlock\":\r\n                return new ClipPlanesBlock(\"ClipPlanes\");\r\n            case \"FragDepthBlock\":\r\n                return new FragDepthBlock(\"FragDepth\");\r\n            case \"ShadowMapBlock\":\r\n                return new ShadowMapBlock(\"ShadowMap\");\r\n            case \"TriPlanarBlock\":\r\n                return new TriPlanarBlock(\"TriPlanarTexture\");\r\n            case \"BiPlanarBlock\":\r\n                return new BiPlanarBlock(\"BiPlanarTexture\");\r\n            case \"MatrixTransposeBlock\":\r\n                return new MatrixTransposeBlock(\"Transpose\");\r\n            case \"MatrixDeterminantBlock\":\r\n                return new MatrixDeterminantBlock(\"Determinant\");\r\n            case \"CurveBlock\":\r\n                return new CurveBlock(\"Curve\");\r\n            case \"GaussianSplattingBlock\":\r\n                return new GaussianSplattingBlock(\"GaussianSplatting\");\r\n            case \"GaussianBlock\":\r\n                return new GaussianBlock(\"Gaussian\");\r\n            case \"SplatReaderBlock\":\r\n                return new SplatReaderBlock(\"SplatReader\");\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    public static GetColorFromConnectionNodeType(type: NodeMaterialBlockConnectionPointTypes) {\r\n        let color = \"#880000\";\r\n        switch (type) {\r\n            case NodeMaterialBlockConnectionPointTypes.Float:\r\n                color = \"#cb9e27\";\r\n                break;\r\n            case NodeMaterialBlockConnectionPointTypes.Vector2:\r\n                color = \"#16bcb1\";\r\n                break;\r\n            case NodeMaterialBlockConnectionPointTypes.Vector3:\r\n            case NodeMaterialBlockConnectionPointTypes.Color3:\r\n                color = \"#b786cb\";\r\n                break;\r\n            case NodeMaterialBlockConnectionPointTypes.Vector4:\r\n            case NodeMaterialBlockConnectionPointTypes.Color4:\r\n                color = \"#be5126\";\r\n                break;\r\n            case NodeMaterialBlockConnectionPointTypes.Matrix:\r\n                color = \"#591990\";\r\n                break;\r\n            case NodeMaterialBlockConnectionPointTypes.Object:\r\n                color = \"#6174FA\";\r\n                break;\r\n        }\r\n\r\n        return color;\r\n    }\r\n\r\n    public static GetConnectionNodeTypeFromString(type: string) {\r\n        switch (type) {\r\n            case \"Float\":\r\n                return NodeMaterialBlockConnectionPointTypes.Float;\r\n            case \"Vector2\":\r\n                return NodeMaterialBlockConnectionPointTypes.Vector2;\r\n            case \"Vector3\":\r\n                return NodeMaterialBlockConnectionPointTypes.Vector3;\r\n            case \"Vector4\":\r\n                return NodeMaterialBlockConnectionPointTypes.Vector4;\r\n            case \"Matrix\":\r\n                return NodeMaterialBlockConnectionPointTypes.Matrix;\r\n            case \"Color3\":\r\n                return NodeMaterialBlockConnectionPointTypes.Color3;\r\n            case \"Color4\":\r\n                return NodeMaterialBlockConnectionPointTypes.Color4;\r\n        }\r\n\r\n        return NodeMaterialBlockConnectionPointTypes.AutoDetect;\r\n    }\r\n\r\n    public static GetStringFromConnectionNodeType(type: NodeMaterialBlockConnectionPointTypes) {\r\n        switch (type) {\r\n            case NodeMaterialBlockConnectionPointTypes.Float:\r\n                return \"Float\";\r\n            case NodeMaterialBlockConnectionPointTypes.Vector2:\r\n                return \"Vector2\";\r\n            case NodeMaterialBlockConnectionPointTypes.Vector3:\r\n                return \"Vector3\";\r\n            case NodeMaterialBlockConnectionPointTypes.Vector4:\r\n                return \"Vector4\";\r\n            case NodeMaterialBlockConnectionPointTypes.Color3:\r\n                return \"Color3\";\r\n            case NodeMaterialBlockConnectionPointTypes.Color4:\r\n                return \"Color4\";\r\n            case NodeMaterialBlockConnectionPointTypes.Matrix:\r\n                return \"Matrix\";\r\n        }\r\n\r\n        return \"\";\r\n    }\r\n}\r\n"]}