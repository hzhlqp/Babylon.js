{"version":3,"file":"previewAreaComponent.js","sourceRoot":"","sources":["../../../src/components/preview/previewAreaComponent.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport type { GlobalState } from \"../../globalState\";\r\nimport { DataStorage } from \"core/Misc/dataStorage\";\r\nimport type { Observer } from \"core/Misc/observable\";\r\nimport type { Nullable } from \"core/types\";\r\nimport { NodeMaterialModes } from \"core/Materials/Node/Enums/nodeMaterialModes\";\r\nimport { ParticleSystem } from \"core/Particles/particleSystem\";\r\n\r\nimport doubleSided from \"./svgs/doubleSided.svg\";\r\nimport depthPass from \"./svgs/depthPass.svg\";\r\nimport omni from \"./svgs/omni.svg\";\r\nimport directionalRight from \"./svgs/directionalRight.svg\";\r\nimport directionalLeft from \"./svgs/directionalLeft.svg\";\r\nimport background from \"./svgs/icon-ibl.svg\";\r\nimport { OptionsLine } from \"shared-ui-components/lines/optionsLineComponent\";\r\n\r\ninterface IPreviewAreaComponentProps {\r\n    globalState: GlobalState;\r\n    width: number;\r\n}\r\n\r\nexport class PreviewAreaComponent extends React.Component<IPreviewAreaComponentProps, { isLoading: boolean }> {\r\n    private _onIsLoadingChangedObserver: Nullable<Observer<boolean>>;\r\n    private _onResetRequiredObserver: Nullable<Observer<boolean>>;\r\n\r\n    constructor(props: IPreviewAreaComponentProps) {\r\n        super(props);\r\n        this.state = { isLoading: true };\r\n\r\n        this._onIsLoadingChangedObserver = this.props.globalState.onIsLoadingChanged.add((state) => this.setState({ isLoading: state }));\r\n\r\n        this._onResetRequiredObserver = this.props.globalState.onResetRequiredObservable.add(() => {\r\n            this.forceUpdate();\r\n        });\r\n    }\r\n\r\n    override componentWillUnmount() {\r\n        this.props.globalState.onIsLoadingChanged.remove(this._onIsLoadingChangedObserver);\r\n        this.props.globalState.onResetRequiredObservable.remove(this._onResetRequiredObserver);\r\n    }\r\n\r\n    changeBackFaceCulling(value: boolean) {\r\n        this.props.globalState.backFaceCulling = value;\r\n        DataStorage.WriteBoolean(\"BackFaceCulling\", value);\r\n        this.props.globalState.onBackFaceCullingChanged.notifyObservers();\r\n        this.forceUpdate();\r\n    }\r\n\r\n    changeDepthPrePass(value: boolean) {\r\n        this.props.globalState.depthPrePass = value;\r\n        DataStorage.WriteBoolean(\"DepthPrePass\", value);\r\n        this.props.globalState.onDepthPrePassChanged.notifyObservers();\r\n        this.forceUpdate();\r\n    }\r\n\r\n    _onPointerOverCanvas = () => {\r\n        this.props.globalState.pointerOverCanvas = true;\r\n    };\r\n\r\n    _onPointerOutCanvas = () => {\r\n        this.props.globalState.pointerOverCanvas = false;\r\n    };\r\n\r\n    changeParticleSystemBlendMode(newOne: number) {\r\n        if (this.props.globalState.particleSystemBlendMode === newOne) {\r\n            return;\r\n        }\r\n\r\n        this.props.globalState.particleSystemBlendMode = newOne;\r\n        this.props.globalState.stateManager.onUpdateRequiredObservable.notifyObservers(null);\r\n\r\n        DataStorage.WriteNumber(\"DefaultParticleSystemBlendMode\", newOne);\r\n\r\n        this.forceUpdate();\r\n    }\r\n\r\n    override render() {\r\n        const blendModeOptions = [\r\n            { label: \"Add\", value: ParticleSystem.BLENDMODE_ADD },\r\n            { label: \"Multiply\", value: ParticleSystem.BLENDMODE_MULTIPLY },\r\n            { label: \"Multiply Add\", value: ParticleSystem.BLENDMODE_MULTIPLYADD },\r\n            { label: \"OneOne\", value: ParticleSystem.BLENDMODE_ONEONE },\r\n            { label: \"Standard\", value: ParticleSystem.BLENDMODE_STANDARD },\r\n        ];\r\n\r\n        return (\r\n            <>\r\n                <div id=\"preview\" style={{ height: this.props.width + \"px\" }}>\r\n                    <canvas onPointerOver={this._onPointerOverCanvas} onPointerOut={this._onPointerOutCanvas} id=\"preview-canvas\" />\r\n                    {<div className={\"waitPanel\" + (this.state.isLoading ? \"\" : \" hidden\")}>Please wait, loading...</div>}\r\n                </div>\r\n                {this.props.globalState.mode === NodeMaterialModes.Particle && (\r\n                    <div id=\"preview-config-bar\" className=\"extended\">\r\n                        <OptionsLine\r\n                            label=\"Blend mode\"\r\n                            options={blendModeOptions}\r\n                            target={this.props.globalState}\r\n                            propertyName=\"particleSystemBlendMode\"\r\n                            noDirectUpdate={true}\r\n                            onSelect={(value: any) => {\r\n                                this.changeParticleSystemBlendMode(value);\r\n                            }}\r\n                        />\r\n                    </div>\r\n                )}\r\n                {this.props.globalState.mode === NodeMaterialModes.Material && (\r\n                    <>\r\n                        <div id=\"preview-config-bar\">\r\n                            <div\r\n                                title=\"Render without back face culling\"\r\n                                onClick={() => this.changeBackFaceCulling(!this.props.globalState.backFaceCulling)}\r\n                                className={\"button back-face\" + (!this.props.globalState.backFaceCulling ? \" selected\" : \"\")}\r\n                            >\r\n                                <img src={doubleSided} alt=\"\" />\r\n                            </div>\r\n                            <div\r\n                                title=\"Render with depth pre-pass\"\r\n                                onClick={() => this.changeDepthPrePass(!this.props.globalState.depthPrePass)}\r\n                                className={\"button depth-pass\" + (this.props.globalState.depthPrePass ? \" selected\" : \"\")}\r\n                            >\r\n                                <img src={depthPass} alt=\"\" />\r\n                            </div>\r\n                            <div\r\n                                title=\"Turn on/off hemispheric light\"\r\n                                onClick={() => {\r\n                                    this.props.globalState.hemisphericLight = !this.props.globalState.hemisphericLight;\r\n                                    DataStorage.WriteBoolean(\"HemisphericLight\", this.props.globalState.hemisphericLight);\r\n                                    this.props.globalState.onLightUpdated.notifyObservers();\r\n                                    this.forceUpdate();\r\n                                }}\r\n                                className={\"button hemispheric-light\" + (this.props.globalState.hemisphericLight ? \" selected\" : \"\")}\r\n                            >\r\n                                <img src={omni} alt=\"\" />\r\n                            </div>\r\n                            <div\r\n                                title=\"Turn on/off direction light #1\"\r\n                                onClick={() => {\r\n                                    this.props.globalState.directionalLight1 = !this.props.globalState.directionalLight1;\r\n                                    DataStorage.WriteBoolean(\"DirectionalLight1\", this.props.globalState.directionalLight1);\r\n                                    this.props.globalState.onLightUpdated.notifyObservers();\r\n                                    this.forceUpdate();\r\n                                }}\r\n                                className={\"button direction-light-1\" + (this.props.globalState.directionalLight1 ? \" selected\" : \"\")}\r\n                            >\r\n                                <img src={directionalRight} alt=\"\" />\r\n                            </div>\r\n                            <div\r\n                                title=\"Turn on/off direction light #0\"\r\n                                onClick={() => {\r\n                                    this.props.globalState.directionalLight0 = !this.props.globalState.directionalLight0;\r\n                                    DataStorage.WriteBoolean(\"DirectionalLight0\", this.props.globalState.directionalLight0);\r\n                                    this.props.globalState.onLightUpdated.notifyObservers();\r\n                                    this.forceUpdate();\r\n                                }}\r\n                                className={\"button direction-light-0\" + (this.props.globalState.directionalLight0 ? \" selected\" : \"\")}\r\n                            >\r\n                                <img src={directionalLeft} alt=\"\" />\r\n                            </div>\r\n                            <div\r\n                                title=\"Turn on/off environment\"\r\n                                onClick={() => {\r\n                                    this.props.globalState.backgroundHDR = !this.props.globalState.backgroundHDR;\r\n                                    DataStorage.WriteBoolean(\"backgroundHDR\", this.props.globalState.backgroundHDR);\r\n                                    this.props.globalState.onBackgroundHDRUpdated.notifyObservers();\r\n                                    this.forceUpdate();\r\n                                }}\r\n                                className={\"button \" + (this.props.globalState.backgroundHDR ? \" selected\" : \"\")}\r\n                            >\r\n                                <img src={background} alt=\"\" />\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n"]}