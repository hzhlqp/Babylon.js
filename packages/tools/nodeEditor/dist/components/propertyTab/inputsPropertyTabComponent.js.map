{"version":3,"file":"inputsPropertyTabComponent.js","sourceRoot":"","sources":["../../../src/components/propertyTab/inputsPropertyTabComponent.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport type { GlobalState } from \"../../globalState\";\r\nimport { LineContainerComponent } from \"shared-ui-components/lines/lineContainerComponent\";\r\nimport { CheckBoxLineComponent } from \"../../sharedComponents/checkBoxLineComponent\";\r\nimport type { InputBlock } from \"core/Materials/Node/Blocks/Input/inputBlock\";\r\nimport { NodeMaterialBlockConnectionPointTypes } from \"core/Materials/Node/Enums/nodeMaterialBlockConnectionPointTypes\";\r\n\r\nimport \"./propertyTab.scss\";\r\nimport { Vector2LineComponent } from \"shared-ui-components/lines/vector2LineComponent\";\r\nimport { Vector3LineComponent } from \"shared-ui-components/lines/vector3LineComponent\";\r\nimport { Vector4LineComponent } from \"shared-ui-components/lines/vector4LineComponent\";\r\nimport { Color3LineComponent } from \"shared-ui-components/lines/color3LineComponent\";\r\nimport { Color4LineComponent } from \"shared-ui-components/lines/color4LineComponent\";\r\nimport type { LockObject } from \"shared-ui-components/tabs/propertyGrids/lockObject\";\r\nimport { FloatLineComponent } from \"shared-ui-components/lines/floatLineComponent\";\r\nimport { SliderLineComponent } from \"shared-ui-components/lines/sliderLineComponent\";\r\n\r\ninterface IInputsPropertyTabComponentProps {\r\n    globalState: GlobalState;\r\n    inputs: InputBlock[];\r\n    lockObject: LockObject;\r\n}\r\n\r\nexport class InputsPropertyTabComponent extends React.Component<IInputsPropertyTabComponentProps> {\r\n    constructor(props: IInputsPropertyTabComponentProps) {\r\n        super(props);\r\n    }\r\n\r\n    processInputBlockUpdate(ib: InputBlock) {\r\n        this.props.globalState.stateManager.onUpdateRequiredObservable.notifyObservers(ib);\r\n\r\n        if (ib.isConstant) {\r\n            this.props.globalState.stateManager.onRebuildRequiredObservable.notifyObservers();\r\n        }\r\n    }\r\n\r\n    renderInputBlock(block: InputBlock) {\r\n        switch (block.type) {\r\n            case NodeMaterialBlockConnectionPointTypes.Float: {\r\n                const cantDisplaySlider = isNaN(block.min) || isNaN(block.max) || block.min === block.max;\r\n                return (\r\n                    <div key={block.uniqueId}>\r\n                        {block.isBoolean && (\r\n                            <CheckBoxLineComponent\r\n                                key={block.uniqueId}\r\n                                label={block.name}\r\n                                target={block}\r\n                                propertyName=\"value\"\r\n                                onValueChanged={() => {\r\n                                    this.processInputBlockUpdate(block);\r\n                                }}\r\n                            />\r\n                        )}\r\n                        {!block.isBoolean && cantDisplaySlider && (\r\n                            <FloatLineComponent\r\n                                lockObject={this.props.lockObject}\r\n                                key={block.uniqueId}\r\n                                label={block.name}\r\n                                target={block}\r\n                                propertyName=\"value\"\r\n                                onChange={() => this.processInputBlockUpdate(block)}\r\n                            />\r\n                        )}\r\n                        {!block.isBoolean && !cantDisplaySlider && (\r\n                            <SliderLineComponent\r\n                                lockObject={this.props.lockObject}\r\n                                key={block.uniqueId}\r\n                                label={block.name}\r\n                                target={block}\r\n                                propertyName=\"value\"\r\n                                step={(block.max - block.min) / 100.0}\r\n                                minimum={block.min}\r\n                                maximum={block.max}\r\n                                onChange={() => this.processInputBlockUpdate(block)}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                );\r\n            }\r\n            case NodeMaterialBlockConnectionPointTypes.Color3:\r\n                return (\r\n                    <Color3LineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        key={block.uniqueId}\r\n                        label={block.name}\r\n                        target={block}\r\n                        propertyName=\"value\"\r\n                        onChange={() => this.processInputBlockUpdate(block)}\r\n                    />\r\n                );\r\n            case NodeMaterialBlockConnectionPointTypes.Color4:\r\n                return (\r\n                    <Color4LineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        key={block.uniqueId}\r\n                        label={block.name}\r\n                        target={block}\r\n                        propertyName=\"value\"\r\n                        onChange={() => this.processInputBlockUpdate(block)}\r\n                    />\r\n                );\r\n            case NodeMaterialBlockConnectionPointTypes.Vector2:\r\n                return (\r\n                    <Vector2LineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        key={block.uniqueId}\r\n                        label={block.name}\r\n                        target={block}\r\n                        propertyName=\"value\"\r\n                        onChange={() => this.processInputBlockUpdate(block)}\r\n                    />\r\n                );\r\n            case NodeMaterialBlockConnectionPointTypes.Vector3:\r\n                return (\r\n                    <Vector3LineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        key={block.uniqueId}\r\n                        label={block.name}\r\n                        target={block}\r\n                        propertyName=\"value\"\r\n                        onChange={() => this.processInputBlockUpdate(block)}\r\n                    />\r\n                );\r\n            case NodeMaterialBlockConnectionPointTypes.Vector4:\r\n                return (\r\n                    <Vector4LineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        key={block.uniqueId}\r\n                        label={block.name}\r\n                        target={block}\r\n                        propertyName=\"value\"\r\n                        onChange={() => this.processInputBlockUpdate(block)}\r\n                    />\r\n                );\r\n        }\r\n        return null;\r\n    }\r\n\r\n    override render() {\r\n        return (\r\n            <LineContainerComponent title=\"INPUTS\">\r\n                {this.props.inputs.map((ib) => {\r\n                    if (!ib.isUniform || ib.isSystemValue || !ib.name) {\r\n                        return null;\r\n                    }\r\n                    return this.renderInputBlock(ib);\r\n                })}\r\n            </LineContainerComponent>\r\n        );\r\n    }\r\n}\r\n"]}