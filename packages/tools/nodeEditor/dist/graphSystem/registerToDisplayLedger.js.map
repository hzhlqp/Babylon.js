{"version":3,"file":"registerToDisplayLedger.js","sourceRoot":"","sources":["../../src/graphSystem/registerToDisplayLedger.ts"],"names":[],"mappings":"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","sourcesContent":["import { InputDisplayManager } from \"./display/inputDisplayManager\";\r\nimport { OutputDisplayManager } from \"./display/outputDisplayManager\";\r\nimport { ClampDisplayManager } from \"./display/clampDisplayManager\";\r\nimport { GradientDisplayManager } from \"./display/gradientDisplayManager\";\r\nimport { RemapDisplayManager } from \"./display/remapDisplayManager\";\r\nimport { TrigonometryDisplayManager } from \"./display/trigonometryDisplayManager\";\r\nimport { TextureDisplayManager } from \"./display/textureDisplayManager\";\r\nimport { DiscardDisplayManager } from \"./display/discardDisplayManager\";\r\nimport { PBRDisplayManager } from \"./display/pbrDisplayManager\";\r\nimport { ConditionalDisplayManager } from \"./display/conditionalDisplayManager\";\r\nimport { ImageSourceDisplayManager } from \"./display/imageSourceDisplayManager\";\r\nimport { ElbowDisplayManager } from \"./display/elbowDisplayManager\";\r\nimport { DisplayLedger } from \"shared-ui-components/nodeGraphSystem/displayLedger\";\r\nimport { MeshAttributeExistsDisplayManager } from \"./display/meshAttributeExistsDisplayManager\";\r\nimport { CurveDisplayManager } from \"./display/curveDisplayManager\";\r\nimport { TeleportOutDisplayManager } from \"./display/teleportOutDisplayManager\";\r\nimport { TeleportInDisplayManager } from \"./display/teleportInDisplayManager\";\r\nimport { LoopDisplayManager } from \"./display/loopDisplayManager\";\r\n\r\nexport const RegisterToDisplayManagers = () => {\r\n    DisplayLedger.RegisteredControls[\"LoopBlock\"] = LoopDisplayManager;\r\n    DisplayLedger.RegisteredControls[\"InputBlock\"] = InputDisplayManager;\r\n    DisplayLedger.RegisteredControls[\"VertexOutputBlock\"] = OutputDisplayManager;\r\n    DisplayLedger.RegisteredControls[\"FragmentOutputBlock\"] = OutputDisplayManager;\r\n    DisplayLedger.RegisteredControls[\"ClampBlock\"] = ClampDisplayManager;\r\n    DisplayLedger.RegisteredControls[\"GradientBlock\"] = GradientDisplayManager;\r\n    DisplayLedger.RegisteredControls[\"RemapBlock\"] = RemapDisplayManager;\r\n    DisplayLedger.RegisteredControls[\"TrigonometryBlock\"] = TrigonometryDisplayManager;\r\n    DisplayLedger.RegisteredControls[\"ConditionalBlock\"] = ConditionalDisplayManager;\r\n    DisplayLedger.RegisteredControls[\"TextureBlock\"] = TextureDisplayManager;\r\n    DisplayLedger.RegisteredControls[\"ReflectionTextureBlock\"] = TextureDisplayManager;\r\n    DisplayLedger.RegisteredControls[\"ReflectionBlock\"] = TextureDisplayManager;\r\n    DisplayLedger.RegisteredControls[\"RefractionBlock\"] = TextureDisplayManager;\r\n    DisplayLedger.RegisteredControls[\"CurrentScreenBlock\"] = TextureDisplayManager;\r\n    DisplayLedger.RegisteredControls[\"ParticleTextureBlock\"] = TextureDisplayManager;\r\n    DisplayLedger.RegisteredControls[\"TriPlanarBlock\"] = TextureDisplayManager;\r\n    DisplayLedger.RegisteredControls[\"BiPlanarBlock\"] = TextureDisplayManager;\r\n    DisplayLedger.RegisteredControls[\"DiscardBlock\"] = DiscardDisplayManager;\r\n    DisplayLedger.RegisteredControls[\"PBRMetallicRoughnessBlock\"] = PBRDisplayManager;\r\n    DisplayLedger.RegisteredControls[\"AnisotropyBlock\"] = PBRDisplayManager;\r\n    DisplayLedger.RegisteredControls[\"ClearCoatBlock\"] = PBRDisplayManager;\r\n    DisplayLedger.RegisteredControls[\"SheenBlock\"] = PBRDisplayManager;\r\n    DisplayLedger.RegisteredControls[\"SubSurfaceBlock\"] = PBRDisplayManager;\r\n    DisplayLedger.RegisteredControls[\"ImageSourceBlock\"] = ImageSourceDisplayManager;\r\n    DisplayLedger.RegisteredControls[\"ElbowBlock\"] = ElbowDisplayManager;\r\n    DisplayLedger.RegisteredControls[\"MeshAttributeExistsBlock\"] = MeshAttributeExistsDisplayManager;\r\n    DisplayLedger.RegisteredControls[\"CurveBlock\"] = CurveDisplayManager;\r\n    DisplayLedger.RegisteredControls[\"NodeMaterialTeleportInBlock\"] = TeleportInDisplayManager;\r\n    DisplayLedger.RegisteredControls[\"NodeMaterialTeleportOutBlock\"] = TeleportOutDisplayManager;\r\n};\r\n"]}