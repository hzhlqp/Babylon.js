{"version":3,"file":"gradientNodePropertyComponent.js","sourceRoot":"","sources":["../../../src/graphSystem/properties/gradientNodePropertyComponent.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport { LineContainerComponent } from \"shared-ui-components/lines/lineContainerComponent\";\r\nimport type { GradientBlock } from \"core/Materials/Node/Blocks/gradientBlock\";\r\nimport { GradientBlockColorStep } from \"core/Materials/Node/Blocks/gradientBlock\";\r\nimport { GradientStepComponent } from \"./gradientStepComponent\";\r\nimport { Color3 } from \"core/Maths/math.color\";\r\nimport { GeneralPropertyTabComponent } from \"./genericNodePropertyComponent\";\r\nimport type { Nullable } from \"core/types\";\r\nimport type { Observer } from \"core/Misc/observable\";\r\nimport type { IPropertyComponentProps } from \"shared-ui-components/nodeGraphSystem/interfaces/propertyComponentProps\";\r\nimport { ButtonLineComponent } from \"shared-ui-components/lines/buttonLineComponent\";\r\nimport type { InputBlock } from \"core/Materials/Node/Blocks/Input/inputBlock\";\r\nimport { OptionsLine } from \"shared-ui-components/lines/optionsLineComponent\";\r\n\r\nexport class GradientPropertyTabComponent extends React.Component<IPropertyComponentProps> {\r\n    private _onValueChangedObserver: Nullable<Observer<GradientBlock>>;\r\n\r\n    constructor(props: IPropertyComponentProps) {\r\n        super(props);\r\n    }\r\n\r\n    override componentDidMount() {\r\n        const gradientBlock = this.props.nodeData.data as GradientBlock;\r\n        this._onValueChangedObserver = gradientBlock.onValueChangedObservable.add(() => {\r\n            this.forceUpdate();\r\n            this.props.stateManager.onUpdateRequiredObservable.notifyObservers(gradientBlock);\r\n        });\r\n    }\r\n\r\n    override componentWillUnmount() {\r\n        const gradientBlock = this.props.nodeData.data as GradientBlock;\r\n        if (this._onValueChangedObserver) {\r\n            gradientBlock.onValueChangedObservable.remove(this._onValueChangedObserver);\r\n            this._onValueChangedObserver = null;\r\n        }\r\n    }\r\n\r\n    forceRebuild() {\r\n        this.props.stateManager.onUpdateRequiredObservable.notifyObservers(this.props.nodeData.data as GradientBlock);\r\n        this.props.stateManager.onRebuildRequiredObservable.notifyObservers();\r\n    }\r\n\r\n    deleteStep(step: GradientBlockColorStep) {\r\n        const gradientBlock = this.props.nodeData.data as GradientBlock;\r\n\r\n        const index = gradientBlock.colorSteps.indexOf(step);\r\n\r\n        if (index > -1) {\r\n            gradientBlock.colorSteps.splice(index, 1);\r\n            gradientBlock.colorStepsUpdated();\r\n            this.forceRebuild();\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    copyStep(step: GradientBlockColorStep) {\r\n        const gradientBlock = this.props.nodeData.data as GradientBlock;\r\n\r\n        const newStep = new GradientBlockColorStep(1.0, step.color);\r\n        gradientBlock.colorSteps.push(newStep);\r\n        gradientBlock.colorStepsUpdated();\r\n        this.forceRebuild();\r\n        this.forceUpdate();\r\n    }\r\n\r\n    addNewStep() {\r\n        const gradientBlock = this.props.nodeData.data as GradientBlock;\r\n\r\n        const newStep = new GradientBlockColorStep(1.0, Color3.White());\r\n        gradientBlock.colorSteps.push(newStep);\r\n        gradientBlock.colorStepsUpdated();\r\n\r\n        this.forceRebuild();\r\n        this.forceUpdate();\r\n    }\r\n\r\n    checkForReOrder() {\r\n        const gradientBlock = this.props.nodeData.data as GradientBlock;\r\n        gradientBlock.colorSteps.sort((a, b) => {\r\n            if (a.step === b.step) {\r\n                return 0;\r\n            }\r\n\r\n            if (a.step > b.step) {\r\n                return 1;\r\n            }\r\n\r\n            return -1;\r\n        });\r\n        gradientBlock.colorStepsUpdated();\r\n\r\n        this.props.stateManager.onUpdateRequiredObservable.notifyObservers(gradientBlock);\r\n        this.forceUpdate();\r\n    }\r\n\r\n    override render() {\r\n        const gradientBlock = this.props.nodeData.data as GradientBlock;\r\n\r\n        const typeOptions = [\r\n            { label: \"None\", value: 0 },\r\n            { label: \"Visible in the inspector\", value: 1 },\r\n        ];\r\n\r\n        return (\r\n            <div>\r\n                <GeneralPropertyTabComponent stateManager={this.props.stateManager} nodeData={this.props.nodeData} />\r\n                <LineContainerComponent title=\"PROPERTIES\">\r\n                    <OptionsLine\r\n                        label=\"Type\"\r\n                        options={typeOptions}\r\n                        target={gradientBlock}\r\n                        noDirectUpdate={true}\r\n                        extractValue={(block: InputBlock) => {\r\n                            if (block.visibleInInspector) {\r\n                                return 1;\r\n                            }\r\n\r\n                            if (block.isConstant) {\r\n                                return 2;\r\n                            }\r\n\r\n                            return 0;\r\n                        }}\r\n                        onSelect={(value: any) => {\r\n                            switch (value) {\r\n                                case 0:\r\n                                    gradientBlock.visibleInInspector = false;\r\n                                    break;\r\n                                case 1:\r\n                                    gradientBlock.visibleInInspector = true;\r\n                                    break;\r\n                            }\r\n                            this.forceUpdate();\r\n                            this.props.stateManager.onUpdateRequiredObservable.notifyObservers(gradientBlock);\r\n                            this.props.stateManager.onRebuildRequiredObservable.notifyObservers();\r\n                        }}\r\n                        propertyName={\"\"}\r\n                    />\r\n                </LineContainerComponent>\r\n                <LineContainerComponent title=\"STEPS\">\r\n                    <ButtonLineComponent label=\"Add new step\" onClick={() => this.addNewStep()} />\r\n                    {gradientBlock.colorSteps.map((c, i) => {\r\n                        return (\r\n                            <GradientStepComponent\r\n                                stateManager={this.props.stateManager}\r\n                                onCheckForReOrder={() => this.checkForReOrder()}\r\n                                onUpdateStep={() => this.forceRebuild()}\r\n                                key={\"step-\" + i}\r\n                                lineIndex={i}\r\n                                step={c}\r\n                                onCopy={() => this.copyStep(c)}\r\n                                onDelete={() => this.deleteStep(c)}\r\n                            />\r\n                        );\r\n                    })}\r\n                </LineContainerComponent>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]}