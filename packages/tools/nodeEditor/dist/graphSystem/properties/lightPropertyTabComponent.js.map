{"version":3,"file":"lightPropertyTabComponent.js","sourceRoot":"","sources":["../../../src/graphSystem/properties/lightPropertyTabComponent.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,sBAAsB,EAAE,MAAM,mDAAmD,CAAC;AAE3F,OAAO,EAAE,2BAA2B,EAAE,MAAM,gCAAgC,CAAC;AAI7E,OAAO,EAAE,WAAW,EAAE,MAAM,iDAAiD,CAAC;AAE9E,MAAM,OAAO,yBAA0B,SAAQ,KAAK,CAAC,SAAkC;IAC1E,MAAM;QACX,MAAM,KAAK,GAAI,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAoB,CAAC,YAAa,CAAC,QAAQ,EAAE,CAAC;QACrF,MAAM,YAAY,GAAG,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAQ,EAAE,EAAE;YAC/C,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;QAC5C,CAAC,CAAC,CAAC;QAEH,YAAY,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC;QAEvD,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAkB,CAAC;QAE1D,OAAO,CACH,0BACI,KAAC,2BAA2B,IAAC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAI,EACrG,KAAC,sBAAsB,IAAC,KAAK,EAAC,YAAY,YACtC,KAAC,WAAW,IACR,KAAK,EAAC,OAAO,EACb,aAAa,EAAE,CAAC,EAChB,cAAc,EAAE,IAAI,EACpB,gBAAgB,EAAE,IAAI,EACtB,OAAO,EAAE,YAAY,EACrB,MAAM,EAAE,UAAU,EAClB,YAAY,EAAC,MAAM,EACnB,QAAQ,EAAE,CAAC,IAAS,EAAE,EAAE;4BACpB,IAAI,IAAI,KAAK,EAAE,EAAE;gCACb,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC;6BAC3B;iCAAM;gCACH,UAAU,CAAC,KAAK,GAAG,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;6BACjD;4BACD,IAAI,CAAC,WAAW,EAAE,CAAC;4BACnB,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,2BAA2B,CAAC,eAAe,EAAE,CAAC;wBAC1E,CAAC,GACH,GACmB,IACvB,CACT,CAAC;IACN,CAAC;CACJ","sourcesContent":["import * as React from \"react\";\r\nimport { LineContainerComponent } from \"shared-ui-components/lines/lineContainerComponent\";\r\nimport type { LightBlock } from \"core/Materials/Node/Blocks/Dual/lightBlock\";\r\nimport { GeneralPropertyTabComponent } from \"./genericNodePropertyComponent\";\r\nimport type { Light } from \"core/Lights/light\";\r\nimport type { GlobalState } from \"../../globalState\";\r\nimport type { IPropertyComponentProps } from \"shared-ui-components/nodeGraphSystem/interfaces/propertyComponentProps\";\r\nimport { OptionsLine } from \"shared-ui-components/lines/optionsLineComponent\";\r\n\r\nexport class LightPropertyTabComponent extends React.Component<IPropertyComponentProps> {\r\n    override render() {\r\n        const scene = (this.props.stateManager.data as GlobalState).nodeMaterial!.getScene();\r\n        const lightOptions = scene.lights.map((l: Light) => {\r\n            return { label: l.name, value: l.name };\r\n        });\r\n\r\n        lightOptions.splice(0, 0, { label: \"All\", value: \"\" });\r\n\r\n        const lightBlock = this.props.nodeData.data as LightBlock;\r\n\r\n        return (\r\n            <div>\r\n                <GeneralPropertyTabComponent stateManager={this.props.stateManager} nodeData={this.props.nodeData} />\r\n                <LineContainerComponent title=\"PROPERTIES\">\r\n                    <OptionsLine\r\n                        label=\"Light\"\r\n                        defaultIfNull={0}\r\n                        noDirectUpdate={true}\r\n                        valuesAreStrings={true}\r\n                        options={lightOptions}\r\n                        target={lightBlock}\r\n                        propertyName=\"name\"\r\n                        onSelect={(name: any) => {\r\n                            if (name === \"\") {\r\n                                lightBlock.light = null;\r\n                            } else {\r\n                                lightBlock.light = scene.getLightByName(name);\r\n                            }\r\n                            this.forceUpdate();\r\n                            this.props.stateManager.onRebuildRequiredObservable.notifyObservers();\r\n                        }}\r\n                    />\r\n                </LineContainerComponent>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]}