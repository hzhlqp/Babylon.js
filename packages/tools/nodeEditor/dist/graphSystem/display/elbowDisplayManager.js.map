{"version":3,"file":"elbowDisplayManager.js","sourceRoot":"","sources":["../../../src/graphSystem/display/elbowDisplayManager.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,UAAU,EAAE,MAAM,kBAAkB,CAAC;AAG9C,OAAO,MAAM,MAAM,oCAAoC,CAAC;AAExD,MAAM,OAAO,mBAAmB;IACrB,cAAc;QACjB,OAAO,EAAE,CAAC;IACd,CAAC;IAEM,uBAAuB;QAC1B,OAAO,KAAK,CAAC;IACjB,CAAC;IAEM,aAAa,CAAC,QAAmB;QACpC,OAAQ,QAAQ,CAAC,IAA0B,CAAC,IAAI,CAAC;IACrD,CAAC;IAEM,kBAAkB,CAAC,QAAmB;QACzC,MAAM,UAAU,GAAG,QAAQ,CAAC,IAAkB,CAAC;QAE/C,OAAO,UAAU,CAAC,8BAA8B,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAC5E,CAAC;IAEM,oBAAoB,CAAC,SAAoB,EAAE,YAA4B,IAAS,CAAC;IAEjF,uBAAuB,CAAC,IAAe,EAAE,aAAuC;QACnF,MAAM,MAAM,GAAG,aAAa,CAAC,MAAM,CAAC;QACpC,MAAM,eAAe,GAAG,aAAa,CAAC,eAAe,CAAC;QACtD,MAAM,OAAO,GAAG,aAAa,CAAC,OAAO,CAAC;QACtC,MAAM,WAAW,GAAG,aAAa,CAAC,WAAW,CAAC;QAC9C,MAAM,eAAe,GAAG,aAAa,CAAC,eAAe,CAAC;QAEtD,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QACxC,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAC7C,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACrC,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC;QACxD,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,oBAAoB,CAAC,CAAC;IAC/D,CAAC;CACJ","sourcesContent":["import type { NodeMaterialBlock } from \"core/Materials/Node/nodeMaterialBlock\";\r\nimport type { ElbowBlock } from \"core/Materials/Node/Blocks/elbowBlock\";\r\nimport { BlockTools } from \"../../blockTools\";\r\nimport type { IDisplayManager, VisualContentDescription } from \"shared-ui-components/nodeGraphSystem/interfaces/displayManager\";\r\nimport type { INodeData } from \"shared-ui-components/nodeGraphSystem/interfaces/nodeData\";\r\nimport styles from \"./elbowDisplayManager.modules.scss\";\r\n\r\nexport class ElbowDisplayManager implements IDisplayManager {\r\n    public getHeaderClass() {\r\n        return \"\";\r\n    }\r\n\r\n    public shouldDisplayPortLabels(): boolean {\r\n        return false;\r\n    }\r\n\r\n    public getHeaderText(nodeData: INodeData): string {\r\n        return (nodeData.data as NodeMaterialBlock).name;\r\n    }\r\n\r\n    public getBackgroundColor(nodeData: INodeData): string {\r\n        const elbowBlock = nodeData.data as ElbowBlock;\r\n\r\n        return BlockTools.GetColorFromConnectionNodeType(elbowBlock.input.type);\r\n    }\r\n\r\n    public updatePreviewContent(_nodeData: INodeData, _contentArea: HTMLDivElement): void {}\r\n\r\n    public updateFullVisualContent(data: INodeData, visualContent: VisualContentDescription): void {\r\n        const visual = visualContent.visual;\r\n        const headerContainer = visualContent.headerContainer;\r\n        const content = visualContent.content;\r\n        const connections = visualContent.connections;\r\n        const selectionBorder = visualContent.selectionBorder;\r\n\r\n        visual.classList.add(styles.elbowBlock);\r\n        headerContainer.classList.add(styles.hidden);\r\n        content.classList.add(styles.hidden);\r\n        connections.classList.add(styles.translatedConnections);\r\n        selectionBorder.classList.add(styles.roundSelectionBorder);\r\n    }\r\n}\r\n"]}