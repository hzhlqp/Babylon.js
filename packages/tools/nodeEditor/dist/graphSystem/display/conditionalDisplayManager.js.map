{"version":3,"file":"conditionalDisplayManager.js","sourceRoot":"","sources":["../../../src/graphSystem/display/conditionalDisplayManager.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,0BAA0B,EAAE,MAAM,6CAA6C,CAAC;AAIzF,MAAM,OAAO,yBAAyB;IAC3B,cAAc;QACjB,OAAO,EAAE,CAAC;IACd,CAAC;IAEM,uBAAuB;QAC1B,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,aAAa,CAAC,QAAmB;QACpC,MAAM,cAAc,GAAG,QAAQ,CAAC,IAAwB,CAAC;QACzD,IAAI,IAAI,GAAG,EAAE,CAAC;QAEd,QAAQ,cAAc,CAAC,SAAS,EAAE;YAC9B,KAAK,0BAA0B,CAAC,KAAK;gBACjC,IAAI,GAAG,GAAG,CAAC;gBACX,MAAM;YACV,KAAK,0BAA0B,CAAC,QAAQ;gBACpC,IAAI,GAAG,IAAI,CAAC;gBACZ,MAAM;YACV,KAAK,0BAA0B,CAAC,QAAQ;gBACpC,IAAI,GAAG,GAAG,CAAC;gBACX,MAAM;YACV,KAAK,0BAA0B,CAAC,WAAW;gBACvC,IAAI,GAAG,IAAI,CAAC;gBACZ,MAAM;YACV,KAAK,0BAA0B,CAAC,WAAW;gBACvC,IAAI,GAAG,GAAG,CAAC;gBACX,MAAM;YACV,KAAK,0BAA0B,CAAC,cAAc;gBAC1C,IAAI,GAAG,IAAI,CAAC;gBACZ,MAAM;YACV,KAAK,0BAA0B,CAAC,GAAG;gBAC/B,IAAI,GAAG,KAAK,CAAC;gBACb,MAAM;YACV,KAAK,0BAA0B,CAAC,EAAE;gBAC9B,IAAI,GAAG,GAAG,CAAC;gBACX,MAAM;YACV,KAAK,0BAA0B,CAAC,GAAG;gBAC/B,IAAI,GAAG,GAAG,CAAC;gBACX,MAAM;SACb;QAED,OAAO,cAAc,CAAC,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,CAAC;IACnD,CAAC;IAEM,kBAAkB;QACrB,OAAO,SAAS,CAAC;IACrB,CAAC;IAEM,oBAAoB,KAAU,CAAC;CACzC","sourcesContent":["import type { ConditionalBlock } from \"core/Materials/Node/Blocks/conditionalBlock\";\r\nimport { ConditionalBlockConditions } from \"core/Materials/Node/Blocks/conditionalBlock\";\r\nimport type { IDisplayManager } from \"shared-ui-components/nodeGraphSystem/interfaces/displayManager\";\r\nimport type { INodeData } from \"shared-ui-components/nodeGraphSystem/interfaces/nodeData\";\r\n\r\nexport class ConditionalDisplayManager implements IDisplayManager {\r\n    public getHeaderClass() {\r\n        return \"\";\r\n    }\r\n\r\n    public shouldDisplayPortLabels(): boolean {\r\n        return true;\r\n    }\r\n\r\n    public getHeaderText(nodeData: INodeData): string {\r\n        const conditionBlock = nodeData.data as ConditionalBlock;\r\n        let desc = \"\";\r\n\r\n        switch (conditionBlock.condition) {\r\n            case ConditionalBlockConditions.Equal:\r\n                desc = \"=\";\r\n                break;\r\n            case ConditionalBlockConditions.NotEqual:\r\n                desc = \"!=\";\r\n                break;\r\n            case ConditionalBlockConditions.LessThan:\r\n                desc = \"<\";\r\n                break;\r\n            case ConditionalBlockConditions.LessOrEqual:\r\n                desc = \"<=\";\r\n                break;\r\n            case ConditionalBlockConditions.GreaterThan:\r\n                desc = \">\";\r\n                break;\r\n            case ConditionalBlockConditions.GreaterOrEqual:\r\n                desc = \">=\";\r\n                break;\r\n            case ConditionalBlockConditions.Xor:\r\n                desc = \"xor\";\r\n                break;\r\n            case ConditionalBlockConditions.Or:\r\n                desc = \"|\";\r\n                break;\r\n            case ConditionalBlockConditions.And:\r\n                desc = \"&\";\r\n                break;\r\n        }\r\n\r\n        return conditionBlock.name + \" (\" + desc + \")\";\r\n    }\r\n\r\n    public getBackgroundColor(): string {\r\n        return \"#00A080\";\r\n    }\r\n\r\n    public updatePreviewContent(): void {}\r\n}\r\n"]}