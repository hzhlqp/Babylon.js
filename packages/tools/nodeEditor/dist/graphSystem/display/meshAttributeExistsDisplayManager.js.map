{"version":3,"file":"meshAttributeExistsDisplayManager.js","sourceRoot":"","sources":["../../../src/graphSystem/display/meshAttributeExistsDisplayManager.ts"],"names":[],"mappings":"AAMA;;GAEG;AACH,MAAM,OAAO,iCAAiC;IACnC,cAAc,CAAC,QAAmB;QACrC,OAAO,EAAE,CAAC;IACd,CAAC;IAEM,uBAAuB;QAC1B,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,aAAa,CAAC,QAAmB;QACpC,MAAM,KAAK,GAAG,QAAQ,CAAC,IAAgC,CAAC;QACxD,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QAEtB,IAAI,aAAa,CAAC;QAElB,QAAQ,KAAK,CAAC,aAAa,EAAE;YACzB;gBACI,aAAa,GAAG,OAAO,CAAC;gBACxB,MAAM;YACV;gBACI,aAAa,GAAG,QAAQ,CAAC;gBACzB,MAAM;YACV;gBACI,aAAa,GAAG,SAAS,CAAC;gBAC1B,MAAM;YACV;gBACI,aAAa,GAAG,IAAI,CAAC;gBACrB,MAAM;YACV;gBACI,aAAa,GAAG,KAAK,CAAC;gBACtB,MAAM;YACV;gBACI,aAAa,GAAG,KAAK,CAAC;gBACtB,MAAM;YACV;gBACI,aAAa,GAAG,KAAK,CAAC;gBACtB,MAAM;YACV;gBACI,aAAa,GAAG,KAAK,CAAC;gBACtB,MAAM;YACV;gBACI,aAAa,GAAG,KAAK,CAAC;gBACtB,MAAM;SACb;QAED,IAAI,aAAa,EAAE;YACf,IAAI,IAAI,KAAK,aAAa,GAAG,CAAC;SACjC;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,kBAAkB,CAAC,QAAmB;QACzC,OAAO,EAAE,CAAC;IACd,CAAC;IAEM,oBAAoB,KAAU,CAAC;CACzC","sourcesContent":["/* eslint-disable @typescript-eslint/naming-convention */\r\nimport type { IDisplayManager } from \"shared-ui-components/nodeGraphSystem/interfaces/displayManager\";\r\nimport type { INodeData } from \"shared-ui-components/nodeGraphSystem/interfaces/nodeData\";\r\nimport type { MeshAttributeExistsBlock } from \"core/Materials/Node/Blocks/meshAttributeExistsBlock\";\r\nimport { MeshAttributeExistsBlockTypes } from \"core/Materials/Node/Blocks/meshAttributeExistsBlock\";\r\n\r\n/**\r\n *\r\n */\r\nexport class MeshAttributeExistsDisplayManager implements IDisplayManager {\r\n    public getHeaderClass(nodeData: INodeData) {\r\n        return \"\";\r\n    }\r\n\r\n    public shouldDisplayPortLabels(): boolean {\r\n        return true;\r\n    }\r\n\r\n    public getHeaderText(nodeData: INodeData): string {\r\n        const block = nodeData.data as MeshAttributeExistsBlock;\r\n        let name = block.name;\r\n\r\n        let attributeName;\r\n\r\n        switch (block.attributeType) {\r\n            case MeshAttributeExistsBlockTypes.VertexColor:\r\n                attributeName = \"Color\";\r\n                break;\r\n            case MeshAttributeExistsBlockTypes.Normal:\r\n                attributeName = \"Normal\";\r\n                break;\r\n            case MeshAttributeExistsBlockTypes.Tangent:\r\n                attributeName = \"Tangent\";\r\n                break;\r\n            case MeshAttributeExistsBlockTypes.UV1:\r\n                attributeName = \"UV\";\r\n                break;\r\n            case MeshAttributeExistsBlockTypes.UV2:\r\n                attributeName = \"UV2\";\r\n                break;\r\n            case MeshAttributeExistsBlockTypes.UV3:\r\n                attributeName = \"UV3\";\r\n                break;\r\n            case MeshAttributeExistsBlockTypes.UV4:\r\n                attributeName = \"UV4\";\r\n                break;\r\n            case MeshAttributeExistsBlockTypes.UV5:\r\n                attributeName = \"UV5\";\r\n                break;\r\n            case MeshAttributeExistsBlockTypes.UV6:\r\n                attributeName = \"UV6\";\r\n                break;\r\n        }\r\n\r\n        if (attributeName) {\r\n            name += ` (${attributeName})`;\r\n        }\r\n\r\n        return name;\r\n    }\r\n\r\n    public getBackgroundColor(nodeData: INodeData): string {\r\n        return \"\";\r\n    }\r\n\r\n    public updatePreviewContent(): void {}\r\n}\r\n"]}