{"version":3,"file":"gizmoScalePoint.js","sourceRoot":"","sources":["../../src/diagram/gizmoScalePoint.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { Vector2 } from \"core/Maths/math\";\r\nimport * as React from \"react\";\r\n\r\n// which side of the bounding box are we on?\r\nexport enum ScalePointPosition {\r\n    Top = -1,\r\n    Left = -1,\r\n    Center = 0,\r\n    Right = 1,\r\n    Bottom = 1,\r\n}\r\n\r\n// a single gizmo scale point on the bounding box\r\nexport interface IScalePoint {\r\n    position: Vector2;\r\n    horizontalPosition: ScalePointPosition;\r\n    verticalPosition: ScalePointPosition;\r\n    rotation: number;\r\n    isPivot: boolean;\r\n    defaultRotation: number;\r\n    id?: number;\r\n}\r\n\r\ninterface IGizmoScalePointProps {\r\n    scalePoint: IScalePoint;\r\n    clickable: boolean;\r\n    key: number;\r\n    onDrag: (event?: React.PointerEvent<HTMLDivElement>, scalePoint?: IScalePoint) => void;\r\n    onRotate: (event?: React.PointerEvent<HTMLDivElement>, scalePoint?: IScalePoint) => void;\r\n    onUp: () => void;\r\n    overrideCursor?: string;\r\n    canRotate: boolean;\r\n    allowClickOnPivot?: boolean;\r\n}\r\n\r\nimport gizmoPivotIcon from \"../imgs/gizmoPivotIcon.svg\";\r\n\r\n// load in custom cursor icons\r\nimport cursorScaleDiagonalLeftIcon from \"../imgs/cursor_scaleDiagonalLeft.svg\";\r\nimport cursorScaleDiagonalRightIcon from \"../imgs/cursor_scaleDiagonalRight.svg\";\r\nimport cursorScaleHorizontalIcon from \"../imgs/cursor_scaleHorizontal.svg\";\r\nimport cursorScaleVerticalIcon from \"../imgs/cursor_scaleVertical.svg\";\r\n\r\nimport cursorRotate0 from \"../imgs/cursor_rotate0.svg\";\r\nimport cursorRotate1 from \"../imgs/cursor_rotate1.svg\";\r\nimport cursorRotate2 from \"../imgs/cursor_rotate2.svg\";\r\nimport cursorRotate3 from \"../imgs/cursor_rotate3.svg\";\r\nimport cursorRotate4 from \"../imgs/cursor_rotate4.svg\";\r\nimport cursorRotate5 from \"../imgs/cursor_rotate5.svg\";\r\nimport cursorRotate6 from \"../imgs/cursor_rotate6.svg\";\r\nimport cursorRotate7 from \"../imgs/cursor_rotate7.svg\";\r\n\r\n// load in custom cursor icons\r\nconst cursorScaleDiagonaLeft: string = `url(\"${cursorScaleDiagonalLeftIcon}\") 12 12, nwse-resize`;\r\nconst cursorScaleDiagonalRight: string = `url(\"${cursorScaleDiagonalRightIcon}\") 12 12, nesw-resize`;\r\nconst cursorScaleHorizontal: string = `url(\"${cursorScaleHorizontalIcon}\") 12 12, pointer`;\r\nconst cursorScaleVertical: string = `url(\"${cursorScaleVerticalIcon}\") 12 12, ns-resize`;\r\nconst scalePointCursors = [\r\n    cursorScaleVertical,\r\n    cursorScaleDiagonalRight,\r\n    cursorScaleHorizontal,\r\n    cursorScaleDiagonaLeft,\r\n    cursorScaleVertical,\r\n    cursorScaleDiagonalRight,\r\n    cursorScaleHorizontal,\r\n    cursorScaleDiagonaLeft,\r\n];\r\nconst rotateCursors = [cursorRotate0, cursorRotate1, cursorRotate2, cursorRotate3, cursorRotate4, cursorRotate5, cursorRotate6, cursorRotate7].map(\r\n    (cursor) => `url(\"${cursor}\") 12 12, pointer`\r\n);\r\n\r\nconst modulo = (dividend: number, divisor: number) => ((dividend % divisor) + divisor) % divisor;\r\n\r\nexport function GizmoScalePoint(props: IGizmoScalePointProps) {\r\n    const { scalePoint, clickable, onDrag, onRotate, onUp, overrideCursor, canRotate, allowClickOnPivot } = props;\r\n\r\n    const style: React.CSSProperties = {\r\n        left: `${scalePoint.position.x}px`,\r\n        top: `${scalePoint.position.y}px`,\r\n        transform: \"translate(-50%, -50%) rotate(\" + scalePoint.rotation + \"deg)\",\r\n        pointerEvents: clickable ? \"auto\" : \"none\",\r\n    };\r\n\r\n    if (scalePoint.isPivot) {\r\n        return (\r\n            <img\r\n                className=\"pivot-point\"\r\n                src={gizmoPivotIcon}\r\n                style={style}\r\n                onDragStart={(evt) => evt.preventDefault()}\r\n                onPointerDown={(event) => {\r\n                    if (allowClickOnPivot) {\r\n                        onDrag(event, scalePoint);\r\n                    }\r\n                }}\r\n                onPointerUp={() => {\r\n                    if (allowClickOnPivot) {\r\n                        onUp();\r\n                    }\r\n                }}\r\n            />\r\n        );\r\n    }\r\n    // compute which cursor icon to use on hover\r\n    const angleOfCursor = scalePoint.defaultRotation + scalePoint.rotation;\r\n    const angleAdjusted = modulo(angleOfCursor, 360);\r\n    const increment = 45;\r\n    const cursorIndex = Math.round(angleAdjusted / increment) % 8;\r\n    const cursor = overrideCursor || scalePointCursors[cursorIndex];\r\n    const scalePointContainerSize = 30; // .scale-point-container width/height in px\r\n    const rotateClickAreaSize = 20; // .rotate-click-area width/height\r\n    const rotateClickAreaOffset = 7; // how much to offset the invisible rotate click area from the center\r\n    const rotateClickAreaStyle = {\r\n        top: (scalePointContainerSize - rotateClickAreaSize) / 2 + rotateClickAreaOffset * scalePoint.verticalPosition,\r\n        left: (scalePointContainerSize - rotateClickAreaSize) / 2 + rotateClickAreaOffset * scalePoint.horizontalPosition,\r\n        cursor: rotateCursors[cursorIndex],\r\n    };\r\n    const scaleClickAreaSize = 20; // .scale-click-area width/height\r\n    const scaleClickAreaOffset = 5; // how much to offset the invisible scale click area from the center\r\n    const scaleClickAreaStyle = {\r\n        top: (scalePointContainerSize - scaleClickAreaSize) / 2 - scaleClickAreaOffset * scalePoint.verticalPosition,\r\n        left: (scalePointContainerSize - scaleClickAreaSize) / 2 - scaleClickAreaOffset * scalePoint.horizontalPosition,\r\n        cursor,\r\n    };\r\n    return (\r\n        <div style={style} className=\"scale-point-container\">\r\n            {canRotate && (\r\n                <div\r\n                    className=\"rotate-click-area\"\r\n                    onPointerDown={(event) => {\r\n                        onRotate(event, scalePoint);\r\n                    }}\r\n                    style={rotateClickAreaStyle}\r\n                ></div>\r\n            )}\r\n            <div\r\n                className=\"scale-click-area\"\r\n                draggable={true}\r\n                onDragStart={(evt) => evt.preventDefault()}\r\n                onPointerDown={(event) => {\r\n                    // if left mouse button down\r\n                    if (event.buttons & 1) {\r\n                        onDrag(event, scalePoint);\r\n                    }\r\n                }}\r\n                onPointerUp={onUp}\r\n                style={scaleClickAreaStyle}\r\n            ></div>\r\n            <div\r\n                className=\"scale-point\"\r\n                draggable={true}\r\n                onDragStart={(evt) => evt.preventDefault()}\r\n                onPointerDown={(event) => {\r\n                    if (event.buttons & 1) {\r\n                        onDrag(event, scalePoint);\r\n                    }\r\n                }}\r\n                onPointerUp={onUp}\r\n                style={{ cursor }}\r\n            ></div>\r\n        </div>\r\n    );\r\n}\r\n"]}