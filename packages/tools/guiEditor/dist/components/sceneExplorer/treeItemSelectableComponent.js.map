{"version":3,"file":"treeItemSelectableComponent.js","sourceRoot":"","sources":["../../../src/components/sceneExplorer/treeItemSelectableComponent.tsx"],"names":[],"mappings":";AAGA,OAAO,EAAE,KAAK,EAAE,MAAM,aAAa,CAAC;AACpC,OAAO,KAAK,QAAQ,MAAM,WAAW,CAAC;AACtC,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,gBAAgB,EAAE,MAAM,mBAAmB,CAAC;AACrD,OAAO,EAAE,wBAAwB,EAAE,MAAM,yCAAyC,CAAC;AAEnF,OAAO,EAAE,SAAS,EAAE,MAAM,2BAA2B,CAAC;AAEtD,OAAO,YAAY,MAAM,6BAA6B,CAAC;AACvD,OAAO,aAAa,MAAM,8BAA8B,CAAC;AACzD,gEAAgE;AAChE,MAAM,cAAc,GAAG,EAAE,CAAC;AAqB1B,MAAM,OAAO,2BAA4B,SAAQ,KAAK,CAAC,SAA+E;IAUlI,YAAY,KAAwC;QAChD,KAAK,CAAC,KAAK,CAAC,CAAC;QAPjB;;;;WAIG;QACK,qBAAgB,GAAG,KAAK,CAAC;QAI7B,IAAI,CAAC,KAAK,GAAG;YACT,MAAM,EAAE,IAAI;YACZ,QAAQ,EAAE,KAAK;YACf,gBAAgB,EAAE,gBAAgB,CAAC,IAAI;YACvC,SAAS,EAAE,KAAK;YAChB,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;YACnE,SAAS,EAAE,KAAK;SACnB,CAAC;QAEF,IAAI,CAAC,6BAA6B,GAAG,KAAK,CAAC,WAAW,CAAC,4BAA4B,CAAC,GAAG,CAAC,GAAG,EAAE;YACzF,IAAI,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,gBAAgB,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QACvG,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,wBAAwB,GAAG,KAAK,CAAC,WAAW,CAAC,uBAAuB,CAAC,GAAG,CAAC,GAAG,EAAE;YAC/E,IAAI,CAAC,QAAQ,CAAC,EAAE,gBAAgB,EAAE,gBAAgB,CAAC,IAAI,EAAE,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,0BAA0B,GAAG,KAAK,CAAC,WAAW,CAAC,yBAAyB,CAAC,GAAG,CAAC,GAAG,EAAE;YACnF,IAAI,CAAC,WAAW,EAAE,CAAC;QACvB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,mBAAmB;QACf,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;QACtG,IAAI,CAAC,QAAQ,CAAC,EAAE,MAAM,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC;IAClD,CAAC;IAEQ,qBAAqB,CAAC,SAA4C,EAAE,SAAkC;QAC3G,mFAAmF;QACnF,IAAI,SAAS,CAAC,gBAAgB,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACvD,SAAS,CAAC,UAAU,GAAG,IAAI,CAAC;YAC5B,OAAO,IAAI,CAAC;SACf;aAAM;YACH,SAAS,CAAC,UAAU,GAAG,KAAK,CAAC;SAChC;QACD,IAAI,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,EAAE,SAAS,CAAC,gBAAgB,CAAC,EAAE;YAClE,OAAO,IAAI,CAAC;SACf;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,cAAc;QACV,MAAM,OAAO,GAAG,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAY,CAAC;QAEtD,IAAI,OAAO,EAAE;YACT,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;SACjC;IACL,CAAC;IAEQ,oBAAoB;QACzB,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,4BAA4B,CAAC,MAAM,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;QAC/F,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,uBAAuB,CAAC,MAAM,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;QACrF,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,yBAAyB,CAAC,MAAM,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;IAC7F,CAAC;IAED,QAAQ;QACJ,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QACjC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACtC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,aAAa,GAAG,IAAI,CAAC;IAChD,CAAC;IAED,cAAc,CAAC,UAAmB,EAAE,MAAM,GAAG,IAAI;QAC7C,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAEjC,IAAI,CAAC,CAAC,MAAM,CAAC,WAAW,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE;YAC1D,OAAO,IAAI,CAAC;SACf;QAED,MAAM,QAAQ,GAAG,KAAK,CAAC,aAAa,CAAC,MAAM,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC1G,IAAI,MAAM,CAAC,QAAQ,KAAK,YAAY,IAAI,MAAM,CAAC,QAAQ,KAAK,iBAAiB,EAAE;YAC3E,QAAQ,CAAC,OAAO,EAAE,CAAC;SACtB;QACD,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;YAC5B,IAAI,IAAI,CAAC,IAAI,IAAI,sBAAsB,EAAE;gBACrC,OAAO,IAAI,CAAC;aACf;YAED,OAAO,CACH,KAAC,2BAA2B,IACxB,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,EACnC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,EACjC,mBAAmB,EAAE,IAAI,CAAC,KAAK,CAAC,mBAAmB,EACnD,gBAAgB,EAAE,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAE7C,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAC5C,MAAM,EAAE,IAAI,EACZ,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,IAHpB,CAAC,CAIR,CACL,CAAC;QACN,CAAC,CAAC,CAAC;IACP,CAAC;IAEQ,MAAM;QACX,IACI,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,iBAAiB;YACxE,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,sBAAsB;YAC7E,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,mBAAmB,EAC5E;YACE,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;SAC3C;QACD,MAAM,WAAW,GAAG;YAChB,WAAW,EAAE,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,EAAE,GAAG,IAAI;SAC1D,CAAC;QACF,MAAM,eAAe,GAAG;YACpB,UAAU,EAAE,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,EAAE,GAAG,IAAI;SACzD,CAAC;QACF,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAE/B,IAAI,CAAC,MAAM,CAAC,iBAAiB,EAAE;YAC3B,MAAM,CAAC,iBAAiB,GAAG;gBACvB,UAAU,EAAE,IAAI;gBAChB,gBAAgB,EAAE,CAAC,QAAiB,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,iBAAiB,CAAC,UAAU,GAAG,QAAQ,CAAC;aAC5F,CAAC;SACL;QAED,MAAM,UAAU,GAAG,MAAM,CAAC,iBAAiB,CAAC,UAAU,IAAI,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;QAE7H,MAAM,CAAC,iBAAiB,CAAC,UAAU,GAAG,UAAU,CAAC;QAEjD,MAAM,OAAO,GAAG,UAAU,CAAC,CAAC,CAAC,cAAK,GAAG,EAAE,YAAY,EAAE,SAAS,EAAC,MAAM,GAAG,CAAC,CAAC,CAAC,cAAK,GAAG,EAAE,aAAa,EAAE,SAAS,EAAC,MAAM,GAAG,CAAC;QAExH,IAAI,QAAQ,GAAG,MAAM,CAAC,YAAY,EAAE,KAAK,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,aAAa,CAAC,MAAM,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACzJ,IAAI,WAAW,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;QAEtC,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YACnB,MAAM,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;YACxD,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,EAAE;gBAC3E,IAAI,CAAC,WAAW,EAAE;oBACd,OAAO,IAAI,CAAC;iBACf;gBAED,IAAI,MAAM,CAAC,cAAc,EAAE;oBACvB,IACI,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC,CAAM,EAAE,EAAE;wBACpC,OAAO,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;oBAC1E,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,EACjB;wBACE,OAAO,IAAI,CAAC;qBACf;iBACJ;aACJ;SACJ;QAED,IAAI,SAAS,GAAG,eAAe,CAAC,CAAC,yDAAyD;QAC1F,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,cAAc,KAAK,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC;QACxG,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,cAAc,KAAK,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC;QACpG,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,gBAAgB,IAAI,gBAAgB,CAAC,MAAM,IAAI,MAAM,YAAY,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC;QAC3I,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,cAAc,KAAK,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC;QAC3F,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,gBAAgB,IAAI,gBAAgB,CAAC,KAAK,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC;QAC7H,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,gBAAgB,IAAI,gBAAgB,CAAC,KAAK,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC;QAE7H,MAAM,SAAS,GAAG,SAAS,KAAK,uBAAuB,IAAI,SAAS,KAAK,uBAAuB,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,WAAW,CAAC;QAEjI,OAAO,CACH,0BACI,eACI,SAAS,EAAE,SAAS,EACpB,KAAK,EAAE,SAAS,EAChB,WAAW,EAAE,GAAG,EAAE;wBACd,IAAI,CAAC,QAAQ,EAAE,CAAC;oBACpB,CAAC,EACD,cAAc,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EACxD,cAAc,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,EACzD,WAAW,EAAE,GAAG,EAAE;wBACd,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;wBAC1D,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,yBAAyB,CAAC,eAAe,EAAE,CAAC;oBACvE,CAAC,EACD,SAAS,EAAE,GAAG,EAAE;wBACZ,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,uBAAuB,CAAC,eAAe,EAAE,CAAC;oBACrE,CAAC,EACD,SAAS,EAAE,MAAM,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EACjD,MAAM,EAAE,CAAC,KAAK,EAAE,EAAE;wBACd,IAAI,CAAC,IAAI,EAAE,CAAC;wBACZ,KAAK,CAAC,cAAc,EAAE,CAAC;oBAC3B,CAAC,EACD,WAAW,EAAE,CAAC,KAAK,EAAE,EAAE;wBACnB,KAAK,CAAC,cAAc,EAAE,CAAC;wBACvB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;oBACzB,CAAC,EACD,UAAU,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,EACzD,WAAW,EAAE,GAAG,EAAE;wBACd,0CAA0C;wBAC1C,IAAI,IAAI,CAAC,gBAAgB,EAAE;4BACvB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;yBACjC;6BAAM;4BACH,IAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;yBACtC;oBACL,CAAC,aAEA,WAAW,IAAI,CACZ,cACI,SAAS,EAAC,YAAY,EACtB,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE;gCACf,IAAI,CAAC,mBAAmB,EAAE,CAAC;gCAC3B,IAAI,KAAK,CAAC,QAAQ,EAAE;oCAChB,OAAO,WAAW,EAAE;wCAChB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;wCAC1B,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;wCAC5B,QAAQ;4CACJ,MAAM,CAAC,YAAY,EAAE,KAAK,eAAe;gDACrC,CAAC,CAAC,EAAE;gDACJ,CAAC,CAAC,KAAK,CAAC,aAAa,CAAC,MAAM,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;wCACnG,WAAW,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;wCAClC,MAAM,CAAC,iBAAiB,CAAC,UAAU,GAAG,IAAI,CAAC;qCAC9C;iCACJ;4BACL,CAAC,YAEA,OAAO,GACN,CACT,EAED,KAAC,wBAAwB,IACrB,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,EACnC,mBAAmB,EAAE,IAAI,CAAC,KAAK,CAAC,mBAAmB,EACnD,OAAO,EAAE,MAAM,EACf,OAAO,EAAE,GAAG,EAAE,GAAE,CAAC,EACjB,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,EAC/B,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAC/B,gBAAgB,EAAE,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAC7C,sBAAsB,EAAE,CAAC,UAAU,EAAE,EAAE;gCACnC,IAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,CAAC;4BAC7C,CAAC,GACH,IACA,EAEL,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAC9B,CACT,CAAC;IACN,CAAC;IAED,QAAQ,CAAC,KAAsC;QAC3C,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;QACnC,gEAAgE;QAChE,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;YACrB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;SAChC;aAAM;YACH,IAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;SACrC;IACL,CAAC;IAED,sBAAsB,CAAC,KAAsC;QACzD,0CAA0C;QAC1C,MAAM,MAAM,GAAG,KAAK,CAAC,MAAqB,CAAC;QAC3C,MAAM,IAAI,GAAG,MAAM,CAAC,qBAAqB,EAAE,CAAC;QAC5C,MAAM,CAAC,GAAG,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC;QAEnC,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,YAAY,SAAS,EAAE;YACxC,IAAI,CAAC,GAAG,cAAc,GAAG,CAAC,EAAE;gBACxB,iBAAiB;gBACjB,IAAI,CAAC,QAAQ,CAAC,EAAE,gBAAgB,EAAE,gBAAgB,CAAC,KAAK,EAAE,CAAC,CAAC;aAC/D;iBAAM,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,cAAc,CAAC,GAAG,CAAC,EAAE;gBACrC,IAAI,CAAC,QAAQ,CAAC,EAAE,gBAAgB,EAAE,gBAAgB,CAAC,KAAK,EAAE,CAAC,CAAC;aAC/D;iBAAM;gBACH,IAAI,CAAC,QAAQ,CAAC,EAAE,gBAAgB,EAAE,gBAAgB,CAAC,MAAM,EAAE,CAAC,CAAC;aAChE;SACJ;aAAM;YACH,IAAI,CAAC,GAAG,cAAc,GAAG,CAAC,EAAE;gBACxB,eAAe;gBACf,IAAI,CAAC,QAAQ,CAAC,EAAE,gBAAgB,EAAE,gBAAgB,CAAC,KAAK,EAAE,CAAC,CAAC;aAC/D;iBAAM;gBACH,IAAI,CAAC,QAAQ,CAAC,EAAE,gBAAgB,EAAE,gBAAgB,CAAC,KAAK,EAAE,CAAC,CAAC;aAC/D;SACJ;IACL,CAAC;IAED,IAAI;QACA,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,gBAAgB,CAAC,eAAe,EAAE,CAAC;QAC1D,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAClC,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,cAAc,IAAI,OAAO,EAAE;YAClD,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,uBAAuB,GAAG,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC;YAC7E,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,2BAA2B,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;SACzF;QACD,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,cAAc,GAAG,IAAI,CAAC;QAC7C,IAAI,CAAC,QAAQ,CAAC,EAAE,gBAAgB,EAAE,gBAAgB,CAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;QAC5E,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;IAClC,CAAC;CACJ","sourcesContent":["import type { Nullable } from \"core/types\";\r\nimport type { IExplorerExtensibilityGroup } from \"core/Debug/debugLayer\";\r\n\r\nimport { Tools } from \"../../tools\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport * as React from \"react\";\r\nimport type { GlobalState } from \"../../globalState\";\r\nimport { DragOverLocation } from \"../../globalState\";\r\nimport { ControlTreeItemComponent } from \"./entities/gui/controlTreeItemComponent\";\r\nimport type { Observer } from \"core/Misc/observable\";\r\nimport { Container } from \"gui/2D/controls/container\";\r\n\r\nimport expandedIcon from \"../../imgs/expandedIcon.svg\";\r\nimport collapsedIcon from \"../../imgs/collapsedIcon.svg\";\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nconst CONTROL_HEIGHT = 32;\r\n\r\nexport interface ITreeItemSelectableComponentProps {\r\n    entity: any;\r\n    selectedEntities: any[];\r\n    mustExpand?: boolean;\r\n    offset: number;\r\n    globalState: GlobalState;\r\n    extensibilityGroups?: IExplorerExtensibilityGroup[];\r\n    filter: Nullable<string>;\r\n}\r\n\r\nexport interface ITreeItemSelectableComponentState {\r\n    expand: boolean;\r\n    dragOver: boolean;\r\n    isSelected: boolean;\r\n    isHovered: boolean;\r\n    dragOverLocation: DragOverLocation;\r\n    blockDrag: boolean;\r\n}\r\n\r\nexport class TreeItemSelectableComponent extends React.Component<ITreeItemSelectableComponentProps, ITreeItemSelectableComponentState> {\r\n    private _onSelectionChangedObservable: Nullable<Observer<any>>;\r\n    private _onDraggingEndObservable: Nullable<Observer<any>>;\r\n    private _onDraggingStartObservable: Nullable<Observer<any>>;\r\n    /** flag flipped onDragEnter if dragOver is already true\r\n     * prevents dragLeave from immediately setting dragOver to false\r\n     * required to make dragging work as expected\r\n     * see: see: https://github.com/transformation-dev/matrx/tree/master/packages/dragster\r\n     */\r\n    private _secondDragEnter = false;\r\n    constructor(props: ITreeItemSelectableComponentProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            expand: true,\r\n            dragOver: false,\r\n            dragOverLocation: DragOverLocation.NONE,\r\n            isHovered: false,\r\n            isSelected: this.props.selectedEntities.includes(this.props.entity),\r\n            blockDrag: false,\r\n        };\r\n\r\n        this._onSelectionChangedObservable = props.globalState.onSelectionChangedObservable.add(() => {\r\n            this.setState({ isSelected: this.props.globalState.selectedControls.includes(this.props.entity) });\r\n        });\r\n\r\n        this._onDraggingEndObservable = props.globalState.onDraggingEndObservable.add(() => {\r\n            this.setState({ dragOverLocation: DragOverLocation.NONE });\r\n        });\r\n        this._onDraggingStartObservable = props.globalState.onDraggingStartObservable.add(() => {\r\n            this.forceUpdate();\r\n        });\r\n    }\r\n\r\n    switchExpandedState(): void {\r\n        this.props.entity.reservedDataStore.setExpandedState(!this.props.entity.reservedDataStore.isExpanded);\r\n        this.setState({ expand: !this.state.expand });\r\n    }\r\n\r\n    override shouldComponentUpdate(nextProps: ITreeItemSelectableComponentProps, nextState: { isSelected: boolean }) {\r\n        //if the next entity is going to be selected then we want to highlight it so update\r\n        if (nextProps.selectedEntities.includes(nextProps.entity)) {\r\n            nextState.isSelected = true;\r\n            return true;\r\n        } else {\r\n            nextState.isSelected = false;\r\n        }\r\n        if (Tools.LookForItems(nextProps.entity, nextProps.selectedEntities)) {\r\n            return true;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    scrollIntoView() {\r\n        const element = ReactDOM.findDOMNode(this) as Element;\r\n\r\n        if (element) {\r\n            element.scrollIntoView(false);\r\n        }\r\n    }\r\n\r\n    override componentWillUnmount() {\r\n        this.props.globalState.onSelectionChangedObservable.remove(this._onSelectionChangedObservable);\r\n        this.props.globalState.onDraggingEndObservable.remove(this._onDraggingEndObservable);\r\n        this.props.globalState.onDraggingStartObservable.remove(this._onDraggingStartObservable);\r\n    }\r\n\r\n    onSelect() {\r\n        const entity = this.props.entity;\r\n        this.props.globalState.select(entity);\r\n        this.props.globalState.selectionLock = true;\r\n    }\r\n\r\n    renderChildren(isExpanded: boolean, offset = true) {\r\n        const entity = this.props.entity;\r\n\r\n        if ((!entity.getChildren && !entity.children) || !isExpanded) {\r\n            return null;\r\n        }\r\n\r\n        const children = Tools.SortAndFilter(entity, entity.getChildren ? entity.getChildren() : entity.children);\r\n        if (entity.typeName === \"StackPanel\" || entity.typeName === \"VirtualKeyboard\") {\r\n            children.reverse();\r\n        }\r\n        return children.map((item, i) => {\r\n            if (item.name == \"Art-Board-Background\") {\r\n                return null;\r\n            }\r\n\r\n            return (\r\n                <TreeItemSelectableComponent\r\n                    globalState={this.props.globalState}\r\n                    mustExpand={this.props.mustExpand}\r\n                    extensibilityGroups={this.props.extensibilityGroups}\r\n                    selectedEntities={this.props.selectedEntities}\r\n                    key={i}\r\n                    offset={this.props.offset + (offset ? 2 : 0)}\r\n                    entity={item}\r\n                    filter={this.props.filter}\r\n                />\r\n            );\r\n        });\r\n    }\r\n\r\n    override render() {\r\n        if (\r\n            this.props.entity === this.props.globalState.workbench.trueRootContainer ||\r\n            this.props.entity === this.props.globalState.workbench.visibleRegionContainer ||\r\n            this.props.entity === this.props.globalState.workbench.panAndZoomContainer\r\n        ) {\r\n            return this.renderChildren(true, false);\r\n        }\r\n        const marginStyle = {\r\n            paddingLeft: 10 * (this.props.offset + 0.5) - 20 + \"px\",\r\n        };\r\n        const lineMarginStyle = {\r\n            marginLeft: 10 * (this.props.offset + 0.5) - 20 + \"px\",\r\n        };\r\n        let entity = this.props.entity;\r\n\r\n        if (!entity.reservedDataStore) {\r\n            entity.reservedDataStore = {\r\n                isExpanded: true,\r\n                setExpandedState: (expanded: boolean) => (entity.reservedDataStore.isExpanded = expanded),\r\n            };\r\n        }\r\n\r\n        const isExpanded = entity.reservedDataStore.isExpanded || Tools.LookForItems(this.props.entity, this.props.selectedEntities);\r\n\r\n        entity.reservedDataStore.isExpanded = isExpanded;\r\n\r\n        const chevron = isExpanded ? <img src={expandedIcon} className=\"icon\" /> : <img src={collapsedIcon} className=\"icon\" />;\r\n\r\n        let children = entity.getClassName() === \"MultiMaterial\" ? [] : Tools.SortAndFilter(entity, entity.getChildren ? entity.getChildren() : entity.children);\r\n        let hasChildren = children.length > 0;\r\n\r\n        if (this.props.filter) {\r\n            const lowerCaseFilter = this.props.filter.toLowerCase();\r\n            if (!entity.name || entity.name.toLowerCase().indexOf(lowerCaseFilter) === -1) {\r\n                if (!hasChildren) {\r\n                    return null;\r\n                }\r\n\r\n                if (entity.getDescendants) {\r\n                    if (\r\n                        entity.getDescendants(false, (n: any) => {\r\n                            return n.name && n.name.toLowerCase().indexOf(lowerCaseFilter) !== -1;\r\n                        }).length === 0\r\n                    ) {\r\n                        return null;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let className = \"itemContainer\"; //setting class name plus whatever extras based on states\r\n        className += this.state.isSelected && this.props.globalState.draggedControl === null ? \" selected\" : \"\";\r\n        className += this.state.isHovered && this.props.globalState.draggedControl === null ? \" hover\" : \"\";\r\n        className += this.state.dragOver && this.state.dragOverLocation == DragOverLocation.CENTER && entity instanceof Container ? \" parent\" : \"\";\r\n        className += this.props.globalState.draggedControl === this.props.entity ? \" dragged\" : \"\";\r\n        className += this.state.dragOver && this.state.dragOverLocation == DragOverLocation.ABOVE && entity.parent ? \" seAbove\" : \"\";\r\n        className += this.state.dragOver && this.state.dragOverLocation == DragOverLocation.BELOW && entity.parent ? \" seBelow\" : \"\";\r\n\r\n        const styleName = className === \"itemContainer seAbove\" || className === \"itemContainer seBelow\" ? lineMarginStyle : marginStyle;\r\n\r\n        return (\r\n            <div>\r\n                <div\r\n                    className={className}\r\n                    style={styleName}\r\n                    onPointerUp={() => {\r\n                        this.onSelect();\r\n                    }}\r\n                    onPointerEnter={() => this.setState({ isHovered: true })}\r\n                    onPointerLeave={() => this.setState({ isHovered: false })}\r\n                    onDragStart={() => {\r\n                        this.props.globalState.draggedControl = this.props.entity;\r\n                        this.props.globalState.onDraggingStartObservable.notifyObservers();\r\n                    }}\r\n                    onDragEnd={() => {\r\n                        this.props.globalState.onDraggingEndObservable.notifyObservers();\r\n                    }}\r\n                    draggable={entity.parent && !this.state.blockDrag}\r\n                    onDrop={(event) => {\r\n                        this.drop();\r\n                        event.preventDefault();\r\n                    }}\r\n                    onDragEnter={(event) => {\r\n                        event.preventDefault();\r\n                        this.dragOver(event);\r\n                    }}\r\n                    onDragOver={(event) => this.updateDragOverLocation(event)}\r\n                    onDragLeave={() => {\r\n                        // don't immediately set dragOver to false\r\n                        if (this._secondDragEnter) {\r\n                            this._secondDragEnter = false;\r\n                        } else {\r\n                            this.setState({ dragOver: false });\r\n                        }\r\n                    }}\r\n                >\r\n                    {hasChildren && (\r\n                        <div\r\n                            className=\"arrow icon\"\r\n                            onClick={(event) => {\r\n                                this.switchExpandedState();\r\n                                if (event.shiftKey) {\r\n                                    while (hasChildren) {\r\n                                        this.renderChildren(true);\r\n                                        entity = entity.children[0];\r\n                                        children =\r\n                                            entity.getClassName() === \"MultiMaterial\"\r\n                                                ? []\r\n                                                : Tools.SortAndFilter(entity, entity.getChildren ? entity.getChildren() : entity.children);\r\n                                        hasChildren = children.length > 0;\r\n                                        entity.reservedDataStore.isExpanded = true;\r\n                                    }\r\n                                }\r\n                            }}\r\n                        >\r\n                            {chevron}\r\n                        </div>\r\n                    )}\r\n\r\n                    <ControlTreeItemComponent\r\n                        globalState={this.props.globalState}\r\n                        extensibilityGroups={this.props.extensibilityGroups}\r\n                        control={entity}\r\n                        onClick={() => {}}\r\n                        isHovered={this.state.isHovered}\r\n                        isDragOver={this.state.dragOver}\r\n                        dragOverLocation={this.state.dragOverLocation}\r\n                        onRenamingStateChanged={(isRenaming) => {\r\n                            this.setState({ blockDrag: isRenaming });\r\n                        }}\r\n                    />\r\n                </div>\r\n\r\n                {this.renderChildren(isExpanded)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    dragOver(event: React.DragEvent<HTMLDivElement>): void {\r\n        this.updateDragOverLocation(event);\r\n        // if we've already hovered the element, record a new drag event\r\n        if (this.state.dragOver) {\r\n            this._secondDragEnter = true;\r\n        } else {\r\n            this.setState({ dragOver: true });\r\n        }\r\n    }\r\n\r\n    updateDragOverLocation(event: React.DragEvent<HTMLDivElement>) {\r\n        //check the positions of the mouse cursor.\r\n        const target = event.target as HTMLElement;\r\n        const rect = target.getBoundingClientRect();\r\n        const y = event.clientY - rect.top;\r\n\r\n        if (this.props.entity instanceof Container) {\r\n            if (y < CONTROL_HEIGHT / 5) {\r\n                //split in fifths\r\n                this.setState({ dragOverLocation: DragOverLocation.ABOVE });\r\n            } else if (y > (4 * CONTROL_HEIGHT) / 5) {\r\n                this.setState({ dragOverLocation: DragOverLocation.BELOW });\r\n            } else {\r\n                this.setState({ dragOverLocation: DragOverLocation.CENTER });\r\n            }\r\n        } else {\r\n            if (y < CONTROL_HEIGHT / 2) {\r\n                //split in half\r\n                this.setState({ dragOverLocation: DragOverLocation.ABOVE });\r\n            } else {\r\n                this.setState({ dragOverLocation: DragOverLocation.BELOW });\r\n            }\r\n        }\r\n    }\r\n\r\n    drop(): void {\r\n        this.props.globalState.onDropObservable.notifyObservers();\r\n        const control = this.props.entity;\r\n        if (this.props.globalState.draggedControl != control) {\r\n            this.props.globalState.draggedControlDirection = this.state.dragOverLocation;\r\n            this.props.globalState.onParentingChangeObservable.notifyObservers(this.props.entity);\r\n        }\r\n        this.props.globalState.draggedControl = null;\r\n        this.setState({ dragOverLocation: DragOverLocation.NONE, dragOver: false });\r\n        this._secondDragEnter = false;\r\n    }\r\n}\r\n"]}