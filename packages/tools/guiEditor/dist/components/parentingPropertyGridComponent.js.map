{"version":3,"file":"parentingPropertyGridComponent.js","sourceRoot":"","sources":["../../src/components/parentingPropertyGridComponent.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,iBAAiB,EAAE,MAAM,8CAA8C,CAAC;AACjF,OAAO,EAAE,kBAAkB,EAAE,MAAM,+CAA+C,CAAC;AAKnF,OAAO,EAAE,KAAK,EAAE,MAAM,UAAU,CAAC;AACjC,OAAO,EAAE,OAAO,EAAE,MAAM,wBAAwB,CAAC;AAQjD,MAAM,OAAO,8BAA+B,SAAQ,KAAK,CAAC,SAA+C;IACrG,YAAY,KAA2C;QACnD,KAAK,CAAC,KAAK,CAAC,CAAC;IACjB,CAAC;IAID,kBAAkB;QACd,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAc,CAAC;QAC/C,IAAI,IAAI,EAAE;YACN,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;SAChG;IACL,CAAC;IAED,WAAW;QACP,MAAM,QAAQ,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAc,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC1F,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC;QAC7B,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,CAAC,CAAC;IACpC,CAAC;IAEO,WAAW,CAAC,IAAU,EAAE,cAAuB,EAAE,OAAgB;QACrE,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;QACpD,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;QACnC,KAAK,CAAC,WAAW,CAAC,IAAI,EAAE,KAAK,EAAE,cAAc,EAAE,OAAO,CAAC,CAAC;IAC5D,CAAC;IAEQ,MAAM;QACX,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,OAAO,CACH,eAAK,SAAS,EAAC,MAAM,aACjB,aAAI,SAAS,EAAC,IAAI,GAAG,EACrB,KAAC,iBAAiB,IAAC,OAAO,EAAC,EAAE,EAAC,KAAK,EAAC,gBAAgB,EAAC,KAAK,EAAC,GAAG,EAAC,KAAK,EAAC,MAAM,GAAqB,EAChG,eAAK,SAAS,EAAC,YAAY,aACvB,KAAC,kBAAkB,IACf,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,EACjC,KAAK,EAAE,OAAO,EACd,MAAM,EAAE,IAAI,EACZ,YAAY,EAAE,YAAY,EAC1B,SAAS,EAAE,IAAI,EACf,GAAG,EAAE,CAAC,EACN,QAAQ,EAAE,GAAG,EAAE;gCACX,IAAI,CAAC,kBAAkB,EAAE,CAAC;4BAC9B,CAAC,GACH,EACF,KAAC,kBAAkB,IACf,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,EACjC,KAAK,EAAE,UAAU,EACjB,MAAM,EAAE,IAAI,EACZ,YAAY,EAAE,eAAe,EAC7B,SAAS,EAAE,IAAI,EACf,GAAG,EAAE,CAAC,EACN,QAAQ,EAAE,GAAG,EAAE;gCACX,IAAI,CAAC,kBAAkB,EAAE,CAAC;4BAC9B,CAAC,GACH,IACA,IACJ,CACT,CAAC;IACN,CAAC;CACJ","sourcesContent":["import * as React from \"react\";\r\nimport type { Control } from \"gui/2D/controls/control\";\r\nimport { TextLineComponent } from \"shared-ui-components/lines/textLineComponent\";\r\nimport { FloatLineComponent } from \"shared-ui-components/lines/floatLineComponent\";\r\nimport type { LockObject } from \"shared-ui-components/tabs/propertyGrids/lockObject\";\r\nimport type { PropertyChangedEvent } from \"shared-ui-components/propertyChangedEvent\";\r\nimport type { Observable } from \"core/Misc/observable\";\r\nimport type { Grid } from \"gui/2D/controls/grid\";\r\nimport { Tools } from \"../tools\";\r\nimport { Vector2 } from \"core/Maths/math.vector\";\r\n\r\ninterface IParentingPropertyGridComponentProps {\r\n    control: Control;\r\n    lockObject: LockObject;\r\n    onPropertyChangedObservable?: Observable<PropertyChangedEvent>;\r\n}\r\n\r\nexport class ParentingPropertyGridComponent extends React.Component<IParentingPropertyGridComponentProps> {\r\n    constructor(props: IParentingPropertyGridComponentProps) {\r\n        super(props);\r\n    }\r\n    private _columnNumber: number;\r\n    private _rowNumber: number;\r\n\r\n    updateGridPosition() {\r\n        const grid = this.props.control.parent as Grid;\r\n        if (grid) {\r\n            this._changeCell(grid, this.props.control, new Vector2(this._rowNumber, this._columnNumber));\r\n        }\r\n    }\r\n\r\n    getCellInfo() {\r\n        const cellInfo = Tools.GetCellInfo(this.props.control.parent as Grid, this.props.control);\r\n        this._rowNumber = cellInfo.x;\r\n        this._columnNumber = cellInfo.y;\r\n    }\r\n\r\n    private _changeCell(grid: Grid, draggedControl: Control, newCell: Vector2) {\r\n        const index = grid.children.indexOf(draggedControl);\r\n        grid.removeControl(draggedControl);\r\n        Tools.ReorderGrid(grid, index, draggedControl, newCell);\r\n    }\r\n\r\n    override render() {\r\n        this.getCellInfo();\r\n        return (\r\n            <div className=\"pane\">\r\n                <hr className=\"ge\" />\r\n                <TextLineComponent tooltip=\"\" label=\"GRID PARENTING\" value=\" \" color=\"grey\"></TextLineComponent>\r\n                <div className=\"ge-divider\">\r\n                    <FloatLineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label={\"Row #\"}\r\n                        target={this}\r\n                        propertyName={\"_rowNumber\"}\r\n                        isInteger={true}\r\n                        min={0}\r\n                        onChange={() => {\r\n                            this.updateGridPosition();\r\n                        }}\r\n                    />\r\n                    <FloatLineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label={\"Column #\"}\r\n                        target={this}\r\n                        propertyName={\"_columnNumber\"}\r\n                        isInteger={true}\r\n                        min={0}\r\n                        onChange={() => {\r\n                            this.updateGridPosition();\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]}