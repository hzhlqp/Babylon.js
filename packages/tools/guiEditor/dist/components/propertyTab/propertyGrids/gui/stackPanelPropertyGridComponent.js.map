{"version":3,"file":"stackPanelPropertyGridComponent.js","sourceRoot":"","sources":["../../../../../src/components/propertyTab/propertyGrids/gui/stackPanelPropertyGridComponent.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport type { Observable } from \"core/Misc/observable\";\r\nimport type { PropertyChangedEvent } from \"shared-ui-components/propertyChangedEvent\";\r\nimport { CommonControlPropertyGridComponent } from \"../gui/commonControlPropertyGridComponent\";\r\nimport type { LockObject } from \"shared-ui-components/tabs/propertyGrids/lockObject\";\r\nimport { StackPanel } from \"gui/2D/controls/stackPanel\";\r\nimport { CheckBoxLineComponent } from \"shared-ui-components/lines/checkBoxLineComponent\";\r\nimport { FloatLineComponent } from \"shared-ui-components/lines/floatLineComponent\";\r\nimport { TextLineComponent } from \"shared-ui-components/lines/textLineComponent\";\r\nimport { makeTargetsProxy } from \"shared-ui-components/lines/targetsProxy\";\r\nimport { ContainerPropertyGridComponent } from \"./containerPropertyGridComponent\";\r\n\r\nimport alignVerticalIcon from \"shared-ui-components/imgs/alignVerticalIcon.svg\";\r\nimport stackPanelSpacingIcon from \"shared-ui-components/imgs/stackPanelSpacingIcon.svg\";\r\nimport { IconComponent } from \"shared-ui-components/lines/iconComponent\";\r\nimport { ValueAndUnit } from \"gui/2D/valueAndUnit\";\r\nimport { CoordinateHelper } from \"../../../../diagram/coordinateHelper\";\r\nimport { UnitButton } from \"shared-ui-components/lines/unitButton\";\r\nimport type { GlobalState } from \"../../../../globalState\";\r\n\r\ninterface IStackPanelPropertyGridComponentProps {\r\n    stackPanels: StackPanel[];\r\n    lockObject: LockObject;\r\n    onPropertyChangedObservable?: Observable<PropertyChangedEvent>;\r\n    onFontsParsedObservable?: Observable<void>;\r\n    globalState?: GlobalState;\r\n}\r\n\r\nexport class StackPanelPropertyGridComponent extends React.Component<IStackPanelPropertyGridComponentProps> {\r\n    constructor(props: IStackPanelPropertyGridComponentProps) {\r\n        super(props);\r\n    }\r\n\r\n    override render() {\r\n        const { stackPanels, lockObject, onPropertyChangedObservable } = this.props;\r\n        const proxy = makeTargetsProxy(stackPanels, onPropertyChangedObservable);\r\n\r\n        return (\r\n            <div className=\"pane\">\r\n                <CommonControlPropertyGridComponent\r\n                    lockObject={lockObject}\r\n                    controls={stackPanels}\r\n                    onPropertyChangedObservable={onPropertyChangedObservable}\r\n                    onFontsParsedObservable={this.props.onFontsParsedObservable}\r\n                    globalState={this.props.globalState}\r\n                />\r\n                <hr />\r\n                <TextLineComponent label=\"STACKPANEL\" value=\" \" color=\"grey\"></TextLineComponent>\r\n                <div className=\"ge-divider\">\r\n                    <IconComponent icon={alignVerticalIcon} label={\"Determines if children are stacked horizontally or vertically\"} />\r\n                    <CheckBoxLineComponent\r\n                        label={proxy.isVertical ? \"ALIGNMENT: VERTICAL\" : \"ALIGNMENT: HORIZONTAL\"}\r\n                        target={proxy}\r\n                        propertyName=\"isVertical\"\r\n                        onValueChanged={() => {\r\n                            for (const panel of stackPanels) {\r\n                                for (const child of panel.children) {\r\n                                    if (proxy.isVertical) {\r\n                                        child.horizontalAlignment = StackPanel.HORIZONTAL_ALIGNMENT_CENTER;\r\n                                        child._left.value = 0;\r\n                                        if (child._height.unit === ValueAndUnit.UNITMODE_PERCENTAGE) {\r\n                                            CoordinateHelper.ConvertToPixels(child, [\"height\"]);\r\n                                        }\r\n                                    } else {\r\n                                        child.verticalAlignment = StackPanel.VERTICAL_ALIGNMENT_CENTER;\r\n                                        child._top.value = 0;\r\n                                        if (child._width.unit === ValueAndUnit.UNITMODE_PERCENTAGE) {\r\n                                            CoordinateHelper.ConvertToPixels(child, [\"width\"]);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            this.forceUpdate();\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className=\"ge-divider double\">\r\n                    <IconComponent icon={stackPanelSpacingIcon} label={\"Spacing between children\"} />\r\n                    <FloatLineComponent\r\n                        lockObject={lockObject}\r\n                        label=\" \"\r\n                        target={proxy}\r\n                        propertyName=\"spacing\"\r\n                        onChange={() => stackPanels.forEach((panel) => panel._markAsDirty())}\r\n                        unit={<UnitButton unit=\"PX\" locked />}\r\n                        arrows={true}\r\n                        min={0}\r\n                    />\r\n                </div>\r\n                <ContainerPropertyGridComponent containers={stackPanels} onPropertyChangedObservable={onPropertyChangedObservable} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]}