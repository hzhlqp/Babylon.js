{"version":3,"file":"controlPropertyGridComponent.js","sourceRoot":"","sources":["../../../../../src/components/propertyTab/propertyGrids/gui/controlPropertyGridComponent.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAI/B,OAAO,EAAE,kCAAkC,EAAE,MAAM,2CAA2C,CAAC;AAY/F,MAAM,OAAO,4BAA6B,SAAQ,KAAK,CAAC,SAA6C;IACjG,YAAY,KAAyC;QACjD,KAAK,CAAC,KAAK,CAAC,CAAC;IACjB,CAAC;IAEQ,MAAM;QACX,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;QAErC,OAAO,CACH,cAAK,SAAS,EAAC,MAAM,YACjB,KAAC,kCAAkC,IAC/B,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,EACjC,QAAQ,EAAE,QAAQ,EAClB,2BAA2B,EAAE,IAAI,CAAC,KAAK,CAAC,2BAA2B,EACnE,uBAAuB,EAAE,IAAI,CAAC,KAAK,CAAC,uBAAuB,EAC3D,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,GACrC,GACA,CACT,CAAC;IACN,CAAC;CACJ","sourcesContent":["import * as React from \"react\";\r\nimport type { Observable } from \"core/Misc/observable\";\r\nimport type { PropertyChangedEvent } from \"shared-ui-components/propertyChangedEvent\";\r\nimport type { Control } from \"gui/2D/controls/control\";\r\nimport { CommonControlPropertyGridComponent } from \"../gui/commonControlPropertyGridComponent\";\r\nimport type { LockObject } from \"shared-ui-components/tabs/propertyGrids/lockObject\";\r\nimport type { GlobalState } from \"../../../../globalState\";\r\n\r\ninterface IControlPropertyGridComponentProps {\r\n    controls: Control[];\r\n    lockObject: LockObject;\r\n    onPropertyChangedObservable?: Observable<PropertyChangedEvent>;\r\n    onFontsParsedObservable?: Observable<void>;\r\n    globalState?: GlobalState;\r\n}\r\n\r\nexport class ControlPropertyGridComponent extends React.Component<IControlPropertyGridComponentProps> {\r\n    constructor(props: IControlPropertyGridComponentProps) {\r\n        super(props);\r\n    }\r\n\r\n    override render() {\r\n        const controls = this.props.controls;\r\n\r\n        return (\r\n            <div className=\"pane\">\r\n                <CommonControlPropertyGridComponent\r\n                    lockObject={this.props.lockObject}\r\n                    controls={controls}\r\n                    onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    onFontsParsedObservable={this.props.onFontsParsedObservable}\r\n                    globalState={this.props.globalState}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]}