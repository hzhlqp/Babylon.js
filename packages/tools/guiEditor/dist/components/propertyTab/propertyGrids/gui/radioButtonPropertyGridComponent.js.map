{"version":3,"file":"radioButtonPropertyGridComponent.js","sourceRoot":"","sources":["../../../../../src/components/propertyTab/propertyGrids/gui/radioButtonPropertyGridComponent.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport type { Observable } from \"core/Misc/observable\";\r\nimport type { PropertyChangedEvent } from \"shared-ui-components/propertyChangedEvent\";\r\nimport { CommonControlPropertyGridComponent } from \"../gui/commonControlPropertyGridComponent\";\r\nimport type { LockObject } from \"shared-ui-components/tabs/propertyGrids/lockObject\";\r\nimport type { RadioButton } from \"gui/2D/controls/radioButton\";\r\nimport { FloatLineComponent } from \"shared-ui-components/lines/floatLineComponent\";\r\nimport { TextInputLineComponent } from \"shared-ui-components/lines/textInputLineComponent\";\r\nimport { CheckBoxLineComponent } from \"shared-ui-components/lines/checkBoxLineComponent\";\r\nimport { TextLineComponent } from \"shared-ui-components/lines/textLineComponent\";\r\nimport { makeTargetsProxy } from \"shared-ui-components/lines/targetsProxy\";\r\n\r\nimport strokeWeightIcon from \"shared-ui-components/imgs/strokeWeightIcon.svg\";\r\nimport checkboxIcon from \"shared-ui-components/imgs/checkboxIconDark.svg\";\r\nimport scaleIcon from \"shared-ui-components/imgs/scaleIcon.svg\";\r\nimport { IconComponent } from \"shared-ui-components/lines/iconComponent\";\r\nimport { UnitButton } from \"shared-ui-components/lines/unitButton\";\r\nimport type { GlobalState } from \"../../../../globalState\";\r\n\r\ninterface IRadioButtonPropertyGridComponentProps {\r\n    radioButtons: RadioButton[];\r\n    lockObject: LockObject;\r\n    onPropertyChangedObservable?: Observable<PropertyChangedEvent>;\r\n    onFontsParsedObservable?: Observable<void>;\r\n    globalState?: GlobalState;\r\n}\r\n\r\nexport class RadioButtonPropertyGridComponent extends React.Component<IRadioButtonPropertyGridComponentProps> {\r\n    constructor(props: IRadioButtonPropertyGridComponentProps) {\r\n        super(props);\r\n    }\r\n\r\n    override render() {\r\n        const radioButtons = this.props.radioButtons;\r\n\r\n        return (\r\n            <div className=\"pane\">\r\n                <CommonControlPropertyGridComponent\r\n                    lockObject={this.props.lockObject}\r\n                    controls={radioButtons}\r\n                    onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    onFontsParsedObservable={this.props.onFontsParsedObservable}\r\n                    globalState={this.props.globalState}\r\n                />\r\n                <hr />\r\n                <TextLineComponent label=\"RADIO BUTTON\" value=\" \" color=\"grey\"></TextLineComponent>\r\n                <div className=\"ge-divider double\">\r\n                    <IconComponent icon={strokeWeightIcon} label={\"Stroke Weight\"} />\r\n                    <FloatLineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"\"\r\n                        target={makeTargetsProxy(radioButtons, this.props.onPropertyChangedObservable)}\r\n                        propertyName=\"thickness\"\r\n                        unit={<UnitButton unit=\"PX\" locked />}\r\n                        arrows\r\n                        min={0}\r\n                        digits={2}\r\n                    />\r\n                </div>\r\n                <div className=\"ge-divider double\">\r\n                    <IconComponent icon={scaleIcon} label={\"Check Size Ratio\"} />\r\n                    <FloatLineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"\"\r\n                        target={makeTargetsProxy(radioButtons, this.props.onPropertyChangedObservable)}\r\n                        propertyName=\"checkSizeRatio\"\r\n                        unit={<UnitButton unit=\"PX\" locked />}\r\n                        arrows\r\n                        min={0}\r\n                        digits={2}\r\n                    />\r\n                </div>\r\n                <div className=\"ge-divider\">\r\n                    <IconComponent icon={strokeWeightIcon} label={\"Name of Group\"} />\r\n                    <TextInputLineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"\"\r\n                        target={makeTargetsProxy(radioButtons, this.props.onPropertyChangedObservable)}\r\n                        propertyName=\"group\"\r\n                    />\r\n                </div>\r\n                <div className=\"ge-divider\">\r\n                    <IconComponent icon={checkboxIcon} label={\"Is Checked\"} />\r\n                    <CheckBoxLineComponent label=\"CHECKED\" target={makeTargetsProxy(radioButtons, this.props.onPropertyChangedObservable)} propertyName=\"isChecked\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]}