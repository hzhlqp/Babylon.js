{"version":3,"file":"rectanglePropertyGridComponent.js","sourceRoot":"","sources":["../../../../../src/components/propertyTab/propertyGrids/gui/rectanglePropertyGridComponent.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport type { Observable } from \"core/Misc/observable\";\r\nimport type { PropertyChangedEvent } from \"shared-ui-components/propertyChangedEvent\";\r\nimport { CommonControlPropertyGridComponent } from \"../gui/commonControlPropertyGridComponent\";\r\nimport type { LockObject } from \"shared-ui-components/tabs/propertyGrids/lockObject\";\r\nimport type { Rectangle } from \"gui/2D/controls/rectangle\";\r\nimport { FloatLineComponent } from \"shared-ui-components/lines/floatLineComponent\";\r\nimport { TextLineComponent } from \"shared-ui-components/lines/textLineComponent\";\r\nimport { makeTargetsProxy } from \"shared-ui-components/lines/targetsProxy\";\r\nimport { ContainerPropertyGridComponent } from \"./containerPropertyGridComponent\";\r\n\r\nimport cornerRadiusIcon from \"shared-ui-components/imgs/conerRadiusIcon.svg\";\r\nimport strokeWeightIcon from \"shared-ui-components/imgs/strokeWeightIcon.svg\";\r\nimport { IconComponent } from \"shared-ui-components/lines/iconComponent\";\r\nimport { UnitButton } from \"shared-ui-components/lines/unitButton\";\r\nimport type { GlobalState } from \"../../../../globalState\";\r\n\r\ninterface IRectanglePropertyGridComponentProps {\r\n    rectangles: Rectangle[];\r\n    lockObject: LockObject;\r\n    onPropertyChangedObservable?: Observable<PropertyChangedEvent>;\r\n    onFontsParsedObservable?: Observable<void>;\r\n    globalState?: GlobalState;\r\n}\r\n\r\nexport class RectanglePropertyGridComponent extends React.Component<IRectanglePropertyGridComponentProps> {\r\n    constructor(props: IRectanglePropertyGridComponentProps) {\r\n        super(props);\r\n    }\r\n\r\n    override render() {\r\n        const { rectangles, lockObject, onPropertyChangedObservable } = this.props;\r\n        const proxy = makeTargetsProxy(rectangles, onPropertyChangedObservable);\r\n\r\n        return (\r\n            <div className=\"pane\">\r\n                <CommonControlPropertyGridComponent\r\n                    lockObject={lockObject}\r\n                    controls={rectangles}\r\n                    onPropertyChangedObservable={onPropertyChangedObservable}\r\n                    onFontsParsedObservable={this.props.onFontsParsedObservable}\r\n                    globalState={this.props.globalState}\r\n                />\r\n                <hr />\r\n                <TextLineComponent label=\"RECTANGLE\" value=\" \" color=\"grey\"></TextLineComponent>\r\n                <div className=\"ge-divider double\">\r\n                    <IconComponent icon={strokeWeightIcon} label={\"Stroke Weight\"} />\r\n                    <FloatLineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"\"\r\n                        target={proxy}\r\n                        propertyName=\"thickness\"\r\n                        unit={<UnitButton unit=\"PX\" locked />}\r\n                        arrows\r\n                        min={0}\r\n                        digits={2}\r\n                    />\r\n                </div>\r\n                <div className=\"ge-divider double\">\r\n                    <IconComponent icon={cornerRadiusIcon} label={\"Corner Radius\"} />\r\n                    <FloatLineComponent\r\n                        lockObject={lockObject}\r\n                        label=\"\"\r\n                        target={proxy}\r\n                        propertyName=\"cornerRadius\"\r\n                        unit={<UnitButton unit=\"PX\" locked />}\r\n                        arrows\r\n                        min={0}\r\n                        digits={2}\r\n                    />\r\n                </div>\r\n                <div className=\"ge-divider quad\">\r\n                    <FloatLineComponent\r\n                        lockObject={lockObject}\r\n                        label=\"X\"\r\n                        target={proxy}\r\n                        propertyName=\"cornerRadiusX\"\r\n                        unit={<UnitButton unit=\"PX\" locked />}\r\n                        arrows\r\n                        min={0}\r\n                        digits={2}\r\n                    />\r\n                    <FloatLineComponent\r\n                        lockObject={lockObject}\r\n                        label=\"Y\"\r\n                        target={proxy}\r\n                        propertyName=\"cornerRadiusY\"\r\n                        unit={<UnitButton unit=\"PX\" locked />}\r\n                        arrows\r\n                        min={0}\r\n                        digits={2}\r\n                    />\r\n                    <FloatLineComponent\r\n                        lockObject={lockObject}\r\n                        label=\"Z\"\r\n                        target={proxy}\r\n                        propertyName=\"cornerRadiusZ\"\r\n                        unit={<UnitButton unit=\"PX\" locked />}\r\n                        arrows\r\n                        min={0}\r\n                        digits={2}\r\n                    />\r\n                    <FloatLineComponent\r\n                        lockObject={lockObject}\r\n                        label=\"W\"\r\n                        target={proxy}\r\n                        propertyName=\"cornerRadiusW\"\r\n                        unit={<UnitButton unit=\"PX\" locked />}\r\n                        arrows\r\n                        min={0}\r\n                        digits={2}\r\n                    />\r\n                </div>\r\n                <ContainerPropertyGridComponent containers={rectangles} onPropertyChangedObservable={onPropertyChangedObservable} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]}