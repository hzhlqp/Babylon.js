{"version":3,"file":"colorPickerPropertyGridComponent.js","sourceRoot":"","sources":["../../../../../src/components/propertyTab/propertyGrids/gui/colorPickerPropertyGridComponent.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAG/B,OAAO,EAAE,kCAAkC,EAAE,MAAM,2CAA2C,CAAC;AAE/F,OAAO,EAAE,SAAS,EAAE,MAAM,+CAA+C,CAAC;AAE1E,OAAO,EAAE,iBAAiB,EAAE,MAAM,8CAA8C,CAAC;AACjF,OAAO,EAAE,gBAAgB,EAAE,MAAM,yCAAyC,CAAC;AAE3E,OAAO,aAAa,MAAM,6CAA6C,CAAC;AACxE,OAAO,EAAE,aAAa,EAAE,MAAM,0CAA0C,CAAC;AAWzE,MAAM,OAAO,gCAAiC,SAAQ,KAAK,CAAC,SAAiD;IACzG,YAAY,KAA6C;QACrD,KAAK,CAAC,KAAK,CAAC,CAAC;IACjB,CAAC;IAEQ,MAAM;QACX,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;QAE7C,OAAO,CACH,eAAK,SAAS,EAAC,MAAM,aACjB,KAAC,kCAAkC,IAC/B,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,EACjC,QAAQ,EAAE,YAAY,EACtB,uBAAuB,EAAE,IAAI,CAAC,KAAK,CAAC,uBAAuB,EAC3D,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,GACrC,EACF,cAAM,EACN,KAAC,iBAAiB,IAAC,KAAK,EAAC,cAAc,EAAC,KAAK,EAAC,GAAG,EAAC,KAAK,EAAC,MAAM,GAAqB,EACnF,eAAK,SAAS,EAAC,YAAY,aACvB,KAAC,aAAa,IAAC,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE,oBAAoB,GAAI,EACnE,KAAC,SAAS,IACN,KAAK,EAAC,EAAE,EACR,MAAM,EAAE,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,2BAA2B,CAAC,EAC9E,YAAY,EAAC,OAAO,EACpB,YAAY,EAAE,IAAI,EAClB,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,GACnC,IACA,IACJ,CACT,CAAC;IACN,CAAC;CACJ","sourcesContent":["import * as React from \"react\";\r\nimport type { Observable } from \"core/Misc/observable\";\r\nimport type { PropertyChangedEvent } from \"shared-ui-components/propertyChangedEvent\";\r\nimport { CommonControlPropertyGridComponent } from \"../gui/commonControlPropertyGridComponent\";\r\nimport type { ColorPicker } from \"gui/2D/controls/colorpicker\";\r\nimport { ColorLine } from \"shared-ui-components/lines/colorLineComponent\";\r\nimport type { LockObject } from \"shared-ui-components/tabs/propertyGrids/lockObject\";\r\nimport { TextLineComponent } from \"shared-ui-components/lines/textLineComponent\";\r\nimport { makeTargetsProxy } from \"shared-ui-components/lines/targetsProxy\";\r\n\r\nimport fillColorIcon from \"shared-ui-components/imgs/fillColorIcon.svg\";\r\nimport { IconComponent } from \"shared-ui-components/lines/iconComponent\";\r\nimport type { GlobalState } from \"../../../../globalState\";\r\n\r\ninterface IColorPickerPropertyGridComponentProps {\r\n    colorPickers: ColorPicker[];\r\n    lockObject: LockObject;\r\n    onPropertyChangedObservable?: Observable<PropertyChangedEvent>;\r\n    onFontsParsedObservable?: Observable<void>;\r\n    globalState?: GlobalState;\r\n}\r\n\r\nexport class ColorPickerPropertyGridComponent extends React.Component<IColorPickerPropertyGridComponentProps> {\r\n    constructor(props: IColorPickerPropertyGridComponentProps) {\r\n        super(props);\r\n    }\r\n\r\n    override render() {\r\n        const colorPickers = this.props.colorPickers;\r\n\r\n        return (\r\n            <div className=\"pane\">\r\n                <CommonControlPropertyGridComponent\r\n                    lockObject={this.props.lockObject}\r\n                    controls={colorPickers}\r\n                    onFontsParsedObservable={this.props.onFontsParsedObservable}\r\n                    globalState={this.props.globalState}\r\n                />\r\n                <hr />\r\n                <TextLineComponent label=\"COLOR PICKER\" value=\" \" color=\"grey\"></TextLineComponent>\r\n                <div className=\"ge-divider\">\r\n                    <IconComponent icon={fillColorIcon} label={\"Color Picker Value\"} />\r\n                    <ColorLine\r\n                        label=\"\"\r\n                        target={makeTargetsProxy(colorPickers, this.props.onPropertyChangedObservable)}\r\n                        propertyName=\"value\"\r\n                        disableAlpha={true}\r\n                        lockObject={this.props.lockObject}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]}