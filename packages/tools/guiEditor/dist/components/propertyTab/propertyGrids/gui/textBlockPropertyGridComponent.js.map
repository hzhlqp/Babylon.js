{"version":3,"file":"textBlockPropertyGridComponent.js","sourceRoot":"","sources":["../../../../../src/components/propertyTab/propertyGrids/gui/textBlockPropertyGridComponent.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport type { Observable } from \"core/Misc/observable\";\r\nimport type { PropertyChangedEvent } from \"shared-ui-components/propertyChangedEvent\";\r\nimport { CommonControlPropertyGridComponent } from \"../gui/commonControlPropertyGridComponent\";\r\nimport type { TextBlock } from \"gui/2D/controls/textBlock\";\r\nimport { TextWrapping } from \"gui/2D/controls/textBlock\";\r\nimport { TextInputLineComponent } from \"shared-ui-components/lines/textInputLineComponent\";\r\nimport type { LockObject } from \"shared-ui-components/tabs/propertyGrids/lockObject\";\r\nimport { OptionsLine } from \"shared-ui-components/lines/optionsLineComponent\";\r\nimport { CheckBoxLineComponent } from \"shared-ui-components/lines/checkBoxLineComponent\";\r\nimport { TextLineComponent } from \"shared-ui-components/lines/textLineComponent\";\r\nimport { ColorLine } from \"shared-ui-components/lines/colorLineComponent\";\r\nimport { makeTargetsProxy } from \"shared-ui-components/lines/targetsProxy\";\r\nimport type { GlobalState } from \"../../../../globalState\";\r\n\r\ninterface ITextBlockPropertyGridComponentProps {\r\n    textBlocks: TextBlock[];\r\n    lockObject: LockObject;\r\n    onPropertyChangedObservable?: Observable<PropertyChangedEvent>;\r\n    onFontsParsedObservable?: Observable<void>;\r\n    globalState?: GlobalState;\r\n}\r\n\r\nimport fillColorIcon from \"shared-ui-components/imgs/fillColorIcon.svg\";\r\nimport fontFamilyIcon from \"shared-ui-components/imgs/fontFamilyIcon.svg\";\r\nimport strokeWeightIcon from \"shared-ui-components/imgs/strokeWeightIcon.svg\";\r\nimport resizeToFitIcon from \"shared-ui-components/imgs/resizeToFitIcon.svg\";\r\nimport wordWrapIcon from \"shared-ui-components/imgs/wordWrapIcon.svg\";\r\nimport lineSpacingIcon from \"shared-ui-components/imgs/LineSpacingIcon.svg\";\r\nimport { IconComponent } from \"shared-ui-components/lines/iconComponent\";\r\nimport { FloatLineComponent } from \"shared-ui-components/lines/floatLineComponent\";\r\nimport { UnitButton } from \"shared-ui-components/lines/unitButton\";\r\n\r\nexport class TextBlockPropertyGridComponent extends React.Component<ITextBlockPropertyGridComponentProps> {\r\n    constructor(props: ITextBlockPropertyGridComponentProps) {\r\n        super(props);\r\n    }\r\n\r\n    override render() {\r\n        const { onPropertyChangedObservable } = this.props;\r\n        const textBlocks = this.props.textBlocks;\r\n        const proxy = makeTargetsProxy(textBlocks, onPropertyChangedObservable);\r\n\r\n        const wrappingOptions = [\r\n            { label: \"Clip\", value: TextWrapping.Clip },\r\n            { label: \"Ellipsis\", value: TextWrapping.Ellipsis },\r\n            { label: \"Word wrap\", value: TextWrapping.WordWrap },\r\n        ];\r\n\r\n        return (\r\n            <div className=\"pane\">\r\n                <CommonControlPropertyGridComponent\r\n                    lockObject={this.props.lockObject}\r\n                    controls={textBlocks}\r\n                    onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    onFontsParsedObservable={this.props.onFontsParsedObservable}\r\n                    globalState={this.props.globalState}\r\n                />\r\n                <hr />\r\n                <TextLineComponent label=\"TEXTBLOCK\" value=\" \" color=\"grey\"></TextLineComponent>\r\n                <div className=\"ge-divider\">\r\n                    <IconComponent icon={fontFamilyIcon} label=\"Text\" />\r\n                    <TextInputLineComponent lockObject={this.props.lockObject} label=\" \" target={proxy} propertyName=\"text\" />\r\n                </div>\r\n                <div className=\"ge-divider\">\r\n                    <IconComponent icon={resizeToFitIcon} label=\"Automatically resize the text block to fit the size of the text\" />\r\n                    <CheckBoxLineComponent label=\"RESIZE TO FIT\" target={proxy} propertyName=\"resizeToFit\" />\r\n                </div>\r\n                <div className=\"ge-divider\">\r\n                    <IconComponent icon={wordWrapIcon} label=\"Text Wrapping\" />\r\n                    <OptionsLine label=\" \" options={wrappingOptions} target={proxy} propertyName=\"textWrapping\" />\r\n                </div>\r\n                <div className=\"ge-divider double\">\r\n                    <IconComponent icon={lineSpacingIcon} label=\"Line Spacing\" />\r\n                    <TextInputLineComponent lockObject={this.props.lockObject} label=\" \" target={proxy} propertyName=\"lineSpacing\" />\r\n                </div>\r\n                <hr />\r\n                <TextLineComponent label=\"OUTLINE\" value=\" \" color=\"grey\"></TextLineComponent>\r\n                <div className=\"ge-divider double\">\r\n                    <IconComponent icon={strokeWeightIcon} label=\"Outline Width\" />\r\n                    <FloatLineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\" \"\r\n                        target={proxy}\r\n                        propertyName=\"outlineWidth\"\r\n                        arrows\r\n                        min={0}\r\n                        unit={<UnitButton unit=\"PX\" locked />}\r\n                        step=\"0.01\"\r\n                    />\r\n                </div>\r\n                <div className=\"ge-divider\">\r\n                    <IconComponent icon={fillColorIcon} label=\"Outline Color\" />\r\n                    <ColorLine lockObject={this.props.lockObject} label=\" \" target={proxy} propertyName=\"outlineColor\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]}