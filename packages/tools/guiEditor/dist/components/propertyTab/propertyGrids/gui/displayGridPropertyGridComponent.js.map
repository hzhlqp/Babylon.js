{"version":3,"file":"displayGridPropertyGridComponent.js","sourceRoot":"","sources":["../../../../../src/components/propertyTab/propertyGrids/gui/displayGridPropertyGridComponent.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport type { Observable } from \"core/Misc/observable\";\r\nimport type { PropertyChangedEvent } from \"shared-ui-components/propertyChangedEvent\";\r\nimport { CommonControlPropertyGridComponent } from \"../gui/commonControlPropertyGridComponent\";\r\nimport type { LockObject } from \"shared-ui-components/tabs/propertyGrids/lockObject\";\r\nimport { TextLineComponent } from \"shared-ui-components/lines/textLineComponent\";\r\nimport type { DisplayGrid } from \"gui/2D/controls/displayGrid\";\r\nimport { FloatLineComponent } from \"shared-ui-components/lines/floatLineComponent\";\r\nimport { ColorLine } from \"shared-ui-components/lines/colorLineComponent\";\r\nimport { makeTargetsProxy } from \"shared-ui-components/lines/targetsProxy\";\r\n\r\nimport sizeIcon from \"shared-ui-components/imgs/sizeIcon.svg\";\r\nimport colorIcon from \"shared-ui-components/imgs/colorIcon.svg\";\r\nimport strokeWeightIcon from \"shared-ui-components/imgs/strokeWeightIcon.svg\";\r\nimport displayGridLine1Icon from \"shared-ui-components/imgs/displayGridLine1Icon.svg\";\r\nimport frequencyIcon from \"shared-ui-components/imgs/frequencyIcon.svg\";\r\nimport displayGridLine2Icon from \"shared-ui-components/imgs/displayGridLine2Icon.svg\";\r\nimport { IconComponent } from \"shared-ui-components/lines/iconComponent\";\r\nimport { UnitButton } from \"shared-ui-components/lines/unitButton\";\r\nimport { CheckBoxLineComponent } from \"shared-ui-components/lines/checkBoxLineComponent\";\r\nimport type { GlobalState } from \"../../../../globalState\";\r\n\r\ninterface IDisplayGridPropertyGridComponentProps {\r\n    displayGrids: DisplayGrid[];\r\n    lockObject: LockObject;\r\n    onPropertyChangedObservable?: Observable<PropertyChangedEvent>;\r\n    onFontsParsedObservable?: Observable<void>;\r\n    globalState?: GlobalState;\r\n}\r\n\r\nexport class DisplayGridPropertyGridComponent extends React.Component<IDisplayGridPropertyGridComponentProps> {\r\n    constructor(props: IDisplayGridPropertyGridComponentProps) {\r\n        super(props);\r\n    }\r\n\r\n    override render() {\r\n        const { displayGrids, lockObject, onPropertyChangedObservable } = this.props;\r\n        const proxy = makeTargetsProxy(displayGrids, onPropertyChangedObservable);\r\n\r\n        return (\r\n            <div className=\"pane\">\r\n                <CommonControlPropertyGridComponent\r\n                    lockObject={lockObject}\r\n                    controls={displayGrids}\r\n                    onPropertyChangedObservable={onPropertyChangedObservable}\r\n                    onFontsParsedObservable={this.props.onFontsParsedObservable}\r\n                    globalState={this.props.globalState}\r\n                />\r\n                <hr />\r\n                <TextLineComponent label=\"DISPLAY GRID\" value=\" \" color=\"grey\"></TextLineComponent>\r\n                <div className=\"ge-divider double\">\r\n                    <IconComponent icon={sizeIcon} label=\"Cell Size\" />\r\n                    <FloatLineComponent\r\n                        min={1}\r\n                        isInteger={true}\r\n                        lockObject={lockObject}\r\n                        label=\"W\"\r\n                        target={proxy}\r\n                        propertyName=\"cellWidth\"\r\n                        onPropertyChangedObservable={onPropertyChangedObservable}\r\n                        unit={<UnitButton locked unit=\"PX\" />}\r\n                        arrows\r\n                    />\r\n                    <FloatLineComponent\r\n                        min={1}\r\n                        isInteger={true}\r\n                        lockObject={lockObject}\r\n                        label=\"H\"\r\n                        target={proxy}\r\n                        propertyName=\"cellHeight\"\r\n                        onPropertyChangedObservable={onPropertyChangedObservable}\r\n                        unit={<UnitButton locked unit=\"PX\" />}\r\n                        arrows\r\n                    />\r\n                </div>\r\n                <div className=\"ge-divider\">\r\n                    <IconComponent icon={displayGridLine1Icon} label=\"Show Minor Lines\" />\r\n                    <CheckBoxLineComponent label=\"SHOW MINOR LINES\" onValueChanged={() => this.forceUpdate()} target={proxy} propertyName=\"_displayMinorLines\" />\r\n                </div>\r\n                {proxy._displayMinorLines && (\r\n                    <>\r\n                        <div className=\"ge-divider double\">\r\n                            <IconComponent icon={strokeWeightIcon} label=\"Minor Line Tickness\" />\r\n                            <FloatLineComponent\r\n                                min={1}\r\n                                isInteger={true}\r\n                                lockObject={lockObject}\r\n                                label=\"\"\r\n                                target={proxy}\r\n                                propertyName=\"minorLineTickness\"\r\n                                onPropertyChangedObservable={onPropertyChangedObservable}\r\n                                unit={<UnitButton locked unit=\"PX\" />}\r\n                                arrows\r\n                            />\r\n                        </div>\r\n                        <div className=\"ge-divider\">\r\n                            <IconComponent icon={colorIcon} label=\"Minor Line Color\" />\r\n                            <ColorLine lockObject={lockObject} label=\"\" target={proxy} propertyName=\"minorLineColor\" onPropertyChangedObservable={onPropertyChangedObservable} />\r\n                        </div>\r\n                    </>\r\n                )}\r\n                <div className=\"ge-divider\">\r\n                    <IconComponent icon={displayGridLine2Icon} label=\"Show Major Lines\" />\r\n                    <CheckBoxLineComponent label=\"SHOW MAJOR LINES\" onValueChanged={() => this.forceUpdate()} target={proxy} propertyName=\"_displayMajorLines\" />\r\n                </div>\r\n                {proxy._displayMajorLines && (\r\n                    <>\r\n                        <div className=\"ge-divider double\">\r\n                            <IconComponent icon={strokeWeightIcon} label=\"Major Line Tickness\" />\r\n                            <FloatLineComponent\r\n                                min={1}\r\n                                isInteger={true}\r\n                                lockObject={lockObject}\r\n                                label=\"\"\r\n                                target={proxy}\r\n                                propertyName=\"majorLineTickness\"\r\n                                onPropertyChangedObservable={onPropertyChangedObservable}\r\n                                unit={<UnitButton locked unit=\"PX\" />}\r\n                                arrows\r\n                            />\r\n                        </div>\r\n                        <div className=\"ge-divider\">\r\n                            <IconComponent icon={colorIcon} label=\"Major Line Color\" />\r\n                            <ColorLine lockObject={lockObject} label=\"\" target={proxy} propertyName=\"majorLineColor\" onPropertyChangedObservable={onPropertyChangedObservable} />\r\n                        </div>\r\n                        <div className=\"ge-divider double\">\r\n                            <IconComponent icon={frequencyIcon} label=\"Major Line Frequency\" />\r\n                            <FloatLineComponent\r\n                                min={1}\r\n                                isInteger={true}\r\n                                lockObject={lockObject}\r\n                                label=\"\"\r\n                                target={proxy}\r\n                                propertyName=\"majorLineFrequency\"\r\n                                onPropertyChangedObservable={onPropertyChangedObservable}\r\n                                arrows\r\n                            />\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]}