{"version":3,"file":"commandBarComponent.js","sourceRoot":"","sources":["../../src/components/commandBarComponent.tsx"],"names":[],"mappings":"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","sourcesContent":["import { DataStorage } from \"core/Misc/dataStorage\";\r\nimport * as React from \"react\";\r\nimport type { GlobalState } from \"../globalState\";\r\nimport { GUIEditorTool } from \"../globalState\";\r\nimport { FloatLineComponent } from \"shared-ui-components/lines/floatLineComponent\";\r\nimport { CheckBoxLineComponent } from \"shared-ui-components/lines/checkBoxLineComponent\";\r\nimport { OptionsLine } from \"shared-ui-components/lines/optionsLineComponent\";\r\nimport { CommandButtonComponent } from \"./commandButtonComponent\";\r\nimport { CommandDropdownComponent } from \"./commandDropdownComponent\";\r\nimport { ColorLine } from \"shared-ui-components/lines/colorLineComponent\";\r\nimport { LockObject } from \"shared-ui-components/tabs/propertyGrids/lockObject\";\r\n\r\nimport hamburgerIcon from \"../imgs/hamburgerIcon.svg\";\r\nimport pointerIcon from \"../imgs/pointerIcon.svg\";\r\nimport handIcon from \"../imgs/handIcon.svg\";\r\nimport zoomIcon from \"../imgs/zoomIcon.svg\";\r\nimport guidesIcon from \"../imgs/guidesIcon.svg\";\r\nimport logoIcon from \"../imgs/babylonLogo.svg\";\r\nimport canvasFitIcon from \"../imgs/canvasFitIcon.svg\";\r\nimport copyIcon from \"../imgs/buttonbar_copyIcon.svg\";\r\nimport pasteIcon from \"../imgs/buttonbar_pasteIcon.svg\";\r\nimport deleteIcon from \"../imgs/buttonBar_deleteIcon.svg\";\r\nimport copyIconDisabled from \"../imgs/buttonbar_copyIcon_disabled.svg\";\r\nimport pasteIconDisabled from \"../imgs/buttonbar_pasteIcon_disabled.svg\";\r\nimport deleteIconDisabled from \"../imgs/buttonBar_deleteIcon_disabled.svg\";\r\n\r\nimport \"../scss/commandBar.scss\";\r\n\r\ninterface ICommandBarComponentProps {\r\n    globalState: GlobalState;\r\n}\r\n\r\nconst _sizeValues = [\r\n    { width: 1920, height: 1080 },\r\n    { width: 1366, height: 768 },\r\n    { width: 1280, height: 800 },\r\n    { width: 3840, height: 2160 },\r\n    { width: 750, height: 1334 },\r\n    { width: 1125, height: 2436 },\r\n    { width: 1170, height: 2532 },\r\n    { width: 1284, height: 2778 },\r\n    { width: 1080, height: 2220 },\r\n    { width: 1080, height: 2340 },\r\n    { width: 1024, height: 1024 },\r\n    { width: 2048, height: 2048 },\r\n];\r\n\r\nconst _sizeOptions = [\r\n    { label: \"Web (1920)\", value: 0 },\r\n    { label: \"Web (1366)\", value: 1 },\r\n    { label: \"Web (1280)\", value: 2 },\r\n    { label: \"Web (3840)\", value: 3 },\r\n    { label: \"iPhone 8 (750)\", value: 4 },\r\n    { label: \"iPhone X, 11 (1125)\", value: 5 },\r\n    { label: \"iPhone 12 (1170)\", value: 6 },\r\n    { label: \"iPhone Pro Max (1284)\", value: 7 },\r\n    { label: \"Google Pixel 4 (1080)\", value: 8 },\r\n    { label: \"Google Pixel 5 (1080)\", value: 9 },\r\n    { label: \"Square (1024)\", value: 10 },\r\n    { label: \"Square (2048)\", value: 11 },\r\n];\r\n\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nconst MAX_TEXTURE_SIZE = 16384; //2^14\r\n\r\nexport class CommandBarComponent extends React.Component<ICommandBarComponentProps> {\r\n    private _sizeOption: number = 0;\r\n    private _stopUpdating: boolean = false;\r\n    private _lockObject: LockObject;\r\n\r\n    public constructor(props: ICommandBarComponentProps) {\r\n        super(props);\r\n\r\n        this._lockObject = new LockObject();\r\n\r\n        props.globalState.onToolChangeObservable.add(() => {\r\n            this.forceUpdate();\r\n        });\r\n\r\n        props.globalState.onOutlineChangedObservable.add(() => {\r\n            this.forceUpdate();\r\n        });\r\n\r\n        props.globalState.onResizeObservable.add(() => {\r\n            this.forceUpdate();\r\n        });\r\n        props.globalState.onSelectionChangedObservable.add(() => {\r\n            this.forceUpdate();\r\n        });\r\n        props.globalState.onWindowResizeObservable.add(() => {\r\n            this.forceUpdate();\r\n        });\r\n    }\r\n\r\n    public override render() {\r\n        const isPasteDisabled = this.props.globalState.workbench ? this.props.globalState.workbench.pasteDisabled : true;\r\n        const size = this.props.globalState.workbench ? { ...this.props.globalState.workbench.guiSize } : { width: 0, height: 0 };\r\n        const copyyIcon = this.props.globalState.selectedControls.length === 0 ? copyIconDisabled : copyIcon;\r\n        const deleteeIcon = this.props.globalState.selectedControls.length === 0 ? deleteIconDisabled : deleteIcon;\r\n        const pasteeIcon = isPasteDisabled ? pasteIconDisabled : pasteIcon;\r\n\r\n        const responsiveUI = this.props.globalState.fromPG ? DataStorage.ReadBoolean(\"responsiveUI\", true) : DataStorage.ReadBoolean(\"Responsive\", true);\r\n\r\n        this._sizeOption = _sizeValues.findIndex((value) => value.width == size.width && value.height == size.height);\r\n        if (this._sizeOption < 0) {\r\n            this.props.globalState.onResponsiveChangeObservable.notifyObservers(false);\r\n            DataStorage.WriteBoolean(\"Responsive\", false);\r\n        }\r\n\r\n        return (\r\n            <div className={\"ge-commands\"}>\r\n                <div className=\"commands-left\">\r\n                    <div className=\"divider\">\r\n                        <img src={logoIcon} color=\"white\" className={\"active\"} draggable={false} />\r\n                        <CommandDropdownComponent\r\n                            globalState={this.props.globalState}\r\n                            toRight={true}\r\n                            icon={hamburgerIcon}\r\n                            tooltip=\"Options\"\r\n                            items={[\r\n                                {\r\n                                    label: \"Save\",\r\n                                    onClick: () => {\r\n                                        this.props.globalState.onSaveObservable.notifyObservers();\r\n                                    },\r\n                                },\r\n                                {\r\n                                    label: \"Load\",\r\n                                    fileButton: true,\r\n                                },\r\n                                {\r\n                                    label: \"Save to snippet\",\r\n                                    onClick: () => {\r\n                                        this.props.globalState.onSnippetSaveObservable.notifyObservers();\r\n                                    },\r\n                                },\r\n                                {\r\n                                    label: \"Load from snippet\",\r\n                                    onClick: () => {\r\n                                        this.props.globalState.onSnippetLoadObservable.notifyObservers();\r\n                                    },\r\n                                },\r\n                                {\r\n                                    label: \"Save selected control\",\r\n                                    onClick: () => {\r\n                                        this.props.globalState.onSaveSelectedControl.notifyObservers();\r\n                                    },\r\n                                },\r\n                                {\r\n                                    label: \"Load control\",\r\n                                    fileButton: true,\r\n                                    loadControlButton: true,\r\n                                },\r\n                                {\r\n                                    label: \"Help\",\r\n                                    onClick: () => {\r\n                                        window.open(\"https://doc.babylonjs.com/toolsAndResources/tools/guiEditor\", \"_blank\");\r\n                                    },\r\n                                },\r\n                                {\r\n                                    label: \"Give feedback\",\r\n                                    onClick: () => {\r\n                                        window.open(\"https://forum.babylonjs.com/t/introducing-the-gui-editor-beta/28943\", \"_blank\");\r\n                                    },\r\n                                },\r\n                            ]}\r\n                        />\r\n                        <CommandButtonComponent\r\n                            tooltip=\"Select\"\r\n                            icon={pointerIcon}\r\n                            shortcut=\"S\"\r\n                            isActive={this.props.globalState.tool === GUIEditorTool.SELECT}\r\n                            onClick={() => {\r\n                                this.props.globalState.tool = GUIEditorTool.SELECT;\r\n                            }}\r\n                        />\r\n                        <CommandButtonComponent\r\n                            tooltip=\"Pan\"\r\n                            icon={handIcon}\r\n                            shortcut=\"P\"\r\n                            isActive={this.props.globalState.tool === GUIEditorTool.PAN}\r\n                            onClick={() => {\r\n                                this.props.globalState.tool = GUIEditorTool.PAN;\r\n                            }}\r\n                        />\r\n                        <CommandButtonComponent\r\n                            tooltip=\"Zoom\"\r\n                            shortcut=\"Z\"\r\n                            icon={zoomIcon}\r\n                            isActive={this.props.globalState.tool === GUIEditorTool.ZOOM}\r\n                            onClick={() => {\r\n                                this.props.globalState.tool = GUIEditorTool.ZOOM;\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"divider\">\r\n                        <CommandButtonComponent\r\n                            tooltip=\"Copy Selected\"\r\n                            shortcut=\"Ctrl + C\"\r\n                            icon={copyyIcon}\r\n                            isActive={false}\r\n                            copyDeleteDisabled={this.props.globalState.selectedControls.length === 0} //disabled when nothing is selected\r\n                            onClick={() => {\r\n                                this.props.globalState.onCopyObservable.notifyObservers((content) => this.props.globalState.hostWindow.navigator.clipboard.writeText(content));\r\n                                this.forceUpdate();\r\n                            }}\r\n                        />\r\n                        <CommandButtonComponent\r\n                            tooltip=\"Paste\"\r\n                            shortcut=\"Ctrl + V\"\r\n                            icon={pasteeIcon}\r\n                            isActive={false}\r\n                            pasteDisabled={isPasteDisabled}\r\n                            onClick={async () => {\r\n                                this.props.globalState.onPasteObservable.notifyObservers(await this.props.globalState.hostWindow.navigator.clipboard.readText());\r\n                            }}\r\n                        />\r\n                        <CommandButtonComponent\r\n                            tooltip=\"Delete\"\r\n                            shortcut=\"Delete\"\r\n                            icon={deleteeIcon}\r\n                            isActive={false}\r\n                            copyDeleteDisabled={this.props.globalState.selectedControls.length === 0} //disabled when nothing is selected\r\n                            onClick={() => {\r\n                                this.props.globalState.selectedControls.forEach((guiNode) => {\r\n                                    if (guiNode != this.props.globalState.guiTexture.getChildren()[0]) {\r\n                                        this.props.globalState.guiTexture.removeControl(guiNode);\r\n                                        this.props.globalState.liveGuiTexture?.removeControl(guiNode);\r\n                                        guiNode.dispose();\r\n                                    }\r\n                                });\r\n                                this.props.globalState.setSelection([]);\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"divider\">\r\n                        <CommandButtonComponent\r\n                            tooltip=\"Fit to Window\"\r\n                            shortcut=\"F\"\r\n                            icon={canvasFitIcon}\r\n                            isActive={false}\r\n                            onClick={() => {\r\n                                this.props.globalState.onFitControlsToWindowObservable.notifyObservers();\r\n                            }}\r\n                        />\r\n                        <CommandButtonComponent\r\n                            tooltip=\"Toggle Guides\"\r\n                            shortcut=\"G\"\r\n                            icon={guidesIcon}\r\n                            isActive={this.props.globalState.outlines}\r\n                            onClick={() => (this.props.globalState.outlines = !this.props.globalState.outlines)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"divider padded\">\r\n                        <ColorLine lockObject={this._lockObject} label={\"Artboard:\"} target={this.props.globalState} propertyName=\"backgroundColor\" disableAlpha={true} />\r\n                    </div>\r\n                    <div className=\"divider padded\">\r\n                        <CheckBoxLineComponent\r\n                            label=\"Responsive:\"\r\n                            iconLabel=\"Responsive GUIs will resize the UI layout and reflow controls to accommodate different device screen sizes\"\r\n                            isSelected={() => DataStorage.ReadBoolean(\"Responsive\", true)}\r\n                            onSelect={(value: boolean) => {\r\n                                this.props.globalState.onResponsiveChangeObservable.notifyObservers(value);\r\n                                DataStorage.WriteBoolean(\"Responsive\", value);\r\n                                DataStorage.WriteBoolean(\"responsiveUI\", value);\r\n                                this._sizeOption = _sizeOptions.length;\r\n                                if (value) {\r\n                                    this._sizeOption = 0;\r\n                                    this.props.globalState.workbench.guiSize = _sizeValues[this._sizeOption];\r\n                                    DataStorage.WriteNumber(\"width\", this.props.globalState.workbench.guiSize.width);\r\n                                    DataStorage.WriteNumber(\"height\", this.props.globalState.workbench.guiSize.height);\r\n                                }\r\n                                this.forceUpdate();\r\n                            }}\r\n                            large\r\n                        />\r\n                        {responsiveUI && (\r\n                            <OptionsLine\r\n                                label=\"\"\r\n                                iconLabel=\"Size\"\r\n                                options={_sizeOptions}\r\n                                target={this}\r\n                                propertyName={\"_sizeOption\"}\r\n                                noDirectUpdate={true}\r\n                                onSelect={(value: any) => {\r\n                                    this._sizeOption = value;\r\n                                    if (this._sizeOption !== _sizeOptions.length) {\r\n                                        const newSize = _sizeValues[this._sizeOption];\r\n                                        this.props.globalState.workbench.guiSize = newSize;\r\n                                        DataStorage.WriteNumber(\"width\", this.props.globalState.workbench.guiSize.width);\r\n                                        DataStorage.WriteNumber(\"height\", this.props.globalState.workbench.guiSize.height);\r\n                                    }\r\n                                    this.forceUpdate();\r\n                                }}\r\n                            />\r\n                        )}\r\n                        {!responsiveUI && (\r\n                            <>\r\n                                <FloatLineComponent\r\n                                    lockObject={this._lockObject}\r\n                                    label=\"W\"\r\n                                    target={size}\r\n                                    propertyName=\"width\"\r\n                                    min={1}\r\n                                    max={MAX_TEXTURE_SIZE}\r\n                                    onChange={(newValue) => {\r\n                                        if (!this._stopUpdating) {\r\n                                            this.props.globalState.workbench.guiSize = { width: newValue, height: size.height };\r\n                                            DataStorage.WriteNumber(\"width\", this.props.globalState.workbench.guiSize.width);\r\n                                        }\r\n                                    }}\r\n                                    onDragStart={() => {\r\n                                        this._stopUpdating = true;\r\n                                    }}\r\n                                    onDragStop={(newValue) => {\r\n                                        this._stopUpdating = false;\r\n                                        this.props.globalState.workbench.guiSize = { width: newValue, height: size.height };\r\n                                        DataStorage.WriteNumber(\"width\", this.props.globalState.workbench.guiSize.width);\r\n                                    }}\r\n                                    arrows={true}\r\n                                    isInteger={true}\r\n                                />\r\n                                <FloatLineComponent\r\n                                    lockObject={this._lockObject}\r\n                                    label=\"H\"\r\n                                    target={size}\r\n                                    propertyName=\"height\"\r\n                                    min={1}\r\n                                    max={MAX_TEXTURE_SIZE}\r\n                                    onChange={(newValue) => {\r\n                                        if (!this._stopUpdating) {\r\n                                            this.props.globalState.workbench.guiSize = { width: size.width, height: newValue };\r\n                                            DataStorage.WriteNumber(\"height\", this.props.globalState.workbench.guiSize.width);\r\n                                        }\r\n                                    }}\r\n                                    onDragStart={() => {\r\n                                        this._stopUpdating = true;\r\n                                    }}\r\n                                    onDragStop={(newValue) => {\r\n                                        this._stopUpdating = false;\r\n                                        this.props.globalState.workbench.guiSize = { width: size.width, height: newValue };\r\n                                        DataStorage.WriteNumber(\"height\", this.props.globalState.workbench.guiSize.width);\r\n                                    }}\r\n                                    arrows={true}\r\n                                    isInteger={true}\r\n                                />\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                <div className=\"commands-right\"></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]}