{"version":3,"file":"workbenchEditor.js","sourceRoot":"","sources":["../src/workbenchEditor.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,aAAa,EAAE,MAAM,eAAe,CAAC;AAC9C,OAAO,EAAE,oBAAoB,EAAE,MAAM,+CAA+C,CAAC;AACrF,OAAO,EAAE,MAAM,EAAE,MAAM,UAAU,CAAC;AAClC,OAAO,EAAE,YAAY,EAAE,MAAM,+BAA+B,CAAC;AAC7D,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AACpD,OAAO,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAC;AAC9C,OAAO,EAAE,kBAAkB,EAAE,MAAM,qBAAqB,CAAC;AACzD,OAAO,EAAE,aAAa,EAAE,MAAM,+CAA+C,CAAC;AAC9E,OAAO,EAAE,sBAAsB,EAAE,MAAM,mDAAmD,CAAC;AAC3F,OAAO,EAAE,mBAAmB,EAAE,MAAM,kCAAkC,CAAC;AACvE,OAAO,EAAE,YAAY,EAAE,MAAM,wBAAwB,CAAC;AAEtD,OAAO,EAAE,iBAAiB,EAAE,MAAM,oBAAoB,CAAC;AAEvD,OAAO,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAC;AAE9C,OAAO,aAAa,CAAC;AACrB,OAAO,oBAAoB,CAAC;AAE5B,OAAO,iBAAiB,MAAM,8BAA8B,CAAC;AAC7D,OAAO,mBAAmB,MAAM,gCAAgC,CAAC;AAEjE,OAAO,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;AAY1C,MAAM,OAAO,eAAgB,SAAQ,KAAK,CAAC,SAA+C;IAW7E,iBAAiB;QACtB,IAAI,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE;YAC7C,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,YAAY,IAAI,QAAQ,CAAC,CAAC,aAAa,CAAC,UAAU,CAAiB,CAAC,KAAK,CAAC,UAAU,GAAG,SAAS,CAAC;SAC7H;QACD,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;QAC3D,QAAQ,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,uBAAuB,CAAC,CAAC;IACrE,CAAC;IAEQ,oBAAoB;QACzB,QAAQ,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;QAC9D,QAAQ,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,uBAAuB,CAAC,CAAC;QACpE,IAAI,IAAI,CAAC,uBAAuB,EAAE;YAC9B,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,sCAAsC,CAAC,MAAM,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;SACtG;IACL,CAAC;IAuCD,YAAY,KAAwB;QAChC,KAAK,CAAC,KAAK,CAAC,CAAC;QA9DT,eAAU,GAAG,WAAW,CAAC,UAAU,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;QACtD,gBAAW,GAAG,WAAW,CAAC,UAAU,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;QAuBhE,oBAAe,GAAG,CAAC,GAAkB,EAAE,EAAE;YACrC,mFAAmF;YACnF,iCAAiC;YACjC,IAAI,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,MAAM,YAAY,gBAAgB,IAAI,GAAG,CAAC,MAAM,CAAC,IAAI,KAAK,MAAM,EAAE;gBACpF,OAAO;aACV;YACD,QAAQ,GAAG,CAAC,GAAG,EAAE;gBACb,KAAK,GAAG,CAAC,CAAC,QAAQ;gBAClB,KAAK,GAAG;oBACJ,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,GAAG,aAAa,CAAC,MAAM,CAAC;oBACnD,MAAM;gBACV,KAAK,GAAG,CAAC,CAAC,KAAK;gBACf,KAAK,GAAG,CAAC;gBACT,KAAK,GAAG;oBACJ,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,GAAG,aAAa,CAAC,GAAG,CAAC;oBAChD,MAAM;gBACV,KAAK,GAAG,CAAC,CAAC,MAAM;gBAChB,KAAK,GAAG;oBACJ,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,GAAG,aAAa,CAAC,IAAI,CAAC;oBACjD,MAAM;gBACV,KAAK,GAAG,CAAC,CAAC,UAAU;gBACpB,KAAK,GAAG;oBACJ,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC;oBACnE,MAAM;gBACV,KAAK,GAAG,CAAC,CAAC,eAAe;gBACzB,KAAK,GAAG;oBACJ,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,+BAA+B,CAAC,eAAe,EAAE,CAAC;oBACzE,MAAM;aACb;QACL,CAAC,CAAC;QAEF,4BAAuB,GAAG,CAAC,GAAkB,EAAE,EAAE;YAC7C,IAAI,GAAG,CAAC,GAAG,KAAK,GAAG,EAAE;gBACjB,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,mBAAmB,EAAE,CAAC;aAChD;QACL,CAAC,CAAC;QAqEF,gBAAW,GAAG,GAAG,EAAE;YACf,IAAI,CAAC,QAAQ,CAAC;gBACV,gBAAgB,EAAE,IAAI;aACzB,CAAC,CAAC;YACH,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,gBAAgB,CAAC,cAAc,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAChG,CAAC,CAAC;QAEF,uBAAkB,GAAG,GAAG,EAAE;YACtB,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;QAC9B,CAAC,CAAC;QAEF,sBAAiB,GAAG,CAAC,KAAa,EAAE,kBAA0B,EAAE,KAAK,GAAG,GAAG,EAAE,MAAM,GAAG,GAAG,EAAiB,EAAE;YACxG,MAAM,yBAAyB,GAAG;gBAC9B,KAAK,EAAE,KAAK;gBACZ,MAAM,EAAE,MAAM;gBACd,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,WAAW,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,OAAO;gBACjF,IAAI,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,UAAU,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,OAAO;aACrF,CAAC;YAEF,MAAM,qBAAqB,GAAG,MAAM,CAAC,IAAI,CAAC,yBAAyB,CAAC;iBAC/D,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,GAAG,GAAG,GAAI,yBAAiC,CAAC,GAAG,CAAC,CAAC;iBACjE,IAAI,CAAC,GAAG,CAAC,CAAC;YAEf,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,EAAE,qBAAqB,CAAC,CAAC;YAC7F,IAAI,CAAC,WAAW,EAAE;gBACd,OAAO,IAAI,CAAC;aACf;YAED,MAAM,cAAc,GAAG,WAAW,CAAC,QAAQ,CAAC;YAE5C,cAAc,CAAC,KAAK,GAAG,KAAK,CAAC;YAC7B,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC;YACzC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;YAC1C,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC;YACvC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC;YAExC,MAAM,aAAa,GAAG,cAAc,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC1D,aAAa,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC;YACnC,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;YACpC,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC;YACjC,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC;YAClC,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;YACrC,aAAa,CAAC,KAAK,CAAC,gBAAgB,GAAG,WAAW,CAAC;YACnD,aAAa,CAAC,EAAE,GAAG,2BAA2B,CAAC;YAC/C,aAAa,CAAC,SAAS,GAAG,aAAa,CAAC;YAExC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;YAErD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;YAE3E,IAAY,CAAC,kBAAkB,CAAC,GAAG,WAAW,CAAC;YAEhD,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;YAEhC,OAAO,WAAW,CAAC;QACvB,CAAC,CAAC;QAEF,eAAU,GAAG,CAAC,SAAuB,EAAE,SAAuB,EAAE,EAAE;YAC9D,MAAM,cAAc,GAAG,EAAE,CAAC;YAC1B,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,SAAS,CAAC,WAAW,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;gBAC/D,MAAM,UAAU,GAAQ,SAAS,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;gBACrD,IAAI;oBACA,IAAI,UAAU,CAAC,IAAI,EAAE;wBACjB,6CAA6C;wBAC7C,MAAM,SAAS,GAAG,SAAS,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;wBAElD,SAAS,CAAC,GAAG,GAAG,YAAY,CAAC;wBAC7B,SAAS,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;wBACjC,SAAS,CAAC,IAAK,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;wBACvC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;qBAClC;yBAAM,IAAI,UAAU,CAAC,QAAQ,EAAE;wBAC5B,uBAAuB;wBACvB,MAAM,UAAU,GAAG,SAAS,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;wBAEpD,KAAK,MAAM,OAAO,IAAI,UAAU,CAAC,QAAQ,EAAE;4BACvC,UAAU,CAAC,WAAW,CAAC,SAAS,CAAC,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;yBACrE;wBAED,SAAS,CAAC,IAAK,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;wBACxC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;qBACnC;iBACJ;gBAAC,OAAO,CAAC,EAAE;oBACR,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;iBACjB;aACJ;QACL,CAAC,CAAC;QAtJE,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC;QAClC,IAAI,CAAC,KAAK,GAAG;YACT,gBAAgB,EAAE,KAAK;YACvB,aAAa,EAAE,IAAI;YACnB,OAAO,EAAE,EAAE;SACd,CAAC;QAEF,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,iCAAiC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;QACvF,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,gBAAgB,CAAC,GAAG,CAAC,GAAG,EAAE;YAC7C,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,EAAE;gBAC3B,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;aAC5E;YACD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAC7B,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,sCAAsC,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE;YACzG,IAAI,CAAC,QAAQ,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,cAAc;QACV,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,YAAY,CAAC,aAAa,CAAC,cAAc,CAAC,EAAE,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IAClG,CAAC;IAED,cAAc;QACV,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,YAAY,CAAC,aAAa,CAAC,cAAc,CAAC,EAAE,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAC/F,CAAC;IAED,aAAa,CAAC,GAAuC;QACjD,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC;YAAE,OAAO;QAC7B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,GAAG,CAAC,aAAa,CAAC,iBAAiB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IACvD,CAAC;IAED,WAAW,CAAC,GAAuC;QAC/C,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC;YAAE,OAAO;QAC7B,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,GAAG,CAAC,aAAa,CAAC,qBAAqB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IAC3D,CAAC;IAED,aAAa,CAAC,GAAuC,EAAE,OAAO,GAAG,IAAI;QACjE,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;YACvB,OAAO;SACV;QAED,MAAM,WAAW,GAAG,GAAG,CAAC,aAAa,CAAC,aAAc,CAAC,cAAc,CAAC,2BAA2B,CAAmB,CAAC;QAEnH,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,UAAU,CAAC;QAE9D,IAAI,OAAO,EAAE;YACT,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;YACxH,WAAW,CAAC,WAAW,CAAC,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;SACzD;aAAM;YACH,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAQ,CAAC,WAAW,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;YAC7J,WAAW,CAAC,WAAW,CAAC,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;SAC3D;QAED,WAAW,CAAC,KAAK,CAAC,mBAAmB,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAEjE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,wBAAwB,CAAC,eAAe,EAAE,CAAC;IACtE,CAAC;IAED,iBAAiB;QACb,OAAO,GAAG,IAAI,CAAC,UAAU,UAAU,IAAI,CAAC,WAAW,IAAI,CAAC;IAC5D,CAAC;IAwFD,mBAAmB;QACf,IAAI,CAAC,QAAQ,CAAC,EAAE,aAAa,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC,CAAC;QAC5D,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE;YAC3B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;SAC1C;aAAM;YACH,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;SAC1C;IACL,CAAC;IAEQ,MAAM;QACX,MAAM,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,mBAAmB,CAAC;QACtF,OAAO,CACH,MAAC,MAAM,IAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,aACvC,cAAK,EAAE,EAAC,WAAW,YACf,cAAK,SAAS,EAAC,aAAa,YACxB,KAAC,mBAAmB,IAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,GAAI,GAC1D,GACJ,EACN,eACI,EAAE,EAAC,2BAA2B,EAC9B,KAAK,EAAE;wBACH,mBAAmB,EAAE,IAAI,CAAC,iBAAiB,EAAE;qBAChD,EACD,WAAW,EAAE,CAAC,GAAG,EAAE,EAAE;wBACjB,IAAK,GAAG,CAAC,MAAsB,CAAC,QAAQ,KAAK,OAAO,EAAE;4BAClD,OAAO;yBACV;oBACL,CAAC,EACD,GAAG,EAAE,IAAI,CAAC,QAAQ,EAClB,WAAW,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,aAG3C,eAAK,SAAS,EAAE,eAAe,aAC3B,KAAC,sBAAsB,IAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,QAAQ,EAAE,IAAI,GAA2B,EACrG,IAAI,CAAC,aAAa,EAAE,EACrB,cAAK,EAAE,EAAC,UAAU,EAAC,aAAa,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,EAAE,aAAa,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,GAAQ,IACzH,EACN,KAAC,sBAAsB,IAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,QAAQ,EAAE,IAAI,GAA2B,EACrG,IAAI,CAAC,aAAa,EAAE,EAErB,eACI,SAAS,EAAC,mBAAmB,EAC7B,MAAM,EAAE,CAAC,KAAK,EAAE,EAAE;gCACd,KAAK,CAAC,cAAc,EAAE,CAAC;gCACvB,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,gBAAgB,CAAC,eAAe,EAAE,CAAC;gCAC1D,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,2BAA2B,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;4BAC7E,CAAC,EACD,UAAU,EAAE,CAAC,KAAK,EAAE,EAAE;gCAClB,KAAK,CAAC,cAAc,EAAE,CAAC;4BAC3B,CAAC,EACD,KAAK,EAAE;gCACH,eAAe,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,eAAe,CAAC,WAAW,EAAE;6BACxE,aAED,KAAC,iBAAiB,IAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,GAAI,EAC1D,KAAC,kBAAkB,IAAC,GAAG,EAAE,iBAAiB,EAAE,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,GAAI,EACnF,KAAC,YAAY,IAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,GAAI,IACnD,EAEN,eAAK,SAAS,EAAC,aAAa,aACxB,cAAK,EAAE,EAAC,WAAW,EAAC,aAAa,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,EAAE,aAAa,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,KAAK,CAAC,GAAQ,EACnI,KAAC,oBAAoB,IAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,GAAI,IAC3D,EAEN,KAAC,YAAY,IAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,GAAI,IACnD,EACN,KAAC,aAAa,IAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,GAAI,EAC7D,cAAK,SAAS,EAAC,SAAS,gDAAsC,EAC9D,cAAK,SAAS,EAAC,oBAAoB,yCAA+B,IAC7D,CACZ,CAAC;IACN,CAAC;IAED,QAAQ,CAAC,KAAa;QAClB,MAAM,UAAU,GAAG,YAAY,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC;QAC/D,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;QAC5E,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;QAClD,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,qBAAqB,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QACnE,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,OAAO,UAAU,CAAC;IACtB,CAAC;IACD,eAAe;QACX,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,cAAK,GAAG,EAAE,iBAAiB,EAAE,SAAS,EAAC,MAAM,GAAG,CAAC,CAAC,CAAC,cAAK,GAAG,EAAE,mBAAmB,EAAE,SAAS,EAAC,MAAM,GAAG,CAAC;QAC9I,OAAO,CACH,cAAK,SAAS,EAAC,WAAW,YACtB,cAAK,SAAS,EAAC,OAAO,EAAC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,mBAAmB,EAAE,YAC3D,IAAI,GACH,GACJ,CACT,CAAC;IACN,CAAC;IACD,mBAAmB,CAAC,EAAyC;QACzD,OAAO,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE;YACnB,OAAO,CACH,cACI,SAAS,EAAE,eAAe,EAE1B,WAAW,EAAE,GAAG,EAAE;oBACd,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC;gBACvC,CAAC,EACD,OAAO,EAAE,GAAG,EAAE;oBACV,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBAClC,CAAC,EACD,KAAK,EAAE,IAAI,CAAC,SAAS,YAEpB,IAAI,CAAC,IAAI,IAAI,CACV,cAAK,SAAS,EAAC,cAAc,EAAC,SAAS,EAAE,IAAI,YACzC,cAAK,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,SAAS,EAAE,KAAK,EAAC,MAAM,EAAC,MAAM,EAAE,MAAM,GAAI,GACvE,CACT,IAbI,IAAI,CAAC,SAAS,CAcjB,CACT,CAAC;QACN,CAAC,CAAC,CAAC;IACP,CAAC;IACD,aAAa;QACT,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE;YAC1B,OAAO,CACH,4BACI,eAAK,SAAS,EAAC,aAAa,aACvB,IAAI,CAAC,eAAe,EAAE,EACtB,cAAK,SAAS,EAAE,sBAAsB,YAAG,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,GAAO,IACrF,GACP,CACN,CAAC;SACL;aAAM;YACH,OAAO,CACH,4BACI,eAAK,SAAS,EAAC,sBAAsB,aAChC,IAAI,CAAC,eAAe,EAAE,EAEnB,eAAK,SAAS,EAAE,sBAAsB,aACjC,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,EACnF,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAC/E,IAER,GACP,CACN,CAAC;SACL;IACL,CAAC;CACJ","sourcesContent":["import * as React from \"react\";\r\nimport type { GlobalState } from \"./globalState\";\r\nimport { GUIEditorTool } from \"./globalState\";\r\nimport { PropertyTabComponent } from \"./components/propertyTab/propertyTabComponent\";\r\nimport { Portal } from \"./portal\";\r\nimport { LogComponent } from \"./components/log/logComponent\";\r\nimport { DataStorage } from \"core/Misc/dataStorage\";\r\nimport { GUINodeTools } from \"./guiNodeTools\";\r\nimport { WorkbenchComponent } from \"./diagram/workbench\";\r\nimport { MessageDialog } from \"shared-ui-components/components/MessageDialog\";\r\nimport { SceneExplorerComponent } from \"./components/sceneExplorer/sceneExplorerComponent\";\r\nimport { CommandBarComponent } from \"./components/commandBarComponent\";\r\nimport { GizmoWrapper } from \"./diagram/gizmoWrapper\";\r\nimport type { Nullable } from \"core/types\";\r\nimport { ArtBoardComponent } from \"./diagram/artBoard\";\r\nimport type { Control } from \"gui/2D/controls/control\";\r\nimport { ControlTypes } from \"./controlTypes\";\r\n\r\nimport \"./main.scss\";\r\nimport \"./scss/header.scss\";\r\n\r\nimport toolbarExpandIcon from \"./imgs/toolbarExpandIcon.svg\";\r\nimport toolbarCollapseIcon from \"./imgs/toolbarCollapseIcon.svg\";\r\nimport type { Observer } from \"core/Misc/observable\";\r\nimport { Logger } from \"core/Misc/logger\";\r\n\r\ninterface IGraphEditorProps {\r\n    globalState: GlobalState;\r\n}\r\n\r\ninterface IGraphEditorState {\r\n    showPreviewPopUp: boolean;\r\n    toolbarExpand: boolean;\r\n    message: string;\r\n}\r\n\r\nexport class WorkbenchEditor extends React.Component<IGraphEditorProps, IGraphEditorState> {\r\n    private _moveInProgress: boolean;\r\n\r\n    private _leftWidth = DataStorage.ReadNumber(\"LeftWidth\", 200);\r\n    private _rightWidth = DataStorage.ReadNumber(\"RightWidth\", 300);\r\n\r\n    private _popUpWindow: Window;\r\n    private _draggedItem: Nullable<string>;\r\n    private _rootRef: React.RefObject<HTMLDivElement>;\r\n    private _onErrorMessageObserver: Nullable<Observer<string>>;\r\n\r\n    override componentDidMount() {\r\n        if (navigator.userAgent.indexOf(\"Mobile\") !== -1) {\r\n            ((this.props.globalState.hostDocument || document).querySelector(\".blocker\") as HTMLElement).style.visibility = \"visible\";\r\n        }\r\n        document.addEventListener(\"keydown\", this.addToolControls);\r\n        document.addEventListener(\"keyup\", this.removePressToolControls);\r\n    }\r\n\r\n    override componentWillUnmount() {\r\n        document.removeEventListener(\"keydown\", this.addToolControls);\r\n        document.removeEventListener(\"keyup\", this.removePressToolControls);\r\n        if (this._onErrorMessageObserver) {\r\n            this.props.globalState.onErrorMessageDialogRequiredObservable.remove(this._onErrorMessageObserver);\r\n        }\r\n    }\r\n\r\n    addToolControls = (evt: KeyboardEvent) => {\r\n        // If the event target is a text input, we're currently focused on it, and the user\r\n        // just wants to type normal text\r\n        if (evt.target && evt.target instanceof HTMLInputElement && evt.target.type === \"text\") {\r\n            return;\r\n        }\r\n        switch (evt.key) {\r\n            case \"s\": //select\r\n            case \"S\":\r\n                this.props.globalState.tool = GUIEditorTool.SELECT;\r\n                break;\r\n            case \"p\": //pan\r\n            case \"P\":\r\n            case \" \":\r\n                this.props.globalState.tool = GUIEditorTool.PAN;\r\n                break;\r\n            case \"z\": //zoom\r\n            case \"Z\":\r\n                this.props.globalState.tool = GUIEditorTool.ZOOM;\r\n                break;\r\n            case \"g\": //outlines\r\n            case \"G\":\r\n                this.props.globalState.outlines = !this.props.globalState.outlines;\r\n                break;\r\n            case \"f\": //fit to window\r\n            case \"F\":\r\n                this.props.globalState.onFitControlsToWindowObservable.notifyObservers();\r\n                break;\r\n        }\r\n    };\r\n\r\n    removePressToolControls = (evt: KeyboardEvent) => {\r\n        if (evt.key === \" \") {\r\n            this.props.globalState.restorePreviousTool();\r\n        }\r\n    };\r\n\r\n    constructor(props: IGraphEditorProps) {\r\n        super(props);\r\n        this._rootRef = React.createRef();\r\n        this.state = {\r\n            showPreviewPopUp: false,\r\n            toolbarExpand: true,\r\n            message: \"\",\r\n        };\r\n\r\n        this.props.globalState.onBackgroundColorChangeObservable.add(() => this.forceUpdate());\r\n        this.props.globalState.onDropObservable.add(() => {\r\n            if (this._draggedItem != null) {\r\n                this.props.globalState.draggedControl = this.onCreate(this._draggedItem);\r\n            }\r\n            this._draggedItem = null;\r\n        });\r\n        this._onErrorMessageObserver = this.props.globalState.onErrorMessageDialogRequiredObservable.add((message) => {\r\n            this.setState({ message });\r\n        });\r\n    }\r\n\r\n    showWaitScreen() {\r\n        this.props.globalState.hostDocument.querySelector(\".wait-screen\")?.classList.remove(\"hidden\");\r\n    }\r\n\r\n    hideWaitScreen() {\r\n        this.props.globalState.hostDocument.querySelector(\".wait-screen\")?.classList.add(\"hidden\");\r\n    }\r\n\r\n    onPointerDown(evt: React.PointerEvent<HTMLDivElement>) {\r\n        if (evt.button !== 0) return;\r\n        this._moveInProgress = true;\r\n        evt.currentTarget.setPointerCapture(evt.pointerId);\r\n    }\r\n\r\n    onPointerUp(evt: React.PointerEvent<HTMLDivElement>) {\r\n        if (evt.button !== 0) return;\r\n        this._moveInProgress = false;\r\n        evt.currentTarget.releasePointerCapture(evt.pointerId);\r\n    }\r\n\r\n    resizeColumns(evt: React.PointerEvent<HTMLDivElement>, forLeft = true) {\r\n        if (!this._moveInProgress) {\r\n            return;\r\n        }\r\n\r\n        const rootElement = evt.currentTarget.ownerDocument!.getElementById(\"gui-editor-workbench-root\") as HTMLDivElement;\r\n\r\n        const maxWidth = this.props.globalState.hostWindow.innerWidth;\r\n\r\n        if (forLeft) {\r\n            this._leftWidth = Math.max(150, Math.min(maxWidth - this._rightWidth, evt.clientX - this._rootRef.current!.clientLeft));\r\n            DataStorage.WriteNumber(\"LeftWidth\", this._leftWidth);\r\n        } else {\r\n            this._rightWidth = Math.max(250, Math.min(maxWidth - this._leftWidth, this._rootRef.current!.clientLeft + this._rootRef.current!.clientWidth - evt.clientX));\r\n            DataStorage.WriteNumber(\"RightWidth\", this._rightWidth);\r\n        }\r\n\r\n        rootElement.style.gridTemplateColumns = this.buildColumnLayout();\r\n\r\n        this.props.globalState.onWindowResizeObservable.notifyObservers();\r\n    }\r\n\r\n    buildColumnLayout() {\r\n        return `${this._leftWidth}px 1fr ${this._rightWidth}px`;\r\n    }\r\n\r\n    handlePopUp = () => {\r\n        this.setState({\r\n            showPreviewPopUp: true,\r\n        });\r\n        this.props.globalState.hostWindow.addEventListener(\"beforeunload\", this.handleClosingPopUp);\r\n    };\r\n\r\n    handleClosingPopUp = () => {\r\n        this._popUpWindow.close();\r\n    };\r\n\r\n    createPopupWindow = (title: string, windowVariableName: string, width = 500, height = 500): Window | null => {\r\n        const windowCreationOptionsList = {\r\n            width: width,\r\n            height: height,\r\n            top: (this.props.globalState.hostWindow.innerHeight - width) / 2 + window.screenY,\r\n            left: (this.props.globalState.hostWindow.innerWidth - height) / 2 + window.screenX,\r\n        };\r\n\r\n        const windowCreationOptions = Object.keys(windowCreationOptionsList)\r\n            .map((key) => key + \"=\" + (windowCreationOptionsList as any)[key])\r\n            .join(\",\");\r\n\r\n        const popupWindow = this.props.globalState.hostWindow.open(\"\", title, windowCreationOptions);\r\n        if (!popupWindow) {\r\n            return null;\r\n        }\r\n\r\n        const parentDocument = popupWindow.document;\r\n\r\n        parentDocument.title = title;\r\n        parentDocument.body.style.width = \"100%\";\r\n        parentDocument.body.style.height = \"100%\";\r\n        parentDocument.body.style.margin = \"0\";\r\n        parentDocument.body.style.padding = \"0\";\r\n\r\n        const parentControl = parentDocument.createElement(\"div\");\r\n        parentControl.style.width = \"100%\";\r\n        parentControl.style.height = \"100%\";\r\n        parentControl.style.margin = \"0\";\r\n        parentControl.style.padding = \"0\";\r\n        parentControl.style.display = \"grid\";\r\n        parentControl.style.gridTemplateRows = \"40px auto\";\r\n        parentControl.id = \"gui-editor-workbench-root\";\r\n        parentControl.className = \"right-panel\";\r\n\r\n        popupWindow.document.body.appendChild(parentControl);\r\n\r\n        this.copyStyles(this.props.globalState.hostWindow.document, parentDocument);\r\n\r\n        (this as any)[windowVariableName] = popupWindow;\r\n\r\n        this._popUpWindow = popupWindow;\r\n\r\n        return popupWindow;\r\n    };\r\n\r\n    copyStyles = (sourceDoc: HTMLDocument, targetDoc: HTMLDocument) => {\r\n        const styleContainer = [];\r\n        for (let index = 0; index < sourceDoc.styleSheets.length; index++) {\r\n            const styleSheet: any = sourceDoc.styleSheets[index];\r\n            try {\r\n                if (styleSheet.href) {\r\n                    // for <link> elements loading CSS from a URL\r\n                    const newLinkEl = sourceDoc.createElement(\"link\");\r\n\r\n                    newLinkEl.rel = \"stylesheet\";\r\n                    newLinkEl.href = styleSheet.href;\r\n                    targetDoc.head!.appendChild(newLinkEl);\r\n                    styleContainer.push(newLinkEl);\r\n                } else if (styleSheet.cssRules) {\r\n                    // for <style> elements\r\n                    const newStyleEl = sourceDoc.createElement(\"style\");\r\n\r\n                    for (const cssRule of styleSheet.cssRules) {\r\n                        newStyleEl.appendChild(sourceDoc.createTextNode(cssRule.cssText));\r\n                    }\r\n\r\n                    targetDoc.head!.appendChild(newStyleEl);\r\n                    styleContainer.push(newStyleEl);\r\n                }\r\n            } catch (e) {\r\n                Logger.Log(e);\r\n            }\r\n        }\r\n    };\r\n    switchExpandedState(): void {\r\n        this.setState({ toolbarExpand: !this.state.toolbarExpand });\r\n        if (!this.state.toolbarExpand) {\r\n            this._leftWidth = this._leftWidth - 50;\r\n        } else {\r\n            this._leftWidth = this._leftWidth + 50;\r\n        }\r\n    }\r\n\r\n    override render() {\r\n        const classForElement = this.state.toolbarExpand ? \"left-panel\" : \"left-panel expand\";\r\n        return (\r\n            <Portal globalState={this.props.globalState}>\r\n                <div id=\"ge-header\">\r\n                    <div className=\"command-bar\">\r\n                        <CommandBarComponent globalState={this.props.globalState} />\r\n                    </div>\r\n                </div>\r\n                <div\r\n                    id=\"gui-editor-workbench-root\"\r\n                    style={{\r\n                        gridTemplateColumns: this.buildColumnLayout(),\r\n                    }}\r\n                    onMouseDown={(evt) => {\r\n                        if ((evt.target as HTMLElement).nodeName === \"INPUT\") {\r\n                            return;\r\n                        }\r\n                    }}\r\n                    ref={this._rootRef}\r\n                    onPointerUp={(evt) => this.onPointerUp(evt)}\r\n                >\r\n                    {/* Node creation menu */}\r\n                    <div className={classForElement}>\r\n                        <SceneExplorerComponent globalState={this.props.globalState} noExpand={true}></SceneExplorerComponent>\r\n                        {this.createToolbar()}\r\n                        <div id=\"leftGrab\" onPointerDown={(evt) => this.onPointerDown(evt)} onPointerMove={(evt) => this.resizeColumns(evt)}></div>\r\n                    </div>\r\n                    <SceneExplorerComponent globalState={this.props.globalState} noExpand={true}></SceneExplorerComponent>\r\n                    {this.createToolbar()}\r\n                    {/* The gui workbench diagram */}\r\n                    <div\r\n                        className=\"diagram-container\"\r\n                        onDrop={(event) => {\r\n                            event.preventDefault();\r\n                            this.props.globalState.onDropObservable.notifyObservers();\r\n                            this.props.globalState.onParentingChangeObservable.notifyObservers(null);\r\n                        }}\r\n                        onDragOver={(event) => {\r\n                            event.preventDefault();\r\n                        }}\r\n                        style={{\r\n                            backgroundColor: this.props.globalState.backgroundColor.toHexString(),\r\n                        }}\r\n                    >\r\n                        <ArtBoardComponent globalState={this.props.globalState} />\r\n                        <WorkbenchComponent ref={\"workbenchCanvas\"} globalState={this.props.globalState} />\r\n                        <GizmoWrapper globalState={this.props.globalState} />\r\n                    </div>\r\n                    {/* Property tab */}\r\n                    <div className=\"right-panel\">\r\n                        <div id=\"rightGrab\" onPointerDown={(evt) => this.onPointerDown(evt)} onPointerMove={(evt) => this.resizeColumns(evt, false)}></div>\r\n                        <PropertyTabComponent globalState={this.props.globalState} />\r\n                    </div>\r\n\r\n                    <LogComponent globalState={this.props.globalState} />\r\n                </div>\r\n                <MessageDialog message={this.state.message} isError={true} />\r\n                <div className=\"blocker\">GUI Editor runs only on desktop</div>\r\n                <div className=\"wait-screen hidden\">Processing...please wait</div>\r\n            </Portal>\r\n        );\r\n    }\r\n\r\n    onCreate(value: string): Control {\r\n        const guiElement = GUINodeTools.CreateControlFromString(value);\r\n        const newGuiNode = this.props.globalState.workbench.appendBlock(guiElement);\r\n        this.props.globalState.setSelection([newGuiNode]);\r\n        this.props.globalState.onPointerUpObservable.notifyObservers(null);\r\n        this.forceUpdate();\r\n        return newGuiNode;\r\n    }\r\n    createBlackLine() {\r\n        const icon = this.state.toolbarExpand ? <img src={toolbarExpandIcon} className=\"icon\" /> : <img src={toolbarCollapseIcon} className=\"icon\" />;\r\n        return (\r\n            <div className=\"blackLine\">\r\n                <div className=\"arrow\" onClick={() => this.switchExpandedState()}>\r\n                    {icon}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    createToolbarHelper(ct: { className: string; icon: string }[]) {\r\n        return ct.map((type) => {\r\n            return (\r\n                <div\r\n                    className={\"toolbar-label\"}\r\n                    key={type.className}\r\n                    onDragStart={() => {\r\n                        this._draggedItem = type.className;\r\n                    }}\r\n                    onClick={() => {\r\n                        this.onCreate(type.className);\r\n                    }}\r\n                    title={type.className}\r\n                >\r\n                    {type.icon && (\r\n                        <div className=\"toolbar-icon\" draggable={true}>\r\n                            <img src={type.icon} alt={type.className} width=\"40px\" height={\"40px\"} />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n    createToolbar() {\r\n        if (this.state.toolbarExpand) {\r\n            return (\r\n                <>\r\n                    <div className=\"toolbarGrab\">\r\n                        {this.createBlackLine()}\r\n                        {<div className={\"toolbar-content-sub1\"}>{this.createToolbarHelper(ControlTypes)}</div>}\r\n                    </div>\r\n                </>\r\n            );\r\n        } else {\r\n            return (\r\n                <>\r\n                    <div className=\"toolbarGrab expanded\">\r\n                        {this.createBlackLine()}\r\n                        {\r\n                            <div className={\"toolbar-content-sub1\"}>\r\n                                {this.createToolbarHelper(ControlTypes.slice(0, Math.ceil(ControlTypes.length / 2)))}\r\n                                {this.createToolbarHelper(ControlTypes.slice(Math.ceil(ControlTypes.length / 2)))}\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </>\r\n            );\r\n        }\r\n    }\r\n}\r\n"]}