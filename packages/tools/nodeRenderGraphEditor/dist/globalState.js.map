{"version":3,"file":"globalState.js","sourceRoot":"","sources":["../src/globalState.ts"],"names":[],"mappings":"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","sourcesContent":["import type { NodeRenderGraph } from \"core/FrameGraph/Node/nodeRenderGraph\";\r\nimport { Observable } from \"core/Misc/observable\";\r\nimport { LogEntry } from \"./components/log/logComponent\";\r\nimport { DataStorage } from \"core/Misc/dataStorage\";\r\nimport { RegisterElbowSupport } from \"./graphSystem/registerElbowSupport\";\r\nimport { RegisterNodePortDesign } from \"./graphSystem/registerNodePortDesign\";\r\nimport type { GraphNode } from \"shared-ui-components/nodeGraphSystem/graphNode\";\r\nimport type { GraphFrame } from \"shared-ui-components/nodeGraphSystem/graphFrame\";\r\nimport type { Nullable } from \"core/types\";\r\nimport { LockObject } from \"shared-ui-components/tabs/propertyGrids/lockObject\";\r\nimport { StateManager } from \"shared-ui-components/nodeGraphSystem/stateManager\";\r\nimport { RegisterDefaultInput } from \"./graphSystem/registerDefaultInput\";\r\nimport { RegisterExportData } from \"./graphSystem/registerExportData\";\r\nimport type { NodeRenderGraphBlock } from \"core/FrameGraph/Node/nodeRenderGraphBlock\";\r\nimport type { FilesInput } from \"core/Misc/filesInput\";\r\nimport { RegisterDebugSupport } from \"./graphSystem/registerDebugSupport\";\r\nimport { PreviewType } from \"./components/preview/previewType\";\r\nimport type { Scene } from \"core/scene\";\r\nimport { SerializationTools } from \"./serializationTools\";\r\n\r\nexport class GlobalState {\r\n    hostElement: HTMLElement;\r\n    hostDocument: Document;\r\n    hostWindow: Window;\r\n    stateManager: StateManager;\r\n    onBuiltObservable = new Observable<void>();\r\n    onResetRequiredObservable = new Observable<boolean>();\r\n    onZoomToFitRequiredObservable = new Observable<void>();\r\n    onReOrganizedRequiredObservable = new Observable<void>();\r\n    onLogRequiredObservable = new Observable<LogEntry>();\r\n    onIsLoadingChanged = new Observable<boolean>();\r\n    onLightUpdated = new Observable<void>();\r\n    onFrame = new Observable<void>();\r\n    onAnimationCommandActivated = new Observable<void>();\r\n    onImportFrameObservable = new Observable<any>();\r\n    onPopupClosedObservable = new Observable<void>();\r\n    onGetNodeFromBlock: (block: NodeRenderGraphBlock) => GraphNode;\r\n    onDropEventReceivedObservable = new Observable<DragEvent>();\r\n    previewType: PreviewType;\r\n    previewFile: File;\r\n    envType: PreviewType;\r\n    envFile: File;\r\n    listOfCustomPreviewFiles: File[] = [];\r\n    rotatePreview: boolean;\r\n    lockObject = new LockObject();\r\n    hemisphericLight: boolean;\r\n    directionalLight0: boolean;\r\n    directionalLight1: boolean;\r\n    pointerOverCanvas: boolean = false;\r\n    onRefreshPreviewMeshControlComponentRequiredObservable = new Observable<void>();\r\n    filesInput: FilesInput;\r\n    scene: Scene;\r\n    noAutoFillExternalInputs: boolean;\r\n\r\n    customSave?: { label: string; action: (data: string) => Promise<void> };\r\n\r\n    private _nodeRenderGraph: NodeRenderGraph;\r\n\r\n    /**\r\n     * Gets the current node render graph\r\n     */\r\n    public get nodeRenderGraph(): NodeRenderGraph {\r\n        return this._nodeRenderGraph;\r\n    }\r\n\r\n    /**\r\n     * Sets the current node material\r\n     */\r\n    public set nodeRenderGraph(nodeRenderGraph: NodeRenderGraph) {\r\n        this._nodeRenderGraph = nodeRenderGraph;\r\n        nodeRenderGraph.onBuildObservable.add(() => {\r\n            this.onLogRequiredObservable.notifyObservers(new LogEntry(\"Node render graph build successful\", false));\r\n\r\n            SerializationTools.UpdateLocations(nodeRenderGraph, this);\r\n\r\n            this.onBuiltObservable.notifyObservers();\r\n        });\r\n        nodeRenderGraph.onBuildErrorObservable.add((err: string) => {\r\n            this.onLogRequiredObservable.notifyObservers(new LogEntry(err, true));\r\n        });\r\n    }\r\n\r\n    public constructor(scene: Scene) {\r\n        this.scene = scene;\r\n        this.stateManager = new StateManager();\r\n        this.stateManager.data = this;\r\n        this.stateManager.lockObject = this.lockObject;\r\n\r\n        this.previewType = DataStorage.ReadNumber(\"PreviewType\", PreviewType.Box);\r\n        this.envType = DataStorage.ReadNumber(\"EnvType\", PreviewType.Room);\r\n        this.hemisphericLight = DataStorage.ReadBoolean(\"HemisphericLight\", false);\r\n        this.directionalLight0 = DataStorage.ReadBoolean(\"DirectionalLight0\", false);\r\n        this.directionalLight1 = DataStorage.ReadBoolean(\"DirectionalLight1\", false);\r\n\r\n        RegisterElbowSupport(this.stateManager);\r\n        RegisterDebugSupport(this.stateManager);\r\n        RegisterNodePortDesign(this.stateManager);\r\n        RegisterDefaultInput(this.stateManager);\r\n        RegisterExportData(this.stateManager);\r\n    }\r\n\r\n    storeEditorData(serializationObject: any, frame?: Nullable<GraphFrame>) {\r\n        this.stateManager.storeEditorData(serializationObject, frame);\r\n    }\r\n}\r\n"]}