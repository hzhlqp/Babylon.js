{"version":3,"file":"nodePortPropertyComponent.js","sourceRoot":"","sources":["../../../src/graphSystem/properties/nodePortPropertyComponent.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,sBAAsB,EAAE,MAAM,+CAA+C,CAAC;AACvF,OAAO,EAAE,qBAAqB,EAAE,MAAM,8CAA8C,CAAC;AAErF,OAAO,EAAE,sBAAsB,EAAE,MAAM,mDAAmD,CAAC;AAE3F,OAAO,EAAE,iBAAiB,EAAE,MAAM,8CAA8C,CAAC;AAOjF,MAAM,OAAO,4BAA6B,SAAQ,KAAK,CAAC,SAAkD;IACtG,YAAY,KAA8C;QACtD,KAAK,CAAC,KAAK,CAAC,CAAC;IACjB,CAAC;IAED,mBAAmB,CAAC,KAAc;QAC9B,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,cAAc,GAAG,KAAK,CAAC;QAC3C,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,6BAA6B,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACpG,CAAC;IAEQ,MAAM;QACX,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAC1C,8BACK,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAC/B,KAAC,sBAAsB,IAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,UAAU,EAAE,KAAK,EAAC,YAAY,EAAC,YAAY,EAAC,UAAU,EAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAI,CACrJ,EACA,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,KAAK,CAAC,CAAC,IAAI,CACjD,KAAC,qBAAqB,IAClB,KAAK,EAAC,sBAAsB,EAC5B,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAC3B,UAAU,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,cAAc,EACpD,QAAQ,EAAE,CAAC,KAAc,EAAE,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,EAC7D,YAAY,EAAC,gBAAgB,EAC7B,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,GACxC,CACL,IACF,CACN,CAAC,CAAC,CAAC,CACA,KAAC,iBAAiB,IAAC,KAAK,EAAC,2CAA2C,EAAC,KAAK,EAAC,GAAG,GAAqB,CACtG,CAAC;QAEF,OAAO,CACH,eAAK,EAAE,EAAC,aAAa,aACjB,eAAK,EAAE,EAAC,QAAQ,aACZ,cAAK,EAAE,EAAC,MAAM,EAAC,GAAG,EAAC,oEAAoE,GAAG,EAC1F,cAAK,EAAE,EAAC,OAAO,yCAA+B,IAC5C,EACN,wBACI,KAAC,sBAAsB,IAAC,KAAK,EAAC,SAAS,YAAE,IAAI,GAA0B,GACrE,IACJ,CACT,CAAC;IACN,CAAC;CACJ","sourcesContent":["import * as React from \"react\";\r\nimport { LineContainerComponent } from \"../../sharedComponents/lineContainerComponent\";\r\nimport { CheckBoxLineComponent } from \"../../sharedComponents/checkBoxLineComponent\";\r\nimport type { StateManager } from \"shared-ui-components/nodeGraphSystem/stateManager\";\r\nimport { TextInputLineComponent } from \"shared-ui-components/lines/textInputLineComponent\";\r\nimport type { NodePort } from \"shared-ui-components/nodeGraphSystem/nodePort\";\r\nimport { TextLineComponent } from \"shared-ui-components/lines/textLineComponent\";\r\n\r\nexport interface IFrameNodePortPropertyTabComponentProps {\r\n    stateManager: StateManager;\r\n    nodePort: NodePort;\r\n}\r\n\r\nexport class NodePortPropertyTabComponent extends React.Component<IFrameNodePortPropertyTabComponentProps> {\r\n    constructor(props: IFrameNodePortPropertyTabComponentProps) {\r\n        super(props);\r\n    }\r\n\r\n    toggleExposeOnFrame(value: boolean) {\r\n        this.props.nodePort.exposedOnFrame = value;\r\n        this.props.stateManager.onExposePortOnFrameObservable.notifyObservers(this.props.nodePort.node);\r\n    }\r\n\r\n    override render() {\r\n        const info = this.props.nodePort.hasLabel() ? (\r\n            <>\r\n                {this.props.nodePort.hasLabel() && (\r\n                    <TextInputLineComponent lockObject={this.props.stateManager.lockObject} label=\"Port Label\" propertyName=\"portName\" target={this.props.nodePort} />\r\n                )}\r\n                {this.props.nodePort.node.enclosingFrameId !== -1 && (\r\n                    <CheckBoxLineComponent\r\n                        label=\"Expose Port on Frame\"\r\n                        target={this.props.nodePort}\r\n                        isSelected={() => this.props.nodePort.exposedOnFrame}\r\n                        onSelect={(value: boolean) => this.toggleExposeOnFrame(value)}\r\n                        propertyName=\"exposedOnFrame\"\r\n                        disabled={this.props.nodePort.disabled}\r\n                    />\r\n                )}\r\n            </>\r\n        ) : (\r\n            <TextLineComponent label=\"This node cannot be exposed to the frame.\" value=\" \"></TextLineComponent>\r\n        );\r\n\r\n        return (\r\n            <div id=\"propertyTab\">\r\n                <div id=\"header\">\r\n                    <img id=\"logo\" src=\"https://www.babylonjs.com/Assets/logo-babylonjs-social-twitter.png\" />\r\n                    <div id=\"title\">NODE RENDER GRAPH EDITOR</div>\r\n                </div>\r\n                <div>\r\n                    <LineContainerComponent title=\"GENERAL\">{info}</LineContainerComponent>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]}