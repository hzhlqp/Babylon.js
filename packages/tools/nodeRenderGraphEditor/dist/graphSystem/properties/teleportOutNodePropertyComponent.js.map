{"version":3,"file":"teleportOutNodePropertyComponent.js","sourceRoot":"","sources":["../../../src/graphSystem/properties/teleportOutNodePropertyComponent.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport { GeneralPropertyTabComponent } from \"./genericNodePropertyComponent\";\r\nimport type { IPropertyComponentProps } from \"shared-ui-components/nodeGraphSystem/interfaces/propertyComponentProps\";\r\nimport type { Observer } from \"core/Misc/observable\";\r\nimport type { Nullable } from \"core/types\";\r\nimport { LineContainerComponent } from \"../../sharedComponents/lineContainerComponent\";\r\nimport type { NodeRenderGraphTeleportOutBlock } from \"core/FrameGraph/Node/Blocks/Teleport/teleportOutBlock\";\r\nimport { OptionsLine } from \"shared-ui-components/lines/optionsLineComponent\";\r\nimport type { GlobalState } from \"node-render-graph-editor/globalState\";\r\nimport type { NodeRenderGraphTeleportInBlock } from \"core/FrameGraph/Node/Blocks/Teleport/teleportInBlock\";\r\n\r\nexport class TeleportOutPropertyTabComponent extends React.Component<IPropertyComponentProps> {\r\n    private _onUpdateRequiredObserver: Nullable<Observer<any>>;\r\n\r\n    constructor(props: IPropertyComponentProps) {\r\n        super(props);\r\n    }\r\n\r\n    override componentDidMount() {\r\n        this._onUpdateRequiredObserver = this.props.stateManager.onUpdateRequiredObservable.add(() => {\r\n            this.forceUpdate();\r\n        });\r\n    }\r\n\r\n    override componentWillUnmount() {\r\n        this.props.stateManager.onUpdateRequiredObservable.remove(this._onUpdateRequiredObserver);\r\n    }\r\n\r\n    override render() {\r\n        const block = this.props.nodeData.data as NodeRenderGraphTeleportOutBlock;\r\n\r\n        const options = [{ label: \"None\", value: -1 }];\r\n        const teleporters: NodeRenderGraphTeleportInBlock[] = [];\r\n\r\n        const nodeRenderGraph = (this.props.stateManager.data as GlobalState).nodeRenderGraph;\r\n\r\n        for (const block of nodeRenderGraph.attachedBlocks) {\r\n            if (block.getClassName() === \"NodeRenderGraphTeleportInBlock\") {\r\n                teleporters.push(block as NodeRenderGraphTeleportInBlock);\r\n            }\r\n        }\r\n\r\n        teleporters.sort((a, b) => a.name.localeCompare(b.name));\r\n\r\n        for (const block of teleporters) {\r\n            options.push({ label: block.name, value: block.uniqueId });\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <GeneralPropertyTabComponent stateManager={this.props.stateManager} nodeData={this.props.nodeData} />\r\n                <LineContainerComponent title=\"PROPERTIES\">\r\n                    <OptionsLine\r\n                        label=\"Entry point\"\r\n                        options={options}\r\n                        target={block}\r\n                        propertyName=\"entryPoint\"\r\n                        noDirectUpdate={true}\r\n                        onSelect={(value) => {\r\n                            switch (value) {\r\n                                case -1:\r\n                                    block.detach();\r\n                                    break;\r\n                                default: {\r\n                                    const source = teleporters.find((t) => t.uniqueId === value);\r\n                                    source?.attachToEndpoint(block);\r\n                                }\r\n                            }\r\n\r\n                            this.props.stateManager.onUpdateRequiredObservable.notifyObservers(block);\r\n                            this.props.stateManager.onRebuildRequiredObservable.notifyObservers();\r\n                            this.forceUpdate();\r\n                        }}\r\n                        extractValue={() => {\r\n                            if (!block.entryPoint) {\r\n                                return -1;\r\n                            }\r\n\r\n                            return block.entryPoint?.uniqueId;\r\n                        }}\r\n                    />\r\n                </LineContainerComponent>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]}