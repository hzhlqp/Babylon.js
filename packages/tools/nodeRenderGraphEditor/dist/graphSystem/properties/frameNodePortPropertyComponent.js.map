{"version":3,"file":"frameNodePortPropertyComponent.js","sourceRoot":"","sources":["../../../src/graphSystem/properties/frameNodePortPropertyComponent.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport { LineContainerComponent } from \"../../sharedComponents/lineContainerComponent\";\r\nimport type { GlobalState } from \"../../globalState\";\r\nimport type { Nullable } from \"core/types\";\r\nimport type { Observer } from \"core/Misc/observable\";\r\nimport type { StateManager } from \"shared-ui-components/nodeGraphSystem/stateManager\";\r\nimport type { ISelectionChangedOptions } from \"shared-ui-components/nodeGraphSystem/interfaces/selectionChangedOptions\";\r\nimport { TextInputLineComponent } from \"shared-ui-components/lines/textInputLineComponent\";\r\nimport type { GraphFrame } from \"shared-ui-components/nodeGraphSystem/graphFrame\";\r\nimport { FramePortPosition } from \"shared-ui-components/nodeGraphSystem/graphFrame\";\r\nimport { IsFramePortData } from \"shared-ui-components/nodeGraphSystem/tools\";\r\nimport type { FrameNodePort } from \"shared-ui-components/nodeGraphSystem/frameNodePort\";\r\nimport { ButtonLineComponent } from \"shared-ui-components/lines/buttonLineComponent\";\r\n\r\nexport interface IFrameNodePortPropertyTabComponentProps {\r\n    stateManager: StateManager;\r\n    globalState: GlobalState;\r\n    frameNodePort: FrameNodePort;\r\n    frame: GraphFrame;\r\n}\r\n\r\nexport class FrameNodePortPropertyTabComponent extends React.Component<IFrameNodePortPropertyTabComponentProps, { port: FrameNodePort }> {\r\n    private _onFramePortPositionChangedObserver: Nullable<Observer<FrameNodePort>>;\r\n    private _onSelectionChangedObserver: Nullable<Observer<Nullable<ISelectionChangedOptions>>>;\r\n\r\n    constructor(props: IFrameNodePortPropertyTabComponentProps) {\r\n        super(props);\r\n        this.state = {\r\n            port: this.props.frameNodePort,\r\n        };\r\n\r\n        this._onSelectionChangedObserver = this.props.stateManager.onSelectionChangedObservable.add((options) => {\r\n            const { selection } = options || {};\r\n            if (IsFramePortData(selection)) {\r\n                selection.port.onFramePortPositionChangedObservable.clear();\r\n                this._onFramePortPositionChangedObserver = selection.port.onFramePortPositionChangedObservable.add((port: FrameNodePort) => {\r\n                    this.setState({ port: port });\r\n                });\r\n\r\n                this.setState({ port: selection.port });\r\n            }\r\n        });\r\n\r\n        this._onFramePortPositionChangedObserver = this.props.frameNodePort.onFramePortPositionChangedObservable.add((port: FrameNodePort) => {\r\n            this.setState({ port: port });\r\n        });\r\n    }\r\n\r\n    override componentWillUnmount() {\r\n        this.props.frameNodePort.onFramePortPositionChangedObservable.remove(this._onFramePortPositionChangedObserver);\r\n        this.props.stateManager.onSelectionChangedObservable.remove(this._onSelectionChangedObserver);\r\n    }\r\n\r\n    override render() {\r\n        return (\r\n            <div id=\"propertyTab\">\r\n                <div id=\"header\">\r\n                    <img id=\"logo\" src=\"https://www.babylonjs.com/Assets/logo-babylonjs-social-twitter.png\" />\r\n                    <div id=\"title\">NODE MATERIAL EDITOR</div>\r\n                </div>\r\n                <div>\r\n                    <LineContainerComponent title=\"GENERAL\">\r\n                        <TextInputLineComponent label=\"Port Name\" lockObject={this.props.stateManager.lockObject} propertyName=\"portName\" target={this.props.frameNodePort} />\r\n                        {this.props.frameNodePort.framePortPosition !== FramePortPosition.Top && (\r\n                            <ButtonLineComponent\r\n                                label=\"Move Port Up\"\r\n                                onClick={() => {\r\n                                    this.props.frame.moveFramePortUp(this.props.frameNodePort);\r\n                                }}\r\n                            />\r\n                        )}\r\n\r\n                        {this.props.frameNodePort.framePortPosition !== FramePortPosition.Bottom && (\r\n                            <ButtonLineComponent\r\n                                label=\"Move Port Down\"\r\n                                onClick={() => {\r\n                                    this.props.frame.moveFramePortDown(this.props.frameNodePort);\r\n                                }}\r\n                            />\r\n                        )}\r\n                    </LineContainerComponent>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]}