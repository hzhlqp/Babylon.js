{"version":3,"file":"inputsPropertyTabComponent.js","sourceRoot":"","sources":["../../../src/components/propertyTab/inputsPropertyTabComponent.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,sBAAsB,EAAE,MAAM,+CAA+C,CAAC;AAEvF,OAAO,oBAAoB,CAAC;AAG5B,OAAO,EAAE,wCAAwC,EAAE,MAAM,iDAAiD,CAAC;AAQ3G,MAAM,OAAO,0BAA2B,SAAQ,KAAK,CAAC,SAA2C;IAC7F,YAAY,KAAuC;QAC/C,KAAK,CAAC,KAAK,CAAC,CAAC;IACjB,CAAC;IAED,uBAAuB;QACnB,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,YAAY,CAAC,2BAA2B,CAAC,eAAe,EAAE,CAAC;IACtF,CAAC;IAED,gBAAgB,CAAC,KAAgC;QAC7C,QAAQ,KAAK,CAAC,IAAI,EAAE;YAChB,KAAK,wCAAwC,CAAC,OAAO,CAAC,CAAC;gBACnD,OAAO,gBAAU,KAAK,CAAC,QAAQ,CAAQ,CAAC;aAC3C;SACJ;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAEQ,MAAM;QACX,OAAO,CACH,KAAC,sBAAsB,IAAC,KAAK,EAAC,QAAQ,YACjC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE;gBAC1B,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE;oBACV,OAAO,IAAI,CAAC;iBACf;gBACD,OAAO,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC;YACrC,CAAC,CAAC,GACmB,CAC5B,CAAC;IACN,CAAC;CACJ","sourcesContent":["import * as React from \"react\";\r\nimport type { GlobalState } from \"../../globalState\";\r\nimport { LineContainerComponent } from \"../../sharedComponents/lineContainerComponent\";\r\n\r\nimport \"./propertyTab.scss\";\r\nimport type { LockObject } from \"shared-ui-components/tabs/propertyGrids/lockObject\";\r\nimport type { NodeRenderGraphInputBlock } from \"core/FrameGraph/Node/Blocks/inputBlock\";\r\nimport { NodeRenderGraphBlockConnectionPointTypes } from \"core/FrameGraph/Node/Types/nodeRenderGraphTypes\";\r\n\r\ninterface IInputsPropertyTabComponentProps {\r\n    globalState: GlobalState;\r\n    inputs: NodeRenderGraphInputBlock[];\r\n    lockObject: LockObject;\r\n}\r\n\r\nexport class InputsPropertyTabComponent extends React.Component<IInputsPropertyTabComponentProps> {\r\n    constructor(props: IInputsPropertyTabComponentProps) {\r\n        super(props);\r\n    }\r\n\r\n    processInputBlockUpdate() {\r\n        this.props.globalState.stateManager.onRebuildRequiredObservable.notifyObservers();\r\n    }\r\n\r\n    renderInputBlock(block: NodeRenderGraphInputBlock) {\r\n        switch (block.type) {\r\n            case NodeRenderGraphBlockConnectionPointTypes.Texture: {\r\n                return <div key={block.uniqueId}></div>;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    override render() {\r\n        return (\r\n            <LineContainerComponent title=\"INPUTS\">\r\n                {this.props.inputs.map((ib) => {\r\n                    if (!ib.name) {\r\n                        return null;\r\n                    }\r\n                    return this.renderInputBlock(ib);\r\n                })}\r\n            </LineContainerComponent>\r\n        );\r\n    }\r\n}\r\n"]}