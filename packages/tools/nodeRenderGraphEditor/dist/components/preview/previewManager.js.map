{"version":3,"file":"previewManager.js","sourceRoot":"","sources":["../../../src/components/preview/previewManager.ts"],"names":[],"mappings":"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","sourcesContent":["import type { GlobalState } from \"../../globalState\";\r\nimport type { Nullable } from \"core/types\";\r\nimport type { Observer } from \"core/Misc/observable\";\r\nimport { Engine } from \"core/Engines/engine\";\r\nimport { Scene } from \"core/scene\";\r\nimport { Vector3 } from \"core/Maths/math.vector\";\r\nimport { HemisphericLight } from \"core/Lights/hemisphericLight\";\r\nimport { DirectionalLight } from \"core/Lights/directionalLight\";\r\nimport { ArcRotateCamera } from \"core/Cameras/arcRotateCamera\";\r\nimport { SceneLoader } from \"core/Loading/sceneLoader\";\r\nimport { TransformNode } from \"core/Meshes/transformNode\";\r\nimport type { FramingBehavior } from \"core/Behaviors/Cameras/framingBehavior\";\r\nimport \"core/Rendering/depthRendererSceneComponent\";\r\nimport { NodeRenderGraph } from \"core/FrameGraph/Node/nodeRenderGraph\";\r\nimport type { NodeRenderGraphBlock } from \"core/FrameGraph/Node/nodeRenderGraphBlock\";\r\nimport { LogEntry } from \"../log/logComponent\";\r\nimport type { NodeRenderGraphGUIBlock } from \"gui/2D/FrameGraph/renderGraphGUIBlock\";\r\nimport { Button } from \"gui/2D/controls/button\";\r\nimport { Control } from \"gui/2D/controls/control\";\r\nimport { PreviewType } from \"./previewType\";\r\nimport { CubeTexture } from \"core/Materials/Textures/cubeTexture\";\r\nimport { FilesInput } from \"core/Misc/filesInput\";\r\nimport { Color3 } from \"core/Maths/math.color\";\r\nimport { WebGPUEngine } from \"core/Engines/webgpuEngine\";\r\nimport { NodeRenderGraphBlockConnectionPointTypes } from \"core/FrameGraph/Node/Types/nodeRenderGraphTypes\";\r\n\r\nconst useWebGPU = false;\r\nconst debugTextures = false;\r\n\r\nexport class PreviewManager {\r\n    private _nodeRenderGraph: NodeRenderGraph;\r\n\r\n    private _onFrameObserver: Nullable<Observer<void>>;\r\n    private _onPreviewCommandActivatedObserver: Nullable<Observer<boolean>>;\r\n    private _onUpdateRequiredObserver: Nullable<Observer<Nullable<NodeRenderGraphBlock>>>;\r\n    private _onRebuildRequiredObserver: Nullable<Observer<void>>;\r\n    private _onImportFrameObserver: Nullable<Observer<any>>;\r\n    private _onResetRequiredObserver: Nullable<Observer<boolean>>;\r\n    private _onLightUpdatedObserver: Nullable<Observer<void>>;\r\n    private _engine: Engine | WebGPUEngine;\r\n    private _scene: Scene;\r\n    private _globalState: GlobalState;\r\n    private _currentType: number;\r\n    private _lightParent: TransformNode;\r\n    private _hdrTexture: CubeTexture;\r\n\r\n    public constructor(targetCanvas: HTMLCanvasElement, globalState: GlobalState) {\r\n        this._globalState = globalState;\r\n\r\n        this._onFrameObserver = this._globalState.onFrame.add(() => {\r\n            this._frameCamera();\r\n        });\r\n\r\n        this._onPreviewCommandActivatedObserver = globalState.stateManager.onPreviewCommandActivated.add((forceRefresh: boolean) => {\r\n            if (forceRefresh) {\r\n                this._currentType = -1;\r\n            }\r\n            this._refreshPreviewMesh();\r\n        });\r\n\r\n        this._onLightUpdatedObserver = globalState.onLightUpdated.add(() => {\r\n            this._prepareLights();\r\n        });\r\n\r\n        this._onUpdateRequiredObserver = globalState.stateManager.onUpdateRequiredObservable.add(() => {\r\n            this._createNodeRenderGraph();\r\n            this._buildGraph();\r\n        });\r\n\r\n        this._onRebuildRequiredObserver = globalState.stateManager.onRebuildRequiredObservable.add(() => {\r\n            this._createNodeRenderGraph();\r\n            this._buildGraph();\r\n        });\r\n\r\n        this._onImportFrameObserver = globalState.onImportFrameObservable.add(() => {\r\n            this._createNodeRenderGraph();\r\n            this._buildGraph();\r\n        });\r\n\r\n        this._onResetRequiredObserver = globalState.onResetRequiredObservable.add(() => {\r\n            this._createNodeRenderGraph();\r\n            this._buildGraph();\r\n        });\r\n\r\n        this._initAsync(targetCanvas);\r\n    }\r\n\r\n    private async _initAsync(targetCanvas: HTMLCanvasElement) {\r\n        if (useWebGPU) {\r\n            this._engine = new WebGPUEngine(targetCanvas, {\r\n                enableGPUDebugMarkers: true,\r\n                enableAllFeatures: true,\r\n                setMaximumLimits: true,\r\n            });\r\n            await (this._engine as WebGPUEngine).initAsync();\r\n        } else {\r\n            this._engine = new Engine(targetCanvas, true, { forceSRGBBufferSupportState: true });\r\n        }\r\n\r\n        const canvas = this._engine.getRenderingCanvas();\r\n        if (canvas) {\r\n            const onDrag = (evt: DragEvent) => {\r\n                evt.stopPropagation();\r\n                evt.preventDefault();\r\n            };\r\n            canvas.addEventListener(\"dragenter\", onDrag, false);\r\n            canvas.addEventListener(\"dragover\", onDrag, false);\r\n\r\n            const onDrop = (evt: DragEvent) => {\r\n                evt.stopPropagation();\r\n                evt.preventDefault();\r\n                this._globalState.onDropEventReceivedObservable.notifyObservers(evt);\r\n            };\r\n            canvas.addEventListener(\"drop\", onDrop, false);\r\n        }\r\n\r\n        this._initScene(new Scene(this._engine));\r\n\r\n        this._refreshPreviewMesh();\r\n    }\r\n\r\n    private _initScene(scene: Scene) {\r\n        (window as any).scenePreview = scene;\r\n\r\n        this._scene = scene;\r\n\r\n        this._globalState.filesInput?.dispose();\r\n        this._globalState.filesInput = new FilesInput(\r\n            this._engine,\r\n            null,\r\n            (_, scene) => {\r\n                this._initScene(scene);\r\n                this._prepareScene();\r\n            },\r\n            null,\r\n            null,\r\n            null,\r\n            null,\r\n            null,\r\n            () => {\r\n                this._reset();\r\n            },\r\n            false\r\n        );\r\n\r\n        this._lightParent = new TransformNode(\"LightParent\", this._scene);\r\n\r\n        this._engine.stopRenderLoop();\r\n\r\n        this._engine.runRenderLoop(() => {\r\n            this._engine.resize();\r\n            this._scene.render();\r\n        });\r\n\r\n        this._createNodeRenderGraph();\r\n        this._buildGraph();\r\n    }\r\n\r\n    private _reset() {\r\n        this._globalState.envType = PreviewType.Room;\r\n        this._globalState.previewType = PreviewType.Box;\r\n        this._globalState.listOfCustomPreviewFiles = [];\r\n        this._scene.meshes.forEach((m) => m.dispose());\r\n        this._globalState.onRefreshPreviewMeshControlComponentRequiredObservable.notifyObservers();\r\n        this._refreshPreviewMesh(true);\r\n    }\r\n\r\n    private _prepareLights() {\r\n        // Remove current lights\r\n        const currentLights = this._scene.lights.slice(0);\r\n\r\n        for (const light of currentLights) {\r\n            light.dispose();\r\n        }\r\n\r\n        // Create new lights based on settings\r\n        if (this._globalState.hemisphericLight) {\r\n            new HemisphericLight(\"Hemispheric light\", new Vector3(0, 1, 0), this._scene);\r\n        }\r\n\r\n        if (this._globalState.directionalLight0) {\r\n            const dir0 = new DirectionalLight(\"Directional light #0\", new Vector3(0.841626576496605, -0.2193391004130599, -0.49351298337996535), this._scene);\r\n            dir0.intensity = 0.9;\r\n            dir0.diffuse = new Color3(0.9294117647058824, 0.9725490196078431, 0.996078431372549);\r\n            dir0.specular = new Color3(0.9294117647058824, 0.9725490196078431, 0.996078431372549);\r\n            dir0.parent = this._lightParent;\r\n        }\r\n\r\n        if (this._globalState.directionalLight1) {\r\n            const dir1 = new DirectionalLight(\"Directional light #1\", new Vector3(-0.9519937437504213, -0.24389315636999764, -0.1849974057546125), this._scene);\r\n            dir1.intensity = 1.2;\r\n            dir1.specular = new Color3(0.9803921568627451, 0.9529411764705882, 0.7725490196078432);\r\n            dir1.diffuse = new Color3(0.9803921568627451, 0.9529411764705882, 0.7725490196078432);\r\n            dir1.parent = this._lightParent;\r\n        }\r\n    }\r\n\r\n    private _createNodeRenderGraph() {\r\n        if (!this._scene) {\r\n            // The initialization is not done yet\r\n            return;\r\n        }\r\n\r\n        const serialized = this._globalState.nodeRenderGraph.serialize();\r\n        this._nodeRenderGraph?.dispose();\r\n        this._nodeRenderGraph = NodeRenderGraph.Parse(serialized, this._scene, {\r\n            rebuildGraphOnEngineResize: false,\r\n            autoFillExternalInputs: false,\r\n            debugTextures,\r\n        });\r\n        (window as any).nrgPreview = this._nodeRenderGraph;\r\n    }\r\n\r\n    private async _buildGraph() {\r\n        if (!this._scene) {\r\n            // The initialization is not done yet\r\n            return;\r\n        }\r\n\r\n        const cameraInfo: { radius: number; alpha: number; beta: number; target: Vector3; position: Vector3 }[] = [];\r\n\r\n        for (const camera of this._scene.cameras.slice()) {\r\n            const arcRotateCamera = camera as ArcRotateCamera;\r\n\r\n            cameraInfo.push({\r\n                radius: arcRotateCamera.radius,\r\n                alpha: arcRotateCamera.alpha,\r\n                beta: arcRotateCamera.beta,\r\n                target: arcRotateCamera.target.clone(),\r\n                position: arcRotateCamera.position.clone(),\r\n            });\r\n            camera.dispose();\r\n        }\r\n        this._scene.cameras.length = 0;\r\n        this._scene.cameraToUseForPointers = null;\r\n\r\n        // Set default external inputs\r\n        const allInputs = this._nodeRenderGraph.getInputBlocks();\r\n        for (const input of allInputs) {\r\n            if (!input.isExternal) {\r\n                continue;\r\n            }\r\n            if (!input.isAnAncestorOfType(\"NodeRenderGraphOutputBlock\")) {\r\n                continue;\r\n            }\r\n            if ((input.type & NodeRenderGraphBlockConnectionPointTypes.TextureAllButBackBuffer) !== 0) {\r\n                // TODO: Implement this?\r\n            } else if (input.isCamera()) {\r\n                const camera = new ArcRotateCamera(\"PreviewCamera\", 0, 0.8, 4, Vector3.Zero(), this._scene);\r\n\r\n                camera.lowerRadiusLimit = 3;\r\n                camera.upperRadiusLimit = 10;\r\n                camera.wheelPrecision = 20;\r\n                camera.minZ = 0.001;\r\n                camera.attachControl(false);\r\n                camera.useFramingBehavior = true;\r\n                camera.wheelDeltaPercentage = 0.01;\r\n                camera.pinchDeltaPercentage = 0.01;\r\n                camera.alpha = 0;\r\n                camera.beta = 0.8;\r\n\r\n                if (!this._scene.cameraToUseForPointers) {\r\n                    this._scene.cameraToUseForPointers = camera;\r\n                }\r\n\r\n                input.value = camera;\r\n            } else if (input.isObjectList()) {\r\n                input.value = { meshes: this._scene.meshes, particleSystems: this._scene.particleSystems };\r\n            }\r\n        }\r\n\r\n        this._frameCamera();\r\n\r\n        for (let i = 0; i < this._scene.cameras.length; i++) {\r\n            const camera = this._scene.cameras[i] as ArcRotateCamera;\r\n            if (i < cameraInfo.length) {\r\n                camera.alpha = cameraInfo[i].alpha;\r\n                camera.beta = cameraInfo[i].beta;\r\n                camera.radius = cameraInfo[i].radius;\r\n                camera.target = cameraInfo[i].target;\r\n                camera.position = cameraInfo[i].position;\r\n            }\r\n        }\r\n\r\n        // Set a default control in GUI blocks\r\n        const guiBlocks = this._nodeRenderGraph.getBlocksByPredicate<NodeRenderGraphGUIBlock>((block) => block.getClassName() === \"GUI.NodeRenderGraphGUIBlock\");\r\n        let guiIndex = 0;\r\n        guiBlocks.forEach((block, i) => {\r\n            const gui = block.gui;\r\n\r\n            if (!block.isAnAncestorOfType(\"NodeRenderGraphOutputBlock\")) {\r\n                return;\r\n            }\r\n\r\n            const button = Button.CreateSimpleButton(\"but\" + guiIndex, `GUI #${guiIndex++ + 1} button`);\r\n\r\n            const left = i % 4 === 0 || i % 4 === 3;\r\n            const top = i % 4 < 2;\r\n\r\n            button.width = \"30%\";\r\n            button.height = \"10%\";\r\n            button.color = \"white\";\r\n            button.fontSize = 20;\r\n            button.background = \"green\";\r\n            button.horizontalAlignment = left ? Control.HORIZONTAL_ALIGNMENT_LEFT : Control.HORIZONTAL_ALIGNMENT_RIGHT;\r\n            button.verticalAlignment = top ? Control.VERTICAL_ALIGNMENT_TOP : Control.VERTICAL_ALIGNMENT_BOTTOM;\r\n            if (top) {\r\n                button.top = Math.floor(i / 2) * 0.1 * 100 + \"%\";\r\n            } else {\r\n                button.top = -Math.floor((i - 2) / 2) * 0.1 * 100 + \"%\";\r\n            }\r\n\r\n            gui.addControl(button);\r\n        });\r\n\r\n        try {\r\n            this._nodeRenderGraph.build();\r\n            await this._nodeRenderGraph.whenReadyAsync();\r\n            this._scene.frameGraph = this._nodeRenderGraph.frameGraph;\r\n        } catch (err) {\r\n            this._globalState.onLogRequiredObservable.notifyObservers(new LogEntry(\"From preview manager: \" + err, true));\r\n        }\r\n    }\r\n\r\n    private _frameCamera() {\r\n        let alpha = 0;\r\n\r\n        for (const camera of this._scene.cameras) {\r\n            const arcRotateCamera = camera as ArcRotateCamera;\r\n            const framingBehavior = arcRotateCamera.getBehaviorByName(\"Framing\") as FramingBehavior;\r\n\r\n            framingBehavior.framingTime = 0;\r\n            framingBehavior.elevationReturnTime = -1;\r\n\r\n            if (this._scene.meshes.length) {\r\n                const worldExtends = this._scene.getWorldExtends();\r\n                arcRotateCamera.lowerRadiusLimit = null;\r\n                arcRotateCamera.upperRadiusLimit = null;\r\n                framingBehavior.zoomOnBoundingInfo(worldExtends.min, worldExtends.max);\r\n            }\r\n\r\n            arcRotateCamera.pinchPrecision = 200 / arcRotateCamera.radius;\r\n            arcRotateCamera.upperRadiusLimit = 5 * arcRotateCamera.radius;\r\n            arcRotateCamera.alpha = alpha;\r\n\r\n            alpha += Math.PI / 2;\r\n        }\r\n    }\r\n\r\n    private _prepareBackgroundHDR() {\r\n        this._scene.environmentTexture = this._hdrTexture;\r\n    }\r\n\r\n    private _prepareScene() {\r\n        this._globalState.onIsLoadingChanged.notifyObservers(false);\r\n\r\n        this._prepareLights();\r\n\r\n        this._frameCamera();\r\n        this._prepareBackgroundHDR();\r\n    }\r\n\r\n    public static DefaultEnvironmentURL = \"https://assets.babylonjs.com/environments/environmentSpecular.env\";\r\n\r\n    private _refreshPreviewMesh(force?: boolean) {\r\n        switch (this._globalState.envType) {\r\n            case PreviewType.Room:\r\n                this._hdrTexture = new CubeTexture(PreviewManager.DefaultEnvironmentURL, this._scene);\r\n                if (this._hdrTexture) {\r\n                    this._prepareBackgroundHDR();\r\n                }\r\n                break;\r\n            case PreviewType.Custom: {\r\n                const blob = new Blob([this._globalState.envFile], { type: \"octet/stream\" });\r\n                const reader = new FileReader();\r\n                reader.onload = (evt) => {\r\n                    const dataurl = evt.target!.result as string;\r\n                    this._hdrTexture = new CubeTexture(dataurl, this._scene, undefined, false, undefined, undefined, undefined, undefined, undefined, \".env\");\r\n                    this._prepareBackgroundHDR();\r\n                };\r\n                reader.readAsDataURL(blob);\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (this._currentType === this._globalState.previewType && this._currentType !== PreviewType.Custom && !force) {\r\n            return;\r\n        }\r\n\r\n        this._currentType = this._globalState.previewType;\r\n\r\n        SceneLoader.ShowLoadingScreen = false;\r\n\r\n        this._globalState.onIsLoadingChanged.notifyObservers(true);\r\n\r\n        switch (this._globalState.previewType) {\r\n            case PreviewType.Box:\r\n                SceneLoader.LoadAsync(\"https://assets.babylonjs.com/meshes/\", \"roundedCube.glb\").then((scene) => {\r\n                    this._initScene(scene);\r\n                    this._prepareScene();\r\n                });\r\n                return;\r\n            case PreviewType.Sphere:\r\n                SceneLoader.LoadAsync(\"https://assets.babylonjs.com/meshes/\", \"previewSphere.glb\").then((scene) => {\r\n                    this._initScene(scene);\r\n                    this._prepareScene();\r\n                });\r\n                break;\r\n            case PreviewType.Cylinder:\r\n                SceneLoader.LoadAsync(\"https://assets.babylonjs.com/meshes/\", \"roundedCylinder.glb\").then((scene) => {\r\n                    this._initScene(scene);\r\n                    this._prepareScene();\r\n                });\r\n                return;\r\n            case PreviewType.Plane: {\r\n                SceneLoader.LoadAsync(\"https://assets.babylonjs.com/meshes/\", \"highPolyPlane.glb\").then((scene) => {\r\n                    this._initScene(scene);\r\n                    this._prepareScene();\r\n                });\r\n                break;\r\n            }\r\n            case PreviewType.ShaderBall:\r\n                SceneLoader.LoadAsync(\"https://assets.babylonjs.com/meshes/\", \"shaderBall.glb\").then((scene) => {\r\n                    this._initScene(scene);\r\n                    this._prepareScene();\r\n                });\r\n                return;\r\n            case PreviewType.Custom:\r\n                this._globalState.filesInput.loadFiles({ target: { files: this._globalState.listOfCustomPreviewFiles } });\r\n                return;\r\n        }\r\n    }\r\n\r\n    public dispose() {\r\n        this._globalState.onFrame.remove(this._onFrameObserver);\r\n        this._globalState.stateManager.onPreviewCommandActivated.remove(this._onPreviewCommandActivatedObserver);\r\n        this._globalState.stateManager.onUpdateRequiredObservable.remove(this._onUpdateRequiredObserver);\r\n        this._globalState.stateManager.onRebuildRequiredObservable.remove(this._onRebuildRequiredObserver);\r\n        this._globalState.onImportFrameObservable.remove(this._onImportFrameObserver);\r\n        this._globalState.onResetRequiredObservable.remove(this._onResetRequiredObserver);\r\n        this._globalState.onLightUpdated.remove(this._onLightUpdatedObserver);\r\n\r\n        this._nodeRenderGraph?.dispose();\r\n\r\n        this._scene.dispose();\r\n        this._engine.dispose();\r\n    }\r\n}\r\n"]}