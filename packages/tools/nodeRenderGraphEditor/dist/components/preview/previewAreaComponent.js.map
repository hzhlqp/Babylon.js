{"version":3,"file":"previewAreaComponent.js","sourceRoot":"","sources":["../../../src/components/preview/previewAreaComponent.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport type { GlobalState } from \"../../globalState\";\r\nimport { DataStorage } from \"core/Misc/dataStorage\";\r\nimport type { Observer } from \"core/Misc/observable\";\r\nimport type { Nullable } from \"core/types\";\r\n\r\nimport omni from \"./svgs/omni.svg\";\r\nimport directionalRight from \"./svgs/directionalRight.svg\";\r\nimport directionalLeft from \"./svgs/directionalLeft.svg\";\r\n\r\ninterface IPreviewAreaComponentProps {\r\n    globalState: GlobalState;\r\n    width: number;\r\n}\r\n\r\nexport class PreviewAreaComponent extends React.Component<IPreviewAreaComponentProps, { isLoading: boolean }> {\r\n    private _onIsLoadingChangedObserver: Nullable<Observer<boolean>>;\r\n    private _onResetRequiredObserver: Nullable<Observer<boolean>>;\r\n\r\n    constructor(props: IPreviewAreaComponentProps) {\r\n        super(props);\r\n        this.state = { isLoading: true };\r\n\r\n        this._onIsLoadingChangedObserver = this.props.globalState.onIsLoadingChanged.add((state) => this.setState({ isLoading: state }));\r\n\r\n        this._onResetRequiredObserver = this.props.globalState.onResetRequiredObservable.add(() => {\r\n            this.forceUpdate();\r\n        });\r\n    }\r\n\r\n    override componentWillUnmount() {\r\n        this.props.globalState.onIsLoadingChanged.remove(this._onIsLoadingChangedObserver);\r\n        this.props.globalState.onResetRequiredObservable.remove(this._onResetRequiredObserver);\r\n    }\r\n\r\n    _onPointerOverCanvas = () => {\r\n        this.props.globalState.pointerOverCanvas = true;\r\n    };\r\n\r\n    _onPointerOutCanvas = () => {\r\n        this.props.globalState.pointerOverCanvas = false;\r\n    };\r\n\r\n    override render() {\r\n        return (\r\n            <>\r\n                <div id=\"preview\" style={{ height: this.props.width + \"px\" }}>\r\n                    <canvas onPointerOver={this._onPointerOverCanvas} onPointerOut={this._onPointerOutCanvas} id=\"preview-canvas\" />\r\n                    {<div className={\"waitPanel\" + (this.state.isLoading ? \"\" : \" hidden\")}>Please wait, loading...</div>}\r\n                </div>\r\n                <>\r\n                    <div id=\"preview-config-bar\">\r\n                        <>\r\n                            <div id=\"preview-config-bar\">\r\n                                <div\r\n                                    title=\"Turn on/off hemispheric light\"\r\n                                    onClick={() => {\r\n                                        this.props.globalState.hemisphericLight = !this.props.globalState.hemisphericLight;\r\n                                        DataStorage.WriteBoolean(\"HemisphericLight\", this.props.globalState.hemisphericLight);\r\n                                        this.props.globalState.onLightUpdated.notifyObservers();\r\n                                        this.forceUpdate();\r\n                                    }}\r\n                                    className={\"button hemispheric-light\" + (this.props.globalState.hemisphericLight ? \" selected\" : \"\")}\r\n                                >\r\n                                    <img src={omni} alt=\"\" />\r\n                                </div>\r\n                                <div\r\n                                    title=\"Turn on/off direction light #1\"\r\n                                    onClick={() => {\r\n                                        this.props.globalState.directionalLight1 = !this.props.globalState.directionalLight1;\r\n                                        DataStorage.WriteBoolean(\"DirectionalLight1\", this.props.globalState.directionalLight1);\r\n                                        this.props.globalState.onLightUpdated.notifyObservers();\r\n                                        this.forceUpdate();\r\n                                    }}\r\n                                    className={\"button direction-light-1\" + (this.props.globalState.directionalLight1 ? \" selected\" : \"\")}\r\n                                >\r\n                                    <img src={directionalRight} alt=\"\" />\r\n                                </div>\r\n                                <div\r\n                                    title=\"Turn on/off direction light #0\"\r\n                                    onClick={() => {\r\n                                        this.props.globalState.directionalLight0 = !this.props.globalState.directionalLight0;\r\n                                        DataStorage.WriteBoolean(\"DirectionalLight0\", this.props.globalState.directionalLight0);\r\n                                        this.props.globalState.onLightUpdated.notifyObservers();\r\n                                        this.forceUpdate();\r\n                                    }}\r\n                                    className={\"button direction-light-0\" + (this.props.globalState.directionalLight0 ? \" selected\" : \"\")}\r\n                                >\r\n                                    <img src={directionalLeft} alt=\"\" />\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    </div>\r\n                </>\r\n            </>\r\n        );\r\n    }\r\n}\r\n"]}