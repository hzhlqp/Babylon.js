{"version":3,"file":"graphEditor.js","sourceRoot":"","sources":["../src/graphEditor.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport type { GlobalState } from \"./globalState\";\r\n\r\nimport { NodeListComponent } from \"./components/nodeList/nodeListComponent\";\r\nimport { PropertyTabComponent } from \"./components/propertyTab/propertyTabComponent\";\r\nimport { Portal } from \"./portal\";\r\nimport { LogComponent, LogEntry } from \"./components/log/logComponent\";\r\nimport { DataStorage } from \"core/Misc/dataStorage\";\r\nimport type { Nullable } from \"core/types\";\r\nimport { MessageDialog } from \"shared-ui-components/components/MessageDialog\";\r\nimport { BlockTools } from \"./blockTools\";\r\nimport { PreviewManager } from \"./components/preview/previewManager\";\r\nimport { PreviewMeshControlComponent } from \"./components/preview/previewMeshControlComponent\";\r\nimport { PreviewAreaComponent } from \"./components/preview/previewAreaComponent\";\r\nimport { SerializationTools } from \"./serializationTools\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport type { IInspectorOptions } from \"core/Debug/debugLayer\";\r\nimport { Popup } from \"./sharedComponents/popup\";\r\n\r\nimport \"./main.scss\";\r\nimport { GraphCanvasComponent } from \"shared-ui-components/nodeGraphSystem/graphCanvas\";\r\nimport type { GraphNode } from \"shared-ui-components/nodeGraphSystem/graphNode\";\r\nimport { TypeLedger } from \"shared-ui-components/nodeGraphSystem/typeLedger\";\r\nimport type { IEditorData } from \"shared-ui-components/nodeGraphSystem/interfaces/nodeLocationInfo\";\r\nimport type { INodeData } from \"shared-ui-components/nodeGraphSystem/interfaces/nodeData\";\r\nimport { NodeGeometryBlock } from \"core/Meshes/Node/nodeGeometryBlock\";\r\nimport { GeometryOutputBlock } from \"core/Meshes/Node/Blocks/geometryOutputBlock\";\r\nimport type { NodeGeometryBlockConnectionPointTypes } from \"core/Meshes/Node/Enums/nodeGeometryConnectionPointTypes\";\r\nimport { GeometryInputBlock } from \"core/Meshes/Node/Blocks/geometryInputBlock\";\r\nimport { HistoryStack } from \"shared-ui-components/historyStack\";\r\n\r\ninterface IGraphEditorProps {\r\n    globalState: GlobalState;\r\n}\r\n\r\ninterface IGraphEditorState {\r\n    showPreviewPopUp: boolean;\r\n    message: string;\r\n    isError: boolean;\r\n}\r\n\r\ninterface IInternalPreviewAreaOptions extends IInspectorOptions {\r\n    popup: boolean;\r\n    original: boolean;\r\n    explorerWidth?: string;\r\n    inspectorWidth?: string;\r\n    embedHostWidth?: string;\r\n}\r\n\r\nexport class GraphEditor extends React.Component<IGraphEditorProps, IGraphEditorState> {\r\n    private _graphCanvasRef: React.RefObject<GraphCanvasComponent>;\r\n    private _diagramContainerRef: React.RefObject<HTMLDivElement>;\r\n    private _graphCanvas: GraphCanvasComponent;\r\n    private _diagramContainer: HTMLDivElement;\r\n\r\n    private _historyStack: HistoryStack;\r\n\r\n    private _startX: number;\r\n    private _moveInProgress: boolean;\r\n\r\n    private _leftWidth = DataStorage.ReadNumber(\"LeftWidth\", 200);\r\n    private _rightWidth = DataStorage.ReadNumber(\"RightWidth\", 300);\r\n\r\n    private _previewManager: PreviewManager;\r\n    private _mouseLocationX = 0;\r\n    private _mouseLocationY = 0;\r\n    private _onWidgetKeyUpPointer: any;\r\n\r\n    private _previewHost: Nullable<HTMLElement>;\r\n    private _popUpWindow: Window;\r\n\r\n    appendBlock(dataToAppend: NodeGeometryBlock | INodeData, recursion = true) {\r\n        return this._graphCanvas.createNodeFromObject(\r\n            dataToAppend instanceof NodeGeometryBlock ? TypeLedger.NodeDataBuilder(dataToAppend, this._graphCanvas) : dataToAppend,\r\n            (block: NodeGeometryBlock) => {\r\n                if (this.props.globalState.nodeGeometry!.attachedBlocks.indexOf(block) === -1) {\r\n                    this.props.globalState.nodeGeometry!.attachedBlocks.push(block);\r\n                }\r\n\r\n                if (block instanceof GeometryOutputBlock) {\r\n                    this.props.globalState.nodeGeometry.outputBlock = block;\r\n                }\r\n            },\r\n            recursion\r\n        );\r\n    }\r\n\r\n    addValueNode(type: string) {\r\n        const nodeType: NodeGeometryBlockConnectionPointTypes = BlockTools.GetConnectionNodeTypeFromString(type);\r\n\r\n        const newInputBlock = new GeometryInputBlock(type, nodeType);\r\n        return this.appendBlock(newInputBlock);\r\n    }\r\n\r\n    prepareHistoryStack() {\r\n        const geometry = this.props.globalState.nodeGeometry;\r\n        const globalState = this.props.globalState;\r\n\r\n        const dataProvider = () => {\r\n            SerializationTools.UpdateLocations(geometry, globalState);\r\n            return geometry.serialize();\r\n        };\r\n\r\n        const applyUpdate = (data: any) => {\r\n            globalState.stateManager.onSelectionChangedObservable.notifyObservers(null);\r\n            geometry.parseSerializedObject(data);\r\n\r\n            globalState.onResetRequiredObservable.notifyObservers(false);\r\n        };\r\n\r\n        // Create the stack\r\n        this._historyStack = new HistoryStack(dataProvider, applyUpdate);\r\n        this._historyStack.isEnabled = DataStorage.ReadBoolean(\"UndoRedo\", true);\r\n        globalState.stateManager.historyStack = this._historyStack;\r\n\r\n        // Connect to relevant events\r\n        globalState.stateManager.onUpdateRequiredObservable.add(() => {\r\n            this._historyStack.store();\r\n        });\r\n        globalState.stateManager.onRebuildRequiredObservable.add(() => {\r\n            this._historyStack.store();\r\n        });\r\n        globalState.stateManager.onNodeMovedObservable.add(() => {\r\n            this._historyStack.store();\r\n        });\r\n        globalState.stateManager.onNewNodeCreatedObservable.add(() => {\r\n            this._historyStack.store();\r\n        });\r\n        globalState.onClearUndoStack.add(() => {\r\n            this._historyStack.reset();\r\n        });\r\n    }\r\n\r\n    override componentDidMount() {\r\n        window.addEventListener(\"wheel\", this.onWheel, { passive: false });\r\n\r\n        if (this.props.globalState.hostDocument) {\r\n            this._graphCanvas = this._graphCanvasRef.current!;\r\n            this._diagramContainer = this._diagramContainerRef.current!;\r\n            this.prepareHistoryStack();\r\n            this._previewManager = new PreviewManager(this.props.globalState.hostDocument.getElementById(\"preview-canvas\") as HTMLCanvasElement, this.props.globalState);\r\n            (this.props.globalState as any)._previewManager = this._previewManager;\r\n        }\r\n\r\n        if (navigator.userAgent.indexOf(\"Mobile\") !== -1) {\r\n            ((this.props.globalState.hostDocument || document).querySelector(\".blocker\") as HTMLElement).style.visibility = \"visible\";\r\n        }\r\n\r\n        this.props.globalState.onPopupClosedObservable.addOnce(() => {\r\n            this.componentWillUnmount();\r\n        });\r\n\r\n        this.build();\r\n        this.props.globalState.onClearUndoStack.notifyObservers();\r\n    }\r\n\r\n    override componentWillUnmount() {\r\n        window.removeEventListener(\"wheel\", this.onWheel);\r\n\r\n        if (this.props.globalState.hostDocument) {\r\n            this.props.globalState.hostDocument!.removeEventListener(\"keyup\", this._onWidgetKeyUpPointer, false);\r\n        }\r\n\r\n        if (this._historyStack) {\r\n            this._historyStack.dispose();\r\n            this._historyStack = null as any;\r\n        }\r\n\r\n        if (this._previewManager) {\r\n            this._previewManager.dispose();\r\n            this._previewManager = null as any;\r\n        }\r\n    }\r\n\r\n    constructor(props: IGraphEditorProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showPreviewPopUp: false,\r\n            message: \"\",\r\n            isError: true,\r\n        };\r\n\r\n        this._graphCanvasRef = React.createRef();\r\n        this._diagramContainerRef = React.createRef();\r\n\r\n        this.props.globalState.stateManager.onNewBlockRequiredObservable.add((eventData) => {\r\n            let targetX = eventData.targetX;\r\n            let targetY = eventData.targetY;\r\n\r\n            if (eventData.needRepositioning) {\r\n                targetX = targetX - this._diagramContainer.offsetLeft;\r\n                targetY = targetY - this._diagramContainer.offsetTop;\r\n            }\r\n\r\n            const selectedLink = this._graphCanvas.selectedLink;\r\n            const selectedNode = this._graphCanvas.selectedNodes.length ? this._graphCanvas.selectedNodes[0] : null;\r\n            const newNode = this.emitNewBlock(eventData.type, targetX, targetY);\r\n\r\n            if (newNode && eventData.smartAdd) {\r\n                if (selectedLink) {\r\n                    this._graphCanvas.smartAddOverLink(newNode, selectedLink);\r\n                } else if (selectedNode) {\r\n                    this._graphCanvas.smartAddOverNode(newNode, selectedNode);\r\n                }\r\n            }\r\n        });\r\n\r\n        this.props.globalState.stateManager.onRebuildRequiredObservable.add(() => {\r\n            if (this.props.globalState.nodeGeometry) {\r\n                this.buildGeometry();\r\n            }\r\n        });\r\n\r\n        this.props.globalState.onResetRequiredObservable.add((isDefault) => {\r\n            if (isDefault) {\r\n                if (this.props.globalState.nodeGeometry) {\r\n                    this.buildGeometry();\r\n                }\r\n                this.build(true);\r\n            } else {\r\n                this.build();\r\n                if (this.props.globalState.nodeGeometry) {\r\n                    this.buildGeometry();\r\n                }\r\n            }\r\n        });\r\n\r\n        this.props.globalState.onImportFrameObservable.add((source: any) => {\r\n            const frameData = source.editorData.frames[0];\r\n\r\n            // create new graph nodes for only blocks from frame (last blocks added)\r\n            this.props.globalState.nodeGeometry.attachedBlocks.slice(-frameData.blocks.length).forEach((block: NodeGeometryBlock) => {\r\n                this.appendBlock(block);\r\n            });\r\n            this._graphCanvas.addFrame(frameData);\r\n            this.reOrganize(this.props.globalState.nodeGeometry.editorData, true);\r\n        });\r\n\r\n        this.props.globalState.onZoomToFitRequiredObservable.add(() => {\r\n            this.zoomToFit();\r\n        });\r\n\r\n        this.props.globalState.onReOrganizedRequiredObservable.add(() => {\r\n            this.reOrganize();\r\n        });\r\n\r\n        this.props.globalState.onGetNodeFromBlock = (block) => {\r\n            return this._graphCanvas.findNodeFromData(block);\r\n        };\r\n\r\n        this.props.globalState.hostDocument!.addEventListener(\"keydown\", (evt) => {\r\n            if (this._historyStack.processKeyEvent(evt)) {\r\n                return;\r\n            }\r\n\r\n            this._graphCanvas.handleKeyDown(\r\n                evt,\r\n                (nodeData) => {\r\n                    this.props.globalState.nodeGeometry!.removeBlock(nodeData.data as NodeGeometryBlock);\r\n                },\r\n                this._mouseLocationX,\r\n                this._mouseLocationY,\r\n                (nodeData) => {\r\n                    const block = nodeData.data as NodeGeometryBlock;\r\n                    const clone = block.clone();\r\n\r\n                    if (!clone) {\r\n                        return null;\r\n                    }\r\n\r\n                    return this.appendBlock(clone, false);\r\n                },\r\n                this.props.globalState.hostDocument!.querySelector(\".diagram-container\") as HTMLDivElement\r\n            );\r\n        });\r\n\r\n        this.props.globalState.stateManager.onErrorMessageDialogRequiredObservable.add((message: string) => {\r\n            this.setState({ message: message, isError: true });\r\n        });\r\n    }\r\n\r\n    zoomToFit() {\r\n        this._graphCanvas.zoomToFit();\r\n    }\r\n\r\n    buildGeometry() {\r\n        if (!this.props.globalState.nodeGeometry) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            this.props.globalState.nodeGeometry.build(true, undefined);\r\n            this.props.globalState.onLogRequiredObservable.notifyObservers(new LogEntry(\"Node geometry build successful\", false));\r\n        } catch (err) {\r\n            this.props.globalState.onLogRequiredObservable.notifyObservers(new LogEntry(err, true));\r\n        }\r\n\r\n        SerializationTools.UpdateLocations(this.props.globalState.nodeGeometry, this.props.globalState);\r\n\r\n        this.props.globalState.onBuiltObservable.notifyObservers();\r\n    }\r\n\r\n    build(ignoreEditorData = false) {\r\n        let editorData = ignoreEditorData ? null : this.props.globalState.nodeGeometry.editorData;\r\n        this._graphCanvas._isLoading = true; // Will help loading large graphes\r\n\r\n        if (editorData instanceof Array) {\r\n            editorData = {\r\n                locations: editorData,\r\n            };\r\n        }\r\n\r\n        // setup the diagram model\r\n        this._graphCanvas.reset();\r\n\r\n        // Load graph of nodes from the geometry\r\n        if (this.props.globalState.nodeGeometry) {\r\n            this.loadGraph();\r\n        }\r\n\r\n        this.reOrganize(editorData);\r\n    }\r\n\r\n    loadGraph() {\r\n        const geometry = this.props.globalState.nodeGeometry;\r\n        if (geometry.outputBlock) {\r\n            this.appendBlock(geometry.outputBlock, true);\r\n        }\r\n\r\n        geometry.attachedBlocks.forEach((n: any) => {\r\n            this.appendBlock(n, true);\r\n        });\r\n\r\n        // Links\r\n        geometry.attachedBlocks.forEach((n: any) => {\r\n            if (n.inputs.length) {\r\n                const nodeData = this._graphCanvas.findNodeFromData(n);\r\n                for (const input of nodeData.content.inputs) {\r\n                    if (input.isConnected) {\r\n                        this._graphCanvas.connectPorts(input.connectedPort!, input);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    showWaitScreen() {\r\n        this.props.globalState.hostDocument.querySelector(\".wait-screen\")?.classList.remove(\"hidden\");\r\n    }\r\n\r\n    hideWaitScreen() {\r\n        this.props.globalState.hostDocument.querySelector(\".wait-screen\")?.classList.add(\"hidden\");\r\n    }\r\n\r\n    reOrganize(editorData: Nullable<IEditorData> = null, isImportingAFrame = false) {\r\n        this.showWaitScreen();\r\n        this._graphCanvas._isLoading = true; // Will help loading large graphes\r\n\r\n        this._graphCanvas.reOrganize(editorData, isImportingAFrame);\r\n        this.hideWaitScreen();\r\n    }\r\n\r\n    onPointerDown(evt: React.PointerEvent<HTMLDivElement>) {\r\n        this._startX = evt.clientX;\r\n        this._moveInProgress = true;\r\n        evt.currentTarget.setPointerCapture(evt.pointerId);\r\n    }\r\n\r\n    onPointerUp(evt: React.PointerEvent<HTMLDivElement>) {\r\n        this._moveInProgress = false;\r\n        evt.currentTarget.releasePointerCapture(evt.pointerId);\r\n    }\r\n\r\n    onWheel = (evt: WheelEvent) => {\r\n        if (this.props.globalState.pointerOverCanvas) {\r\n            return evt.preventDefault();\r\n        }\r\n\r\n        if (evt.ctrlKey) {\r\n            return evt.preventDefault();\r\n        }\r\n\r\n        if (Math.abs(evt.deltaX) < Math.abs(evt.deltaY)) {\r\n            return;\r\n        }\r\n\r\n        const targetElem = evt.currentTarget as HTMLElement;\r\n        const scrollLeftMax = targetElem.scrollWidth - targetElem.offsetWidth;\r\n        if (targetElem.scrollLeft + evt.deltaX < 0 || targetElem.scrollLeft + evt.deltaX > scrollLeftMax) {\r\n            return evt.preventDefault();\r\n        }\r\n    };\r\n\r\n    resizeColumns(evt: React.PointerEvent<HTMLDivElement>, forLeft = true) {\r\n        if (!this._moveInProgress) {\r\n            return;\r\n        }\r\n\r\n        const deltaX = evt.clientX - this._startX;\r\n        const rootElement = evt.currentTarget.ownerDocument!.getElementById(\"node-geometry-editor-graph-root\") as HTMLDivElement;\r\n\r\n        if (forLeft) {\r\n            this._leftWidth += deltaX;\r\n            this._leftWidth = Math.max(150, Math.min(400, this._leftWidth));\r\n            DataStorage.WriteNumber(\"LeftWidth\", this._leftWidth);\r\n        } else {\r\n            this._rightWidth -= deltaX;\r\n            this._rightWidth = Math.max(250, Math.min(500, this._rightWidth));\r\n            DataStorage.WriteNumber(\"RightWidth\", this._rightWidth);\r\n            rootElement.ownerDocument!.getElementById(\"preview\")!.style.height = this._rightWidth + \"px\";\r\n        }\r\n\r\n        rootElement.style.gridTemplateColumns = this.buildColumnLayout();\r\n\r\n        this._startX = evt.clientX;\r\n    }\r\n\r\n    buildColumnLayout() {\r\n        return `${this._leftWidth}px 4px calc(100% - ${this._leftWidth + 8 + this._rightWidth}px) 4px ${this._rightWidth}px`;\r\n    }\r\n\r\n    emitNewBlock(blockType: string, targetX: number, targetY: number) {\r\n        let newNode: GraphNode;\r\n\r\n        let customBlockData: any;\r\n\r\n        // Dropped something that is not a node\r\n        if (blockType === \"\") {\r\n            return;\r\n        }\r\n        if (blockType.indexOf(\"CustomBlock\") > -1) {\r\n            const storageData = localStorage.getItem(blockType);\r\n            if (!storageData) {\r\n                this.props.globalState.stateManager.onErrorMessageDialogRequiredObservable.notifyObservers(`Error loading custom block`);\r\n                return;\r\n            }\r\n\r\n            customBlockData = JSON.parse(storageData);\r\n            if (!customBlockData) {\r\n                this.props.globalState.stateManager.onErrorMessageDialogRequiredObservable.notifyObservers(`Error parsing custom block`);\r\n                return;\r\n            }\r\n        } else if (blockType.indexOf(\"Custom\") > -1) {\r\n            const storageData = localStorage.getItem(blockType);\r\n            if (storageData) {\r\n                const frameData = JSON.parse(storageData);\r\n\r\n                //edit position before loading.\r\n                const newX = (targetX - this._graphCanvas.x - GraphCanvasComponent.NodeWidth) / this._graphCanvas.zoom;\r\n                const newY = (targetY - this._graphCanvas.y - 20) / this._graphCanvas.zoom;\r\n                const oldX = frameData.editorData.frames[0].x;\r\n                const oldY = frameData.editorData.frames[0].y;\r\n                frameData.editorData.frames[0].x = newX;\r\n                frameData.editorData.frames[0].y = newY;\r\n                for (const location of frameData.editorData.locations) {\r\n                    location.x += newX - oldX;\r\n                    location.y += newY - oldY;\r\n                }\r\n\r\n                SerializationTools.AddFrameToGeometry(frameData, this.props.globalState, this.props.globalState.nodeGeometry);\r\n                this._graphCanvas.frames[this._graphCanvas.frames.length - 1].cleanAccumulation();\r\n                this.forceUpdate();\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (blockType.indexOf(\"Block\") === -1) {\r\n            newNode = this.addValueNode(blockType);\r\n        } else {\r\n            const block = BlockTools.GetBlockFromString(blockType)!;\r\n\r\n            if (block.isUnique) {\r\n                const className = block.getClassName();\r\n                for (const other of this._graphCanvas.getCachedData()) {\r\n                    if (other !== block && other.getClassName() === className) {\r\n                        this.props.globalState.stateManager.onErrorMessageDialogRequiredObservable.notifyObservers(`You can only have one ${className} per graph`);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n\r\n            block.autoConfigure();\r\n            newNode = this.appendBlock(block);\r\n            newNode.addClassToVisual(block.getClassName());\r\n        }\r\n\r\n        // Size exceptions\r\n        let offsetX = GraphCanvasComponent.NodeWidth;\r\n        let offsetY = 20;\r\n\r\n        if (blockType === \"ElbowBlock\" || blockType === \"DebugBlock\") {\r\n            offsetX = 10;\r\n            offsetY = 10;\r\n        }\r\n\r\n        // Drop\r\n        this._graphCanvas.drop(newNode, targetX, targetY, offsetX, offsetY);\r\n\r\n        this.forceUpdate();\r\n\r\n        return newNode;\r\n    }\r\n\r\n    dropNewBlock(event: React.DragEvent<HTMLDivElement>) {\r\n        const data = event.dataTransfer.getData(\"babylonjs-geometry-node\") as string;\r\n\r\n        this.emitNewBlock(data, event.clientX - this._diagramContainer.offsetLeft, event.clientY - this._diagramContainer.offsetTop);\r\n    }\r\n\r\n    handlePopUp = () => {\r\n        this.setState({\r\n            showPreviewPopUp: true,\r\n        });\r\n        this.createPopUp();\r\n        this.props.globalState.hostWindow.addEventListener(\"beforeunload\", this.handleClosingPopUp);\r\n    };\r\n\r\n    handleClosingPopUp = () => {\r\n        if (this._previewManager) {\r\n            this._previewManager.dispose();\r\n        }\r\n        this._popUpWindow.close();\r\n        this.setState(\r\n            {\r\n                showPreviewPopUp: false,\r\n            },\r\n            () => this.initiatePreviewArea()\r\n        );\r\n    };\r\n\r\n    initiatePreviewArea = (canvas: HTMLCanvasElement = this.props.globalState.hostDocument.getElementById(\"preview-canvas\") as HTMLCanvasElement) => {\r\n        this._previewManager = new PreviewManager(canvas, this.props.globalState);\r\n    };\r\n\r\n    createPopUp = () => {\r\n        const userOptions = {\r\n            original: true,\r\n            popup: true,\r\n            overlay: false,\r\n            embedMode: false,\r\n            enableClose: true,\r\n            handleResize: true,\r\n            enablePopup: true,\r\n        };\r\n        const options = {\r\n            embedHostWidth: \"100%\",\r\n            ...userOptions,\r\n        };\r\n        const popUpWindow = this.createPopupWindow(\"PREVIEW AREA\", \"_PreviewHostWindow\");\r\n        if (popUpWindow) {\r\n            popUpWindow.addEventListener(\"beforeunload\", this.handleClosingPopUp);\r\n            const parentControl = popUpWindow.document.getElementById(\"node-geometry-editor-graph-root\");\r\n            this.createPreviewMeshControlHost(options, parentControl);\r\n            this.createPreviewHost(options, parentControl);\r\n            if (parentControl) {\r\n                this.fixPopUpStyles(parentControl.ownerDocument!);\r\n                this.initiatePreviewArea(parentControl.ownerDocument!.getElementById(\"preview-canvas\") as HTMLCanvasElement);\r\n            }\r\n        }\r\n    };\r\n\r\n    createPopupWindow = (title: string, windowVariableName: string, width = 500, height = 500): Window | null => {\r\n        const windowCreationOptionsList = {\r\n            width: width,\r\n            height: height,\r\n            top: (this.props.globalState.hostWindow.innerHeight - width) / 2 + window.screenY,\r\n            left: (this.props.globalState.hostWindow.innerWidth - height) / 2 + window.screenX,\r\n        };\r\n\r\n        const windowCreationOptions = Object.keys(windowCreationOptionsList)\r\n            .map((key) => key + \"=\" + (windowCreationOptionsList as any)[key])\r\n            .join(\",\");\r\n\r\n        const popupWindow = this.props.globalState.hostWindow.open(\"\", title, windowCreationOptions);\r\n        if (!popupWindow) {\r\n            return null;\r\n        }\r\n\r\n        const parentDocument = popupWindow.document;\r\n\r\n        parentDocument.title = title;\r\n        parentDocument.body.style.width = \"100%\";\r\n        parentDocument.body.style.height = \"100%\";\r\n        parentDocument.body.style.margin = \"0\";\r\n        parentDocument.body.style.padding = \"0\";\r\n\r\n        const parentControl = parentDocument.createElement(\"div\");\r\n        parentControl.style.width = \"100%\";\r\n        parentControl.style.height = \"100%\";\r\n        parentControl.style.margin = \"0\";\r\n        parentControl.style.padding = \"0\";\r\n        parentControl.style.display = \"grid\";\r\n        parentControl.style.gridTemplateRows = \"40px auto\";\r\n        parentControl.id = \"node-geometry-editor-graph-root\";\r\n        parentControl.className = \"nge-right-panel popup\";\r\n\r\n        popupWindow.document.body.appendChild(parentControl);\r\n\r\n        Popup._CopyStyles(this.props.globalState.hostWindow.document, parentDocument);\r\n\r\n        (this as any)[windowVariableName] = popupWindow;\r\n\r\n        this._popUpWindow = popupWindow;\r\n\r\n        return popupWindow;\r\n    };\r\n\r\n    createPreviewMeshControlHost = (options: IInternalPreviewAreaOptions, parentControl: Nullable<HTMLElement>) => {\r\n        // Prepare the preview control host\r\n        if (parentControl) {\r\n            const host = parentControl.ownerDocument!.createElement(\"div\");\r\n\r\n            host.id = \"PreviewMeshControl-host\";\r\n            host.style.width = options.embedHostWidth || \"auto\";\r\n\r\n            parentControl.appendChild(host);\r\n            const previewMeshControlComponentHost = React.createElement(PreviewMeshControlComponent, {\r\n                globalState: this.props.globalState,\r\n                togglePreviewAreaComponent: this.handlePopUp,\r\n            });\r\n            ReactDOM.render(previewMeshControlComponentHost, host);\r\n        }\r\n    };\r\n\r\n    createPreviewHost = (options: IInternalPreviewAreaOptions, parentControl: Nullable<HTMLElement>) => {\r\n        // Prepare the preview host\r\n        if (parentControl) {\r\n            const host = parentControl.ownerDocument!.createElement(\"div\");\r\n\r\n            host.id = \"PreviewAreaComponent-host\";\r\n            host.style.width = options.embedHostWidth || \"auto\";\r\n            host.style.height = \"100%\";\r\n            host.style.overflow = \"hidden\";\r\n            host.style.display = \"grid\";\r\n            host.style.gridRow = \"2\";\r\n            host.style.gridTemplateRows = \"auto 40px\";\r\n            host.style.gridTemplateRows = \"calc(100% - 40px) 40px\";\r\n\r\n            parentControl.appendChild(host);\r\n\r\n            this._previewHost = host;\r\n\r\n            if (!options.overlay) {\r\n                this._previewHost.style.position = \"relative\";\r\n            }\r\n        }\r\n\r\n        if (this._previewHost) {\r\n            const previewAreaComponentHost = React.createElement(PreviewAreaComponent, {\r\n                globalState: this.props.globalState,\r\n                width: 200,\r\n            });\r\n            ReactDOM.render(previewAreaComponentHost, this._previewHost);\r\n        }\r\n    };\r\n\r\n    fixPopUpStyles = (document: Document) => {\r\n        const previewContainer = document.getElementById(\"preview\");\r\n        if (previewContainer) {\r\n            previewContainer.style.height = \"auto\";\r\n            previewContainer.style.gridRow = \"1\";\r\n        }\r\n        const previewConfigBar = document.getElementById(\"preview-config-bar\");\r\n        if (previewConfigBar) {\r\n            previewConfigBar.style.gridRow = \"2\";\r\n        }\r\n        const newWindowButton = document.getElementById(\"preview-new-window\");\r\n        if (newWindowButton) {\r\n            newWindowButton.style.display = \"none\";\r\n        }\r\n        const previewMeshBar = document.getElementById(\"preview-mesh-bar\");\r\n        if (previewMeshBar) {\r\n            previewMeshBar.style.gridTemplateColumns = \"auto 1fr 40px 40px\";\r\n        }\r\n    };\r\n\r\n    override render() {\r\n        return (\r\n            <Portal globalState={this.props.globalState}>\r\n                <div\r\n                    id=\"node-geometry-editor-graph-root\"\r\n                    style={{\r\n                        gridTemplateColumns: this.buildColumnLayout(),\r\n                    }}\r\n                    onMouseMove={(evt) => {\r\n                        this._mouseLocationX = evt.pageX;\r\n                        this._mouseLocationY = evt.pageY;\r\n                    }}\r\n                    onMouseDown={(evt) => {\r\n                        if ((evt.target as HTMLElement).nodeName === \"INPUT\") {\r\n                            return;\r\n                        }\r\n                        this.props.globalState.lockObject.lock = false;\r\n                    }}\r\n                >\r\n                    {/* Node creation menu */}\r\n                    <NodeListComponent globalState={this.props.globalState} />\r\n\r\n                    <div\r\n                        id=\"leftGrab\"\r\n                        onPointerDown={(evt) => this.onPointerDown(evt)}\r\n                        onPointerUp={(evt) => this.onPointerUp(evt)}\r\n                        onPointerMove={(evt) => this.resizeColumns(evt)}\r\n                    ></div>\r\n\r\n                    {/* The node graph diagram */}\r\n                    <div\r\n                        className=\"diagram-container\"\r\n                        ref={this._diagramContainerRef}\r\n                        onDrop={(event) => {\r\n                            this.dropNewBlock(event);\r\n                        }}\r\n                        onDragOver={(event) => {\r\n                            event.preventDefault();\r\n                        }}\r\n                    >\r\n                        <GraphCanvasComponent\r\n                            ref={this._graphCanvasRef}\r\n                            stateManager={this.props.globalState.stateManager}\r\n                            onEmitNewNode={(nodeData) => {\r\n                                return this.appendBlock(nodeData.data as NodeGeometryBlock);\r\n                            }}\r\n                        />\r\n                    </div>\r\n\r\n                    <div\r\n                        id=\"rightGrab\"\r\n                        onPointerDown={(evt) => this.onPointerDown(evt)}\r\n                        onPointerUp={(evt) => this.onPointerUp(evt)}\r\n                        onPointerMove={(evt) => this.resizeColumns(evt, false)}\r\n                    ></div>\r\n\r\n                    {/* Property tab */}\r\n                    <div className=\"nge-right-panel\">\r\n                        <PropertyTabComponent lockObject={this.props.globalState.lockObject} globalState={this.props.globalState} />\r\n                        {!this.state.showPreviewPopUp ? <PreviewMeshControlComponent globalState={this.props.globalState} togglePreviewAreaComponent={this.handlePopUp} /> : null}\r\n                        {!this.state.showPreviewPopUp ? <PreviewAreaComponent globalState={this.props.globalState} width={this._rightWidth} /> : null}\r\n                    </div>\r\n\r\n                    <LogComponent globalState={this.props.globalState} />\r\n                </div>\r\n                <MessageDialog message={this.state.message} isError={this.state.isError} onClose={() => this.setState({ message: \"\" })} />\r\n                <div className=\"blocker\">Node Geometry Editor runs only on desktop</div>\r\n                <div className=\"wait-screen hidden\">Processing...please wait</div>\r\n            </Portal>\r\n        );\r\n    }\r\n}\r\n"]}