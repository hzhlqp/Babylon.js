{"version":3,"file":"registerToDisplayLedger.js","sourceRoot":"","sources":["../../src/graphSystem/registerToDisplayLedger.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,mBAAmB,EAAE,MAAM,+BAA+B,CAAC;AACpE,OAAO,EAAE,oBAAoB,EAAE,MAAM,gCAAgC,CAAC;AACtE,OAAO,EAAE,mBAAmB,EAAE,MAAM,+BAA+B,CAAC;AACpE,OAAO,EAAE,aAAa,EAAE,MAAM,oDAAoD,CAAC;AACnF,OAAO,EAAE,oBAAoB,EAAE,MAAM,gCAAgC,CAAC;AACtE,OAAO,EAAE,mBAAmB,EAAE,MAAM,+BAA+B,CAAC;AACpE,OAAO,EAAE,wBAAwB,EAAE,MAAM,oCAAoC,CAAC;AAC9E,OAAO,EAAE,yBAAyB,EAAE,MAAM,qCAAqC,CAAC;AAChF,OAAO,EAAE,qBAAqB,EAAE,MAAM,iCAAiC,CAAC;AAExE,MAAM,CAAC,MAAM,yBAAyB,GAAG,GAAG,EAAE;IAC1C,aAAa,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,GAAG,mBAAmB,CAAC;IAC7E,aAAa,CAAC,kBAAkB,CAAC,qBAAqB,CAAC,GAAG,oBAAoB,CAAC;IAC/E,aAAa,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,GAAG,mBAAmB,CAAC;IAC7E,aAAa,CAAC,kBAAkB,CAAC,YAAY,CAAC,GAAG,mBAAmB,CAAC;IACrE,aAAa,CAAC,kBAAkB,CAAC,UAAU,CAAC,GAAG,oBAAoB,CAAC;IACpE,aAAa,CAAC,kBAAkB,CAAC,YAAY,CAAC,GAAG,oBAAoB,CAAC;IACtE,aAAa,CAAC,kBAAkB,CAAC,aAAa,CAAC,GAAG,oBAAoB,CAAC;IACvE,aAAa,CAAC,kBAAkB,CAAC,cAAc,CAAC,GAAG,oBAAoB,CAAC;IACxE,aAAa,CAAC,kBAAkB,CAAC,YAAY,CAAC,GAAG,oBAAoB,CAAC;IACtE,aAAa,CAAC,kBAAkB,CAAC,WAAW,CAAC,GAAG,oBAAoB,CAAC;IACrE,aAAa,CAAC,kBAAkB,CAAC,eAAe,CAAC,GAAG,oBAAoB,CAAC;IACzE,aAAa,CAAC,kBAAkB,CAAC,WAAW,CAAC,GAAG,oBAAoB,CAAC;IACrE,aAAa,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,GAAG,oBAAoB,CAAC;IAC1E,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,GAAG,wBAAwB,CAAC;IAC/E,aAAa,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,GAAG,yBAAyB,CAAC;IACjF,aAAa,CAAC,kBAAkB,CAAC,sBAAsB,CAAC,GAAG,qBAAqB,CAAC;AACrF,CAAC,CAAC","sourcesContent":["import { InputDisplayManager } from \"./display/inputDisplayManager\";\r\nimport { OutputDisplayManager } from \"./display/outputDisplayManager\";\r\nimport { ElbowDisplayManager } from \"./display/elbowDisplayManager\";\r\nimport { DisplayLedger } from \"shared-ui-components/nodeGraphSystem/displayLedger\";\r\nimport { SourceDisplayManager } from \"./display/sourceDisplayManager\";\r\nimport { DebugDisplayManager } from \"./display/debugDisplayManager\";\r\nimport { TeleportInDisplayManager } from \"./display/teleportInDisplayManager\";\r\nimport { TeleportOutDisplayManager } from \"./display/teleportOutDisplayManager\";\r\nimport { TextureDisplayManager } from \"./display/textureDisplayManager\";\r\n\r\nexport const RegisterToDisplayManagers = () => {\r\n    DisplayLedger.RegisteredControls[\"GeometryInputBlock\"] = InputDisplayManager;\r\n    DisplayLedger.RegisteredControls[\"GeometryOutputBlock\"] = OutputDisplayManager;\r\n    DisplayLedger.RegisteredControls[\"GeometryElbowBlock\"] = ElbowDisplayManager;\r\n    DisplayLedger.RegisteredControls[\"DebugBlock\"] = DebugDisplayManager;\r\n    DisplayLedger.RegisteredControls[\"BoxBlock\"] = SourceDisplayManager;\r\n    DisplayLedger.RegisteredControls[\"PlaneBlock\"] = SourceDisplayManager;\r\n    DisplayLedger.RegisteredControls[\"SphereBlock\"] = SourceDisplayManager;\r\n    DisplayLedger.RegisteredControls[\"CapsuleBlock\"] = SourceDisplayManager;\r\n    DisplayLedger.RegisteredControls[\"TorusBlock\"] = SourceDisplayManager;\r\n    DisplayLedger.RegisteredControls[\"MeshBlock\"] = SourceDisplayManager;\r\n    DisplayLedger.RegisteredControls[\"CylinderBlock\"] = SourceDisplayManager;\r\n    DisplayLedger.RegisteredControls[\"DiscBlock\"] = SourceDisplayManager;\r\n    DisplayLedger.RegisteredControls[\"IcoSphereBlock\"] = SourceDisplayManager;\r\n    DisplayLedger.RegisteredControls[\"TeleportInBlock\"] = TeleportInDisplayManager;\r\n    DisplayLedger.RegisteredControls[\"TeleportOutBlock\"] = TeleportOutDisplayManager;\r\n    DisplayLedger.RegisteredControls[\"GeometryTextureBlock\"] = TextureDisplayManager;\r\n};\r\n"]}