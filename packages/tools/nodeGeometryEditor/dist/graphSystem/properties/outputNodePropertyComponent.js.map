{"version":3,"file":"outputNodePropertyComponent.js","sourceRoot":"","sources":["../../../src/graphSystem/properties/outputNodePropertyComponent.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport { LineContainerComponent } from \"shared-ui-components/lines/lineContainerComponent\";\r\nimport { GeneralPropertyTabComponent } from \"./genericNodePropertyComponent\";\r\nimport type { IPropertyComponentProps } from \"shared-ui-components/nodeGraphSystem/interfaces/propertyComponentProps\";\r\nimport type { GeometryOutputBlock } from \"core/Meshes/Node/Blocks/geometryOutputBlock\";\r\nimport { TextLineComponent } from \"shared-ui-components/lines/textLineComponent\";\r\nimport type { Observer } from \"core/Misc/observable\";\r\nimport type { Nullable } from \"core/types\";\r\nimport type { GlobalState } from \"node-geometry-editor/globalState\";\r\n\r\nexport class OutputPropertyTabComponent extends React.Component<IPropertyComponentProps> {\r\n    private _onUpdateRequiredObserver: Nullable<Observer<any>>;\r\n\r\n    constructor(props: IPropertyComponentProps) {\r\n        super(props);\r\n    }\r\n\r\n    override componentDidMount() {\r\n        this._onUpdateRequiredObserver = this.props.stateManager.onUpdateRequiredObservable.add(() => {\r\n            this.forceUpdate();\r\n        });\r\n    }\r\n\r\n    override componentWillUnmount() {\r\n        this.props.stateManager.onUpdateRequiredObservable.remove(this._onUpdateRequiredObserver);\r\n    }\r\n\r\n    override render() {\r\n        const outputBlock = this.props.nodeData.data as GeometryOutputBlock;\r\n        const vertexData = outputBlock.currentVertexData;\r\n\r\n        return (\r\n            <div>\r\n                <GeneralPropertyTabComponent stateManager={this.props.stateManager} nodeData={this.props.nodeData} />\r\n                {vertexData && (\r\n                    <LineContainerComponent title=\"INFO\">\r\n                        {vertexData.positions && <TextLineComponent label=\"Vertices\" value={(vertexData.positions?.length / 3).toString()} />}\r\n                        {vertexData.indices && <TextLineComponent label=\"Faces\" value={(vertexData.indices.length / 3).toString()} />}\r\n                        {vertexData.positions && (\r\n                            <TextLineComponent label=\"Build time\" value={(this.props.stateManager.data as GlobalState).nodeGeometry.buildExecutionTime.toFixed(2) + \" ms\"} />\r\n                        )}\r\n                        <TextLineComponent label=\"Sub-meshes\" value={vertexData.materialInfos?.length.toString()} />\r\n                        <TextLineComponent label=\"Has normals\" value={vertexData.normals ? \"Yes\" : \"No\"} />\r\n                        <TextLineComponent label=\"Has colors\" value={vertexData.colors ? \"Yes\" : \"No\"} />\r\n                        <TextLineComponent label=\"Has UV set 0\" value={vertexData.uvs ? \"Yes\" : \"No\"} />\r\n                        <TextLineComponent label=\"Has UV set 1\" value={vertexData.uvs2 ? \"Yes\" : \"No\"} />\r\n                        <TextLineComponent label=\"Has UV set 2\" value={vertexData.uvs3 ? \"Yes\" : \"No\"} />\r\n                        <TextLineComponent label=\"Has UV set 3\" value={vertexData.uvs4 ? \"Yes\" : \"No\"} />\r\n                        <TextLineComponent label=\"Has UV set 4\" value={vertexData.uvs5 ? \"Yes\" : \"No\"} />\r\n                        <TextLineComponent label=\"Has UV set 5\" value={vertexData.uvs6 ? \"Yes\" : \"No\"} />\r\n                        <TextLineComponent label=\"Has tangents\" value={vertexData.tangents ? \"Yes\" : \"No\"} />\r\n                        <TextLineComponent label=\"Has matrix weights\" value={vertexData.matricesWeights ? \"Yes\" : \"No\"} />\r\n                        <TextLineComponent label=\"Has matrix indices\" value={vertexData.matricesIndices ? \"Yes\" : \"No\"} />\r\n                    </LineContainerComponent>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]}