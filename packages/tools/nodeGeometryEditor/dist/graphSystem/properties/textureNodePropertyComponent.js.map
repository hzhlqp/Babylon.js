{"version":3,"file":"textureNodePropertyComponent.js","sourceRoot":"","sources":["../../../src/graphSystem/properties/textureNodePropertyComponent.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,2BAA2B,EAAE,MAAM,gCAAgC,CAAC;AAE7E,OAAO,EAAE,sBAAsB,EAAE,MAAM,mDAAmD,CAAC;AAE3F,OAAO,EAAE,cAAc,EAAE,MAAM,oDAAoD,CAAC;AACpF,OAAO,EAAE,qBAAqB,EAAE,MAAM,8CAA8C,CAAC;AACrF,OAAO,EAAE,mBAAmB,EAAE,MAAM,gDAAgD,CAAC;AAErF,MAAM,OAAO,2BAA4B,SAAQ,KAAK,CAAC,SAAkC;IACrF,YAAY,KAA8B;QACtC,KAAK,CAAC,KAAK,CAAC,CAAC;IACjB,CAAC;IAED,KAAK,CAAC,eAAe,CAAC,IAAU;QAC5B,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAA4B,CAAC;QAC/D,MAAM,KAAK,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC;QAC3C,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,2BAA2B,CAAC,eAAe,EAAE,CAAC;QACtE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,0BAA0B,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;IAC9E,CAAC;IAED,UAAU;QACN,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAA4B,CAAC;QAC/D,KAAK,CAAC,SAAS,EAAE,CAAC;QAClB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,0BAA0B,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QAC1E,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,2BAA2B,CAAC,eAAe,EAAE,CAAC;IAC1E,CAAC;IAEQ,MAAM;QACX,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAA4B,CAAC;QAE/D,OAAO,CACH,0BACI,KAAC,2BAA2B,IAAC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAI,EACrG,MAAC,sBAAsB,IAAC,KAAK,EAAC,YAAY,aACtC,KAAC,cAAc,IAAC,KAAK,EAAC,MAAM,EAAC,OAAO,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,MAAM,EAAC,wBAAwB,GAAG,EAC7G,KAAK,CAAC,WAAW,IAAI,KAAC,mBAAmB,IAAC,KAAK,EAAC,QAAQ,EAAC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,GAAI,IACzE,EACzB,KAAC,sBAAsB,IAAC,KAAK,EAAC,UAAU,YACpC,KAAC,qBAAqB,IAClB,KAAK,EAAC,wBAAwB,EAC9B,MAAM,EAAE,KAAK,EACb,YAAY,EAAC,sBAAsB,EACnC,cAAc,EAAE,GAAG,EAAE;4BACjB,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,2BAA2B,CAAC,eAAe,EAAE,CAAC;wBAC1E,CAAC,GACH,GACmB,IACvB,CACT,CAAC;IACN,CAAC;CACJ","sourcesContent":["import * as React from \"react\";\r\nimport { GeneralPropertyTabComponent } from \"./genericNodePropertyComponent\";\r\nimport type { IPropertyComponentProps } from \"shared-ui-components/nodeGraphSystem/interfaces/propertyComponentProps\";\r\nimport { LineContainerComponent } from \"shared-ui-components/lines/lineContainerComponent\";\r\nimport type { GeometryTextureBlock } from \"core/Meshes/Node/Blocks/Textures/geometryTextureBlock\";\r\nimport { FileButtonLine } from \"shared-ui-components/lines/fileButtonLineComponent\";\r\nimport { CheckBoxLineComponent } from \"../../sharedComponents/checkBoxLineComponent\";\r\nimport { ButtonLineComponent } from \"shared-ui-components/lines/buttonLineComponent\";\r\n\r\nexport class TexturePropertyTabComponent extends React.Component<IPropertyComponentProps> {\r\n    constructor(props: IPropertyComponentProps) {\r\n        super(props);\r\n    }\r\n\r\n    async loadTextureData(file: File) {\r\n        const block = this.props.nodeData.data as GeometryTextureBlock;\r\n        await block.loadTextureFromFileAsync(file);\r\n        this.props.stateManager.onRebuildRequiredObservable.notifyObservers();\r\n        this.props.stateManager.onUpdateRequiredObservable.notifyObservers(block);\r\n    }\r\n\r\n    removeData() {\r\n        const block = this.props.nodeData.data as GeometryTextureBlock;\r\n        block.cleanData();\r\n        this.forceUpdate();\r\n        this.props.stateManager.onUpdateRequiredObservable.notifyObservers(block);\r\n        this.props.stateManager.onRebuildRequiredObservable.notifyObservers();\r\n    }\r\n\r\n    override render() {\r\n        const block = this.props.nodeData.data as GeometryTextureBlock;\r\n\r\n        return (\r\n            <div>\r\n                <GeneralPropertyTabComponent stateManager={this.props.stateManager} nodeData={this.props.nodeData} />\r\n                <LineContainerComponent title=\"PROPERTIES\">\r\n                    <FileButtonLine label=\"Load\" onClick={(file) => this.loadTextureData(file)} accept=\".jpg, .png, .tga, .exr\" />\r\n                    {block.textureData && <ButtonLineComponent label=\"Remove\" onClick={() => this.removeData()} />}\r\n                </LineContainerComponent>\r\n                <LineContainerComponent title=\"ADVANCED\">\r\n                    <CheckBoxLineComponent\r\n                        label=\"Serialized cached data\"\r\n                        target={block}\r\n                        propertyName=\"serializedCachedData\"\r\n                        onValueChanged={() => {\r\n                            this.props.stateManager.onRebuildRequiredObservable.notifyObservers();\r\n                        }}\r\n                    />\r\n                </LineContainerComponent>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]}