{"version":3,"file":"previewManager.js","sourceRoot":"","sources":["../../../src/components/preview/previewManager.ts"],"names":[],"mappings":"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","sourcesContent":["import type { GlobalState } from \"../../globalState\";\r\nimport type { Nullable } from \"core/types\";\r\nimport type { Observer } from \"core/Misc/observable\";\r\nimport { Engine } from \"core/Engines/engine\";\r\nimport { Scene } from \"core/scene\";\r\nimport { Matrix, Vector3 } from \"core/Maths/math.vector\";\r\nimport { HemisphericLight } from \"core/Lights/hemisphericLight\";\r\nimport { ArcRotateCamera } from \"core/Cameras/arcRotateCamera\";\r\nimport { SceneLoader } from \"core/Loading/sceneLoader\";\r\nimport type { AbstractMesh } from \"core/Meshes/abstractMesh\";\r\nimport type { FramingBehavior } from \"core/Behaviors/Cameras/framingBehavior\";\r\nimport { Color3 } from \"core/Maths/math.color\";\r\nimport \"core/Rendering/depthRendererSceneComponent\";\r\nimport type { NodeGeometry } from \"core/Meshes/Node/nodeGeometry\";\r\nimport type { NodeGeometryBlock } from \"core/Meshes/Node/nodeGeometryBlock\";\r\nimport { StandardMaterial } from \"core/Materials/standardMaterial\";\r\nimport { Texture } from \"core/Materials/Textures/texture\";\r\nimport { PreviewMode } from \"./previewMode\";\r\nimport { NodeMaterial } from \"core/Materials/Node/nodeMaterial\";\r\nimport { DataStorage } from \"core/Misc/dataStorage\";\r\nimport { TransformNode } from \"core/Meshes/transformNode\";\r\nimport { MultiMaterial } from \"core/Materials/multiMaterial\";\r\nimport { GLTF2Export } from \"serializers/glTF/2.0/glTFSerializer\";\r\nimport type { GLTFData } from \"serializers/glTF/2.0/glTFData\";\r\nimport { Animation } from \"core/Animations/animation\";\r\nimport { AxesViewer } from \"core/Debug/axesViewer\";\r\nimport { DynamicTexture } from \"core/Materials/Textures/dynamicTexture\";\r\nimport { MeshBuilder } from \"core/Meshes/meshBuilder\";\r\nimport { NormalMaterial } from \"materials/normal/normalMaterial\";\r\n\r\nexport class PreviewManager {\r\n    private _nodeGeometry: NodeGeometry;\r\n    private _onBuildObserver: Nullable<Observer<NodeGeometry>>;\r\n\r\n    private _onFrameObserver: Nullable<Observer<void>>;\r\n    private _onExportToGLBObserver: Nullable<Observer<void>>;\r\n    private _onAnimationCommandActivatedObserver: Nullable<Observer<void>>;\r\n    private _onUpdateRequiredObserver: Nullable<Observer<Nullable<NodeGeometryBlock>>>;\r\n    private _onPreviewBackgroundChangedObserver: Nullable<Observer<void>>;\r\n    private _onPreviewChangedObserver: Nullable<Observer<void>>;\r\n    private _engine: Engine;\r\n    private _scene: Scene;\r\n    private _mesh: Nullable<AbstractMesh>;\r\n    private _camera: ArcRotateCamera;\r\n    private _light: HemisphericLight;\r\n    private _globalState: GlobalState;\r\n    private _matTexture: StandardMaterial;\r\n    private _matCap: StandardMaterial;\r\n    private _matStd: MultiMaterial;\r\n    private _matNME: NodeMaterial;\r\n    private _matVertexColor: StandardMaterial;\r\n    private _matNormals: NormalMaterial;\r\n    private _axis: AxesViewer;\r\n\r\n    public constructor(targetCanvas: HTMLCanvasElement, globalState: GlobalState) {\r\n        this._nodeGeometry = globalState.nodeGeometry;\r\n        this._globalState = globalState;\r\n\r\n        this._onExportToGLBObserver = this._globalState.onExportToGLBRequired.add(() => {\r\n            if (!this._mesh) {\r\n                return;\r\n            }\r\n            const currentMat = this._mesh.material;\r\n            this._mesh.material = this._matStd;\r\n            GLTF2Export.GLBAsync(this._scene, \"node-geometry-scene\", {\r\n                shouldExportNode: (node) => {\r\n                    return !node.doNotSerialize;\r\n                },\r\n            }).then((glb: GLTFData) => {\r\n                this._mesh!.material = currentMat;\r\n                glb.downloadFiles();\r\n            });\r\n        });\r\n\r\n        this._onFrameObserver = this._globalState.onFrame.add(() => {\r\n            this._frameCamera();\r\n        });\r\n\r\n        this._onBuildObserver = this._nodeGeometry.onBuildObservable.add(() => {\r\n            this._refreshPreviewMesh(false);\r\n        });\r\n        this._onUpdateRequiredObserver = globalState.stateManager.onUpdateRequiredObservable.add(() => {\r\n            this._refreshPreviewMesh(false);\r\n        });\r\n\r\n        this._onPreviewBackgroundChangedObserver = globalState.onPreviewBackgroundChanged.add(() => {\r\n            this._scene.clearColor = this._globalState.backgroundColor;\r\n        });\r\n\r\n        this._onAnimationCommandActivatedObserver = globalState.onAnimationCommandActivated.add(() => {\r\n            this._handleAnimations();\r\n        });\r\n\r\n        this._onPreviewChangedObserver = globalState.onPreviewModeChanged.add(() => {\r\n            this._setMaterial();\r\n        });\r\n\r\n        this._engine = new Engine(targetCanvas, true);\r\n        this._scene = new Scene(this._engine);\r\n        this._scene.clearColor = this._globalState.backgroundColor;\r\n        this._scene.ambientColor = new Color3(1, 1, 1);\r\n        this._camera = new ArcRotateCamera(\"Camera\", 0, 0.8, 4, Vector3.Zero(), this._scene);\r\n\r\n        this._camera.doNotSerialize = true;\r\n        this._camera.lowerRadiusLimit = 3;\r\n        this._camera.upperRadiusLimit = 10;\r\n        this._camera.wheelPrecision = 20;\r\n        this._camera.minZ = 0.001;\r\n        this._camera.attachControl(false);\r\n        this._camera.useFramingBehavior = true;\r\n        this._camera.wheelDeltaPercentage = 0.01;\r\n        this._camera.pinchDeltaPercentage = 0.01;\r\n\r\n        this._matCap = new StandardMaterial(\"MatCap\", this._scene);\r\n        this._matCap.disableLighting = true;\r\n        this._matCap.backFaceCulling = false;\r\n\r\n        const matCapTexture = new Texture(\"https://assets.babylonjs.com/skyboxes/matcap.jpg\", this._scene);\r\n        matCapTexture.coordinatesMode = Texture.SPHERICAL_MODE;\r\n        this._matCap.reflectionTexture = matCapTexture;\r\n\r\n        this._matStd = new MultiMaterial(\"MatStd\", this._scene);\r\n        const subMat = new StandardMaterial(\"ChildStdMat\", this._scene);\r\n        subMat.backFaceCulling = false;\r\n        subMat.specularColor = Color3.Black();\r\n        this._matStd.subMaterials.push(subMat);\r\n\r\n        this._matTexture = new StandardMaterial(\"MatTexture\", this._scene);\r\n        this._matTexture.backFaceCulling = false;\r\n        this._matTexture.emissiveTexture = new Texture(\"https://assets.babylonjs.com/textures/amiga.jpg\", this._scene);\r\n        this._matTexture.disableLighting = true;\r\n\r\n        this._matVertexColor = new StandardMaterial(\"VertexColor\", this._scene);\r\n        this._matVertexColor.disableLighting = true;\r\n        this._matVertexColor.backFaceCulling = false;\r\n        this._matVertexColor.emissiveColor = Color3.White();\r\n\r\n        this._matNormals = new NormalMaterial(\"normalMaterial\", this._scene);\r\n        this._matNormals.disableLighting = true;\r\n        this._matNormals.backFaceCulling = false;\r\n\r\n        this._light = new HemisphericLight(\"Hemispheric light\", new Vector3(0, 1, 0), this._scene);\r\n        this._refreshPreviewMesh(true);\r\n\r\n        this._engine.runRenderLoop(() => {\r\n            this._engine.resize();\r\n            this._scene.render();\r\n        });\r\n\r\n        // Axis\r\n        const generateTextPlane = function (text: string, color: string, size: number, scene: Scene, parent: TransformNode) {\r\n            const dynamicTexture = new DynamicTexture(\"DynamicTexture\", 50, scene, true);\r\n            dynamicTexture.hasAlpha = true;\r\n            dynamicTexture.drawText(text, 14, 35, \"bold 40px Arial\", color, \"transparent\", true);\r\n            const plane = MeshBuilder.CreatePlane(\"TextPlane\", { size: size }, scene);\r\n            const material = new StandardMaterial(\"TextPlaneMaterial\", scene);\r\n            material.backFaceCulling = false;\r\n            material.disableLighting = true;\r\n            material.emissiveTexture = dynamicTexture;\r\n            material.diffuseTexture = dynamicTexture;\r\n\r\n            plane.material = material;\r\n            plane.billboardMode = TransformNode.BILLBOARDMODE_ALL;\r\n            plane.renderingGroupId = 2;\r\n            plane.setParent(parent);\r\n\r\n            return plane;\r\n        };\r\n\r\n        this._axis = new AxesViewer(this._scene, 1, 2, undefined, undefined, undefined, 3);\r\n        const dummy = new TransformNode(\"Dummy\", this._scene);\r\n        dummy.doNotSerialize = true;\r\n        this._axis.xAxis.setParent(dummy);\r\n        this._axis.xAxis.doNotSerialize = true;\r\n        this._axis.yAxis.setParent(dummy);\r\n        this._axis.yAxis.doNotSerialize = true;\r\n        this._axis.zAxis.setParent(dummy);\r\n        this._axis.zAxis.doNotSerialize = true;\r\n\r\n        (this._axis.xAxis.getChildMeshes()[0].material as StandardMaterial).emissiveColor.scaleInPlace(2);\r\n        (this._axis.yAxis.getChildMeshes()[0].material as StandardMaterial).emissiveColor.scaleInPlace(2);\r\n        (this._axis.zAxis.getChildMeshes()[0].material as StandardMaterial).emissiveColor.scaleInPlace(2);\r\n\r\n        const xPlane = generateTextPlane(\"x\", \"red\", 0.5, this._scene, dummy);\r\n        xPlane.position.x = 1;\r\n        xPlane.position.y = 0.3;\r\n\r\n        const yPlane = generateTextPlane(\"y\", \"#0F0\", 0.5, this._scene, dummy);\r\n        yPlane.position.y = 1.55;\r\n\r\n        const zPlane = generateTextPlane(\"z\", \"blue\", 0.5, this._scene, dummy);\r\n        zPlane.position.z = 1;\r\n        zPlane.position.y = 0.3;\r\n\r\n        const targetPosition = new Vector3(3.5, 3.6, 13);\r\n        const tempMat = Matrix.Identity();\r\n\r\n        this._scene.onBeforeCameraRenderObservable.add(() => {\r\n            this._scene.getViewMatrix().invertToRef(tempMat);\r\n            Vector3.TransformCoordinatesToRef(targetPosition, tempMat, dummy.position);\r\n        });\r\n    }\r\n\r\n    private _updateStandardMaterial() {\r\n        if (!this._mesh) {\r\n            return;\r\n        }\r\n\r\n        if (this._mesh.subMeshes.length <= this._matStd.subMaterials.length) {\r\n            return;\r\n        }\r\n\r\n        for (let i = this._matStd.subMaterials.length; i < this._mesh.subMeshes.length; i++) {\r\n            const newMat = new StandardMaterial(\"ChildStdMat\", this._scene);\r\n            newMat.backFaceCulling = false;\r\n            newMat.specularColor = Color3.Black();\r\n            newMat.diffuseColor = new Color3(Math.random(), Math.random(), Math.random());\r\n\r\n            this._matStd.subMaterials.push(newMat);\r\n        }\r\n    }\r\n\r\n    private _handleAnimations() {\r\n        this._scene.stopAllAnimations();\r\n\r\n        if (this._globalState.rotatePreview) {\r\n            for (const root of this._scene.rootNodes) {\r\n                const transformNode = root as TransformNode;\r\n\r\n                if (transformNode.getClassName() === \"TransformNode\" || transformNode.getClassName() === \"Mesh\" || transformNode.getClassName() === \"GroundMesh\") {\r\n                    if (transformNode.rotationQuaternion) {\r\n                        transformNode.rotation = transformNode.rotationQuaternion.toEulerAngles();\r\n                        transformNode.rotationQuaternion = null;\r\n                    }\r\n                    Animation.CreateAndStartAnimation(\"turnTable\", root, \"rotation.y\", 60, 1200, transformNode.rotation.y, transformNode.rotation.y + 2 * Math.PI, 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private _frameCamera() {\r\n        const framingBehavior = this._camera.getBehaviorByName(\"Framing\") as FramingBehavior;\r\n\r\n        framingBehavior.framingTime = 0;\r\n        framingBehavior.elevationReturnTime = -1;\r\n\r\n        if (this._scene.meshes.length) {\r\n            const worldExtends = this._scene.getWorldExtends((m) => m.name === \"main\");\r\n            this._camera.lowerRadiusLimit = null;\r\n            this._camera.upperRadiusLimit = null;\r\n            if (!framingBehavior.zoomOnBoundingInfo(worldExtends.min, worldExtends.max)) {\r\n                setTimeout(() => {\r\n                    this._frameCamera();\r\n                });\r\n                return;\r\n            }\r\n        }\r\n\r\n        this._camera.pinchPrecision = 200 / this._camera.radius;\r\n        this._camera.upperRadiusLimit = 5 * this._camera.radius;\r\n    }\r\n\r\n    private _prepareScene() {\r\n        // Update\r\n        const toDelete = this._mesh;\r\n        this._updatePreview();\r\n        toDelete?.dispose();\r\n\r\n        // Animations\r\n        this._handleAnimations();\r\n    }\r\n\r\n    private _refreshPreviewMesh(first: boolean) {\r\n        SceneLoader.ShowLoadingScreen = false;\r\n\r\n        this._globalState.onIsLoadingChanged.notifyObservers(true);\r\n\r\n        this._prepareScene();\r\n\r\n        if (first) {\r\n            this._frameCamera();\r\n        }\r\n    }\r\n\r\n    private _setMaterial() {\r\n        if (!this._mesh) {\r\n            return;\r\n        }\r\n\r\n        const nmeID = DataStorage.ReadString(\"NMEID\", \"\");\r\n\r\n        if (nmeID) {\r\n            if (!this._matNME) {\r\n                this._matNME = new NodeMaterial(\"nme\", this._scene);\r\n                this._matNME.backFaceCulling = false;\r\n            }\r\n            if (this._matNME.snippetId !== nmeID) {\r\n                NodeMaterial.ParseFromSnippetAsync(nmeID, this._scene, \"\", this._matNME)\r\n                    .then(() => {\r\n                        this._matNME.build();\r\n                    })\r\n                    .catch((err) => {\r\n                        this._globalState.hostDocument.defaultView!.alert(\"Unable to load your node material: \" + err);\r\n                    });\r\n            }\r\n        }\r\n\r\n        const useNM = DataStorage.ReadBoolean(\"UseNM\", false) && this._matNME;\r\n\r\n        switch (this._globalState.previewMode) {\r\n            case PreviewMode.Normal:\r\n                this._mesh.material = useNM ? this._matNME : this._matStd;\r\n                this._matStd.subMaterials.forEach((m) => (m!.wireframe = false));\r\n                break;\r\n            case PreviewMode.MatCap:\r\n                this._mesh.material = this._matCap;\r\n                break;\r\n            case PreviewMode.Textured:\r\n                this._mesh.material = this._matTexture;\r\n                break;\r\n            case PreviewMode.Wireframe:\r\n                this._mesh.material = useNM ? this._matNME : this._matStd;\r\n                this._matStd.subMaterials.forEach((m) => (m!.wireframe = true));\r\n                break;\r\n            case PreviewMode.VertexColor:\r\n                this._mesh.material = this._matVertexColor;\r\n                break;\r\n            case PreviewMode.Normals:\r\n                this._mesh.material = this._matNormals;\r\n                break;\r\n        }\r\n    }\r\n\r\n    private _updatePreview() {\r\n        try {\r\n            this._mesh = this._nodeGeometry.createMesh(\"main\", this._scene);\r\n            if (this._mesh) {\r\n                this._updateStandardMaterial();\r\n                this._setMaterial();\r\n                this._mesh.useVertexColors = true;\r\n            }\r\n\r\n            this._globalState.onIsLoadingChanged.notifyObservers(false);\r\n        } catch (err) {\r\n            // Ignore the error\r\n            this._globalState.onIsLoadingChanged.notifyObservers(false);\r\n        }\r\n    }\r\n\r\n    public dispose() {\r\n        this._globalState.onFrame.remove(this._onFrameObserver);\r\n        this._nodeGeometry.onBuildObservable.remove(this._onBuildObserver);\r\n        this._globalState.stateManager.onUpdateRequiredObservable.remove(this._onUpdateRequiredObserver);\r\n        this._globalState.onPreviewModeChanged.remove(this._onPreviewChangedObserver);\r\n        this._globalState.onAnimationCommandActivated.remove(this._onAnimationCommandActivatedObserver);\r\n        this._globalState.onPreviewBackgroundChanged.remove(this._onPreviewBackgroundChangedObserver);\r\n        this._globalState.onExportToGLBRequired.remove(this._onExportToGLBObserver);\r\n\r\n        if (this._nodeGeometry) {\r\n            this._nodeGeometry.dispose();\r\n        }\r\n\r\n        if (this._mesh) {\r\n            this._mesh.dispose(false, true);\r\n        }\r\n\r\n        this._light.dispose();\r\n        this._camera.dispose();\r\n\r\n        this._scene.dispose();\r\n        this._engine.dispose();\r\n    }\r\n}\r\n"]}