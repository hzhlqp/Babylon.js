{"version":3,"file":"previewAreaComponent.js","sourceRoot":"","sources":["../../../src/components/preview/previewAreaComponent.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAI/B,OAAO,SAAS,MAAM,sBAAsB,CAAC;AAC7C,OAAO,MAAM,MAAM,mBAAmB,CAAC;AACvC,OAAO,OAAO,MAAM,wBAAwB,CAAC;AAC7C,OAAO,WAAW,MAAM,wBAAwB,CAAC;AACjD,OAAO,WAAW,MAAM,wBAAwB,CAAC;AACjD,OAAO,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AAO5C,MAAM,OAAO,oBAAqB,SAAQ,KAAK,CAAC,SAA6D;IAIzG,YAAY,KAAiC;QACzC,KAAK,CAAC,KAAK,CAAC,CAAC;QAejB,yBAAoB,GAAG,GAAG,EAAE;YACxB,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,iBAAiB,GAAG,IAAI,CAAC;QACpD,CAAC,CAAC;QAEF,wBAAmB,GAAG,GAAG,EAAE;YACvB,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,iBAAiB,GAAG,KAAK,CAAC;QACrD,CAAC,CAAC;QApBE,IAAI,CAAC,KAAK,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;QAEjC,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;QAEjI,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,yBAAyB,CAAC,GAAG,CAAC,GAAG,EAAE;YACtF,IAAI,CAAC,WAAW,EAAE,CAAC;QACvB,CAAC,CAAC,CAAC;IACP,CAAC;IAEQ,oBAAoB;QACzB,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC;QACnF,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,yBAAyB,CAAC,MAAM,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;IAC3F,CAAC;IAUD,eAAe;QACX,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW,KAAK,WAAW,CAAC,SAAS,EAAE;YAC9D,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW,GAAG,WAAW,CAAC,MAAM,CAAC;SAC3D;aAAM;YACH,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW,GAAG,WAAW,CAAC,SAAS,CAAC;SAC9D;QACD,IAAI,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC;IAED,iBAAiB;QACb,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW,KAAK,WAAW,CAAC,WAAW,EAAE;YAChE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW,GAAG,WAAW,CAAC,MAAM,CAAC;SAC3D;aAAM;YACH,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW,GAAG,WAAW,CAAC,WAAW,CAAC;SAChE;QACD,IAAI,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC;IAED,YAAY;QACR,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW,KAAK,WAAW,CAAC,MAAM,EAAE;YAC3D,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW,GAAG,WAAW,CAAC,MAAM,CAAC;SAC3D;aAAM;YACH,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW,GAAG,WAAW,CAAC,MAAM,CAAC;SAC3D;QACD,IAAI,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC;IAED,aAAa;QACT,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW,KAAK,WAAW,CAAC,QAAQ,EAAE;YAC7D,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW,GAAG,WAAW,CAAC,MAAM,CAAC;SAC3D;aAAM;YACH,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW,GAAG,WAAW,CAAC,QAAQ,CAAC;SAC7D;QACD,IAAI,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC;IAED,aAAa;QACT,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW,KAAK,WAAW,CAAC,OAAO,EAAE;YAC5D,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW,GAAG,WAAW,CAAC,MAAM,CAAC;SAC3D;aAAM;YACH,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW,GAAG,WAAW,CAAC,OAAO,CAAC;SAC5D;QACD,IAAI,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC;IAEQ,MAAM;QACX,OAAO,CACH,8BACI,eAAK,EAAE,EAAC,SAAS,EAAC,KAAK,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,EAAE,aACxD,iBAAQ,aAAa,EAAE,IAAI,CAAC,oBAAoB,EAAE,YAAY,EAAE,IAAI,CAAC,mBAAmB,EAAE,EAAE,EAAC,gBAAgB,GAAG,EAC/G,cAAK,SAAS,EAAE,WAAW,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,wCAA+B,IACnG,EACN,4BACI,eAAK,EAAE,EAAC,oBAAoB,aACxB,cACI,KAAK,EAAC,qBAAqB,EAC3B,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,EAAE,EACnC,SAAS,EAAE,oBAAoB,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW,KAAK,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,YAEjH,cAAK,GAAG,EAAE,WAAW,EAAE,GAAG,EAAC,EAAE,GAAG,GAC9B,EACN,cACI,KAAK,EAAC,qBAAqB,EAC3B,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,EAAE,EACnC,SAAS,EAAE,oBAAoB,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW,KAAK,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,YAElH,cAAK,GAAG,EAAE,OAAO,EAAE,GAAG,EAAC,EAAE,GAAG,GAC1B,EACN,cACI,KAAK,EAAC,qBAAqB,EAC3B,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,EAAE,EAClC,SAAS,EAAE,gBAAgB,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW,KAAK,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,YAE5G,cAAK,GAAG,EAAE,MAAM,EAAE,GAAG,EAAC,EAAE,GAAG,GACzB,EACN,cACI,KAAK,EAAC,0BAA0B,EAChC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,iBAAiB,EAAE,EACvC,SAAS,EAAE,qBAAqB,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW,KAAK,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,YAEtH,cAAK,GAAG,EAAE,WAAW,EAAE,GAAG,EAAC,EAAE,GAAG,GAC9B,EACN,cACI,KAAK,EAAC,uBAAuB,EAC7B,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,eAAe,EAAE,EACrC,SAAS,EAAE,kBAAkB,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW,KAAK,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,YAEjH,cAAK,GAAG,EAAE,SAAS,EAAE,GAAG,EAAC,EAAE,GAAG,GAC5B,IACJ,GACP,IACJ,CACN,CAAC;IACN,CAAC;CACJ","sourcesContent":["import * as React from \"react\";\r\nimport type { GlobalState } from \"../../globalState\";\r\nimport type { Observer } from \"core/Misc/observable\";\r\nimport type { Nullable } from \"core/types\";\r\nimport wireframe from \"./svgs/wireframe.svg\";\r\nimport matCap from \"./svgs/matCap.svg\";\r\nimport texture from \"./svgs/textureIcon.svg\";\r\nimport vertexColor from \"./svgs/vertexColor.svg\";\r\nimport doubleSided from \"./svgs/doubleSided.svg\";\r\nimport { PreviewMode } from \"./previewMode\";\r\n\r\ninterface IPreviewAreaComponentProps {\r\n    globalState: GlobalState;\r\n    width: number;\r\n}\r\n\r\nexport class PreviewAreaComponent extends React.Component<IPreviewAreaComponentProps, { isLoading: boolean }> {\r\n    private _onIsLoadingChangedObserver: Nullable<Observer<boolean>>;\r\n    private _onResetRequiredObserver: Nullable<Observer<boolean>>;\r\n\r\n    constructor(props: IPreviewAreaComponentProps) {\r\n        super(props);\r\n        this.state = { isLoading: true };\r\n\r\n        this._onIsLoadingChangedObserver = this.props.globalState.onIsLoadingChanged.add((state) => this.setState({ isLoading: state }));\r\n\r\n        this._onResetRequiredObserver = this.props.globalState.onResetRequiredObservable.add(() => {\r\n            this.forceUpdate();\r\n        });\r\n    }\r\n\r\n    override componentWillUnmount() {\r\n        this.props.globalState.onIsLoadingChanged.remove(this._onIsLoadingChangedObserver);\r\n        this.props.globalState.onResetRequiredObservable.remove(this._onResetRequiredObserver);\r\n    }\r\n\r\n    _onPointerOverCanvas = () => {\r\n        this.props.globalState.pointerOverCanvas = true;\r\n    };\r\n\r\n    _onPointerOutCanvas = () => {\r\n        this.props.globalState.pointerOverCanvas = false;\r\n    };\r\n\r\n    changeWireframe() {\r\n        if (this.props.globalState.previewMode === PreviewMode.Wireframe) {\r\n            this.props.globalState.previewMode = PreviewMode.Normal;\r\n        } else {\r\n            this.props.globalState.previewMode = PreviewMode.Wireframe;\r\n        }\r\n        this.forceUpdate();\r\n    }\r\n\r\n    changeVertexColor() {\r\n        if (this.props.globalState.previewMode === PreviewMode.VertexColor) {\r\n            this.props.globalState.previewMode = PreviewMode.Normal;\r\n        } else {\r\n            this.props.globalState.previewMode = PreviewMode.VertexColor;\r\n        }\r\n        this.forceUpdate();\r\n    }\r\n\r\n    changeMatCap() {\r\n        if (this.props.globalState.previewMode === PreviewMode.MatCap) {\r\n            this.props.globalState.previewMode = PreviewMode.Normal;\r\n        } else {\r\n            this.props.globalState.previewMode = PreviewMode.MatCap;\r\n        }\r\n        this.forceUpdate();\r\n    }\r\n\r\n    changeTexture() {\r\n        if (this.props.globalState.previewMode === PreviewMode.Textured) {\r\n            this.props.globalState.previewMode = PreviewMode.Normal;\r\n        } else {\r\n            this.props.globalState.previewMode = PreviewMode.Textured;\r\n        }\r\n        this.forceUpdate();\r\n    }\r\n\r\n    changeNormals() {\r\n        if (this.props.globalState.previewMode === PreviewMode.Normals) {\r\n            this.props.globalState.previewMode = PreviewMode.Normal;\r\n        } else {\r\n            this.props.globalState.previewMode = PreviewMode.Normals;\r\n        }\r\n        this.forceUpdate();\r\n    }\r\n\r\n    override render() {\r\n        return (\r\n            <>\r\n                <div id=\"preview\" style={{ height: this.props.width + \"px\" }}>\r\n                    <canvas onPointerOver={this._onPointerOverCanvas} onPointerOut={this._onPointerOutCanvas} id=\"preview-canvas\" />\r\n                    {<div className={\"waitPanel\" + (this.state.isLoading ? \"\" : \" hidden\")}>Please wait, loading...</div>}\r\n                </div>\r\n                <>\r\n                    <div id=\"preview-config-bar\">\r\n                        <div\r\n                            title=\"Render with normals\"\r\n                            onClick={() => this.changeNormals()}\r\n                            className={\"button mat-normals\" + (this.props.globalState.previewMode === PreviewMode.Normals ? \" selected\" : \"\")}\r\n                        >\r\n                            <img src={doubleSided} alt=\"\" />\r\n                        </div>\r\n                        <div\r\n                            title=\"Render with texture\"\r\n                            onClick={() => this.changeTexture()}\r\n                            className={\"button mat-texture\" + (this.props.globalState.previewMode === PreviewMode.Textured ? \" selected\" : \"\")}\r\n                        >\r\n                            <img src={texture} alt=\"\" />\r\n                        </div>\r\n                        <div\r\n                            title=\"Render with mat cap\"\r\n                            onClick={() => this.changeMatCap()}\r\n                            className={\"button mat-cap\" + (this.props.globalState.previewMode === PreviewMode.MatCap ? \" selected\" : \"\")}\r\n                        >\r\n                            <img src={matCap} alt=\"\" />\r\n                        </div>\r\n                        <div\r\n                            title=\"Render with vertex color\"\r\n                            onClick={() => this.changeVertexColor()}\r\n                            className={\"button vertex-color\" + (this.props.globalState.previewMode === PreviewMode.VertexColor ? \" selected\" : \"\")}\r\n                        >\r\n                            <img src={vertexColor} alt=\"\" />\r\n                        </div>\r\n                        <div\r\n                            title=\"Render with wireframe\"\r\n                            onClick={() => this.changeWireframe()}\r\n                            className={\"button wireframe\" + (this.props.globalState.previewMode === PreviewMode.Wireframe ? \" selected\" : \"\")}\r\n                        >\r\n                            <img src={wireframe} alt=\"\" />\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            </>\r\n        );\r\n    }\r\n}\r\n"]}