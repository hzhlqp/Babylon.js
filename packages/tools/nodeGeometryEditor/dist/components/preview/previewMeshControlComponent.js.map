{"version":3,"file":"previewMeshControlComponent.js","sourceRoot":"","sources":["../../../src/components/preview/previewMeshControlComponent.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport type { GlobalState } from \"../../globalState\";\r\nimport { Color3, Color4 } from \"core/Maths/math.color\";\r\nimport { DataStorage } from \"core/Misc/dataStorage\";\r\nimport type { Observer } from \"core/Misc/observable\";\r\nimport type { Nullable } from \"core/types\";\r\n\r\nimport popUpIcon from \"./svgs/popOut.svg\";\r\nimport colorPicker from \"./svgs/colorPicker.svg\";\r\nimport pauseIcon from \"./svgs/pauseIcon.svg\";\r\nimport playIcon from \"./svgs/playIcon.svg\";\r\nimport frameIcon from \"./svgs/frameIcon.svg\";\r\n\r\ninterface IPreviewMeshControlComponent {\r\n    globalState: GlobalState;\r\n    togglePreviewAreaComponent: () => void;\r\n}\r\n\r\nexport class PreviewMeshControlComponent extends React.Component<IPreviewMeshControlComponent> {\r\n    private _colorInputRef: React.RefObject<HTMLInputElement>;\r\n    private _onResetRequiredObserver: Nullable<Observer<boolean>>;\r\n    private _onRefreshPreviewMeshControlComponentRequiredObserver: Nullable<Observer<void>>;\r\n\r\n    constructor(props: IPreviewMeshControlComponent) {\r\n        super(props);\r\n        this._colorInputRef = React.createRef();\r\n\r\n        this._onResetRequiredObserver = this.props.globalState.onResetRequiredObservable.add(() => {\r\n            this.forceUpdate();\r\n        });\r\n\r\n        this._onRefreshPreviewMeshControlComponentRequiredObserver = this.props.globalState.onRefreshPreviewMeshControlComponentRequiredObservable.add(() => {\r\n            this.forceUpdate();\r\n        });\r\n    }\r\n\r\n    override componentWillUnmount() {\r\n        this.props.globalState.onResetRequiredObservable.remove(this._onResetRequiredObserver);\r\n        this.props.globalState.onRefreshPreviewMeshControlComponentRequiredObservable.remove(this._onRefreshPreviewMeshControlComponentRequiredObserver);\r\n    }\r\n\r\n    onPopUp() {\r\n        this.props.togglePreviewAreaComponent();\r\n    }\r\n\r\n    changeAnimation() {\r\n        this.props.globalState.rotatePreview = !this.props.globalState.rotatePreview;\r\n        this.props.globalState.onAnimationCommandActivated.notifyObservers();\r\n        this.forceUpdate();\r\n    }\r\n\r\n    changeBackground(value: string) {\r\n        const newColor = Color3.FromHexString(value);\r\n\r\n        DataStorage.WriteNumber(\"BackgroundColorR\", newColor.r);\r\n        DataStorage.WriteNumber(\"BackgroundColorG\", newColor.g);\r\n        DataStorage.WriteNumber(\"BackgroundColorB\", newColor.b);\r\n\r\n        const newBackgroundColor = Color4.FromColor3(newColor, 1.0);\r\n        this.props.globalState.backgroundColor = newBackgroundColor;\r\n        this.props.globalState.onPreviewBackgroundChanged.notifyObservers();\r\n    }\r\n\r\n    changeBackgroundClick() {\r\n        this._colorInputRef.current?.click();\r\n    }\r\n\r\n    frame() {\r\n        this.props.globalState.onFrame.notifyObservers();\r\n    }\r\n\r\n    override render() {\r\n        return (\r\n            <div id=\"preview-mesh-bar\">\r\n                <>\r\n                    <div title=\"Frame camera\" onClick={() => this.frame()} className=\"button\" id=\"frame-button\">\r\n                        <img src={frameIcon} alt=\"\" />\r\n                    </div>\r\n                    <div title=\"Turn-table animation\" onClick={() => this.changeAnimation()} className=\"button\" id=\"play-button\">\r\n                        {this.props.globalState.rotatePreview ? <img src={pauseIcon} alt=\"\" /> : <img src={playIcon} alt=\"\" />}\r\n                    </div>\r\n                    <div id=\"color-picker-button\" title=\"Background color\" className={\"button align\"} onClick={(_) => this.changeBackgroundClick()}>\r\n                        <img src={colorPicker} alt=\"\" id=\"color-picker-image\" />\r\n                        <input\r\n                            ref={this._colorInputRef}\r\n                            id=\"color-picker\"\r\n                            type=\"color\"\r\n                            value={this.props.globalState.backgroundColor.toHexString().slice(0, 7)}\r\n                            onChange={(evt) => this.changeBackground(evt.target.value)}\r\n                        />\r\n                    </div>\r\n                </>\r\n                <div title=\"Open preview in new window\" id=\"preview-new-window\" onClick={() => this.onPopUp()} className=\"button\">\r\n                    <img src={popUpIcon} alt=\"\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]}