{"version":3,"file":"blockTools.js","sourceRoot":"","sources":["../src/blockTools.ts"],"names":[],"mappings":"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","sourcesContent":["import { NodeGeometryBlockConnectionPointTypes } from \"core/Meshes/Node/Enums/nodeGeometryConnectionPointTypes\";\r\nimport { SetPositionsBlock } from \"core/Meshes/Node/Blocks/Set/setPositionsBlock\";\r\nimport { SetNormalsBlock } from \"core/Meshes/Node/Blocks/Set/setNormalsBlock\";\r\nimport { SetColorsBlock } from \"core/Meshes/Node/Blocks/Set/setColorsBlock\";\r\nimport { SetTangentsBlock } from \"core/Meshes/Node/Blocks/Set/setTangentsBlock\";\r\nimport { SetUVsBlock } from \"core/Meshes/Node/Blocks/Set/setUVsBlock\";\r\nimport { ComputeNormalsBlock } from \"core/Meshes/Node/Blocks/computeNormalsBlock\";\r\nimport { RandomBlock } from \"core/Meshes/Node/Blocks/randomBlock\";\r\nimport { NoiseBlock } from \"core/Meshes/Node/Blocks/noiseBlock\";\r\nimport { GeometryOutputBlock } from \"core/Meshes/Node/Blocks/geometryOutputBlock\";\r\nimport { BoxBlock } from \"core/Meshes/Node/Blocks/Sources/boxBlock\";\r\nimport { PlaneBlock } from \"core/Meshes/Node/Blocks/Sources/planeBlock\";\r\nimport { SphereBlock } from \"core/Meshes/Node/Blocks/Sources/sphereBlock\";\r\nimport { CylinderBlock } from \"core/Meshes/Node/Blocks/Sources/cylinderBlock\";\r\nimport { CapsuleBlock } from \"core/Meshes/Node/Blocks/Sources/capsuleBlock\";\r\nimport { IcoSphereBlock } from \"core/Meshes/Node/Blocks/Sources/icoSphereBlock\";\r\nimport { RotationXBlock } from \"core/Meshes/Node/Blocks/Matrices/rotationXBlock\";\r\nimport { RotationYBlock } from \"core/Meshes/Node/Blocks/Matrices/rotationYBlock\";\r\nimport { RotationZBlock } from \"core/Meshes/Node/Blocks/Matrices/rotationZBlock\";\r\nimport { ScalingBlock } from \"core/Meshes/Node/Blocks/Matrices/scalingBlock\";\r\nimport { AlignBlock } from \"core/Meshes/Node/Blocks/Matrices/alignBlock\";\r\nimport { TranslationBlock } from \"core/Meshes/Node/Blocks/Matrices/translationBlock\";\r\nimport { MeshBlock } from \"core/Meshes/Node/Blocks/Sources/meshBlock\";\r\nimport { GridBlock } from \"core/Meshes/Node/Blocks/Sources/gridBlock\";\r\nimport { TorusBlock } from \"core/Meshes/Node/Blocks/Sources/torusBlock\";\r\nimport { DiscBlock } from \"core/Meshes/Node/Blocks/Sources/discBlock\";\r\nimport { NullBlock } from \"core/Meshes/Node/Blocks/Sources/nullBlock\";\r\nimport { MergeGeometryBlock } from \"core/Meshes/Node/Blocks/mergeGeometryBlock\";\r\nimport { VectorConverterBlock } from \"core/Meshes/Node/Blocks/vectorConverterBlock\";\r\nimport { NormalizeVectorBlock } from \"core/Meshes/Node/Blocks/normalizeVectorBlock\";\r\nimport { GeometryTransformBlock } from \"core/Meshes/Node/Blocks/geometryTransformBlock\";\r\nimport { GeometryInputBlock } from \"core/Meshes/Node/Blocks/geometryInputBlock\";\r\nimport { MathBlock, MathBlockOperations } from \"core/Meshes/Node/Blocks/mathBlock\";\r\nimport { NodeGeometryContextualSources } from \"core/Meshes/Node/Enums/nodeGeometryContextualSources\";\r\nimport { GeometryTrigonometryBlock, GeometryTrigonometryBlockOperations } from \"core/Meshes/Node/Blocks/geometryTrigonometryBlock\";\r\nimport { GeometryElbowBlock } from \"core/Meshes/Node/Blocks/geometryElbowBlock\";\r\nimport { SetMaterialIDBlock } from \"core/Meshes/Node/Blocks/Set/setMaterialIDBlock\";\r\nimport { InstantiateOnVerticesBlock } from \"core/Meshes/Node/Blocks/Instances/instantiateOnVerticesBlock\";\r\nimport { InstantiateOnFacesBlock } from \"core/Meshes/Node/Blocks/Instances/instantiateOnFacesBlock\";\r\nimport { InstantiateOnVolumeBlock } from \"core/Meshes/Node/Blocks/Instances/instantiateOnVolumeBlock\";\r\nimport { InstantiateBlock } from \"core/Meshes/Node/Blocks/Instances/instantiateBlock\";\r\nimport { DebugBlock } from \"core/Meshes/Node/Blocks/debugBlock\";\r\nimport { TeleportInBlock } from \"core/Meshes/Node/Blocks/Teleport/teleportInBlock\";\r\nimport { TeleportOutBlock } from \"core/Meshes/Node/Blocks/Teleport/teleportOutBlock\";\r\nimport { MapRangeBlock } from \"core/Meshes/Node/Blocks/mapRangeBlock\";\r\nimport { GeometryOptimizeBlock } from \"core/Meshes/Node/Blocks/geometryOptimizeBlock\";\r\nimport { IntFloatConverterBlock } from \"core/Meshes/Node/Blocks/intFloatConverterBlock\";\r\nimport { ConditionBlock, ConditionBlockTests } from \"core/Meshes/Node/Blocks/conditionBlock\";\r\nimport { InstantiateLinearBlock } from \"core/Meshes/Node/Blocks/Instances/instantiateLinearBlock\";\r\nimport { InstantiateRadialBlock } from \"core/Meshes/Node/Blocks/Instances/instantiateRadialBlock\";\r\nimport { GeometryCollectionBlock } from \"core/Meshes/Node/Blocks/geometryCollectionBlock\";\r\nimport { GeometryInfoBlock } from \"core/Meshes/Node/Blocks/geometryInfoBlock\";\r\nimport { MappingBlock } from \"core/Meshes/Node/Blocks/mappingBlock\";\r\nimport { MatrixComposeBlock } from \"core/Meshes/Node/Blocks/matrixComposeBlock\";\r\nimport { GeometryTextureBlock } from \"core/Meshes/Node/Blocks/Textures/geometryTextureBlock\";\r\nimport { GeometryTextureFetchBlock } from \"core/Meshes/Node/Blocks/Textures/geometryTextureFetchBlock\";\r\nimport { BoundingBlock } from \"core/Meshes/Node/Blocks/boundingBlock\";\r\nimport { BooleanGeometryBlock } from \"core/Meshes/Node/Blocks/booleanGeometryBlock\";\r\nimport { GeometryArcTan2Block } from \"core/Meshes/Node/Blocks/geometryArcTan2Block\";\r\nimport { GeometryLerpBlock } from \"core/Meshes/Node/Blocks/geometryLerpBlock\";\r\nimport { GeometryNLerpBlock } from \"core/Meshes/Node/Blocks/geometryNLerpBlock\";\r\nimport { GeometrySmoothStepBlock } from \"core/Meshes/Node/Blocks/geometrySmoothStepBlock\";\r\nimport { GeometryStepBlock } from \"core/Meshes/Node/Blocks/geometryStepBlock\";\r\nimport { GeometryModBlock } from \"core/Meshes/Node/Blocks/geometryModBlock\";\r\nimport { GeometryPowBlock } from \"core/Meshes/Node/Blocks/geometryPowBlock\";\r\nimport { GeometryClampBlock } from \"core/Meshes/Node/Blocks/geometryClampBlock\";\r\nimport { GeometryCrossBlock } from \"core/Meshes/Node/Blocks/geometryCrossBlock\";\r\nimport { GeometryCurveBlock } from \"core/Meshes/Node/Blocks/geometryCurveBlock\";\r\nimport { GeometryDesaturateBlock } from \"core/Meshes/Node/Blocks/geometryDesaturateBlock\";\r\nimport { GeometryPosterizeBlock } from \"core/Meshes/Node/Blocks/geometryPosterizeBlock\";\r\nimport { GeometryDistanceBlock } from \"core/Meshes/Node/Blocks/geometryDistanceBlock\";\r\nimport { GeometryDotBlock } from \"core/Meshes/Node/Blocks/geometryDotBlock\";\r\nimport { GeometryReplaceColorBlock } from \"core/Meshes/Node/Blocks/geometryReplaceColorBlock\";\r\nimport { GeometryRotate2dBlock } from \"core/Meshes/Node/Blocks/geometryRotate2dBlock\";\r\nimport { GeometryLengthBlock } from \"core/Meshes/Node/Blocks/geometryLengthBlock\";\r\nimport { GeometryInterceptorBlock } from \"core/Meshes/Node/Blocks/geometryInterceptorBlock\";\r\nimport { LatticeBlock } from \"core/Meshes/Node/Blocks/Set/latticeBlock\";\r\nimport { AggregatorBlock } from \"core/Meshes/Node/Blocks/Set/aggregatorBlock\";\r\nimport { CleanGeometryBlock } from \"core/Meshes/Node/Blocks/cleanGeometryBlock\";\r\n\r\n/**\r\n * Static class for BlockTools\r\n */\r\nexport class BlockTools {\r\n    public static GetBlockFromString(data: string) {\r\n        switch (data) {\r\n            case \"CleanGeometryBlock\":\r\n                return new CleanGeometryBlock(\"Clean\");\r\n            case \"AggregatorBlock\":\r\n                return new AggregatorBlock(\"Aggregator\");\r\n            case \"LatticeBlock\":\r\n                return new LatticeBlock(\"Lattice\");\r\n            case \"InterceptorBlock\":\r\n                return new GeometryInterceptorBlock(\"Interceptor\");\r\n            case \"Rotate2dBlock\":\r\n                return new GeometryRotate2dBlock(\"Rotate 2D\");\r\n            case \"LengthBlock\":\r\n                return new GeometryLengthBlock(\"Length\");\r\n            case \"DistanceBlock\":\r\n                return new GeometryDistanceBlock(\"Distance\");\r\n            case \"DotBlock\":\r\n                return new GeometryDotBlock(\"Dot\");\r\n            case \"PosterizeBlock\":\r\n                return new GeometryPosterizeBlock(\"Posterize\");\r\n            case \"ReplaceColorBlock\":\r\n                return new GeometryReplaceColorBlock(\"Replace Color\");\r\n            case \"DesaturateBlock\":\r\n                return new GeometryDesaturateBlock(\"Desaturate\");\r\n            case \"CurveBlock\":\r\n                return new GeometryCurveBlock(\"Curve\");\r\n            case \"CrossBlock\":\r\n                return new GeometryCrossBlock(\"Cross\");\r\n            case \"ClampBlock\":\r\n                return new GeometryClampBlock(\"Clamp\");\r\n            case \"BooleanBlock\":\r\n                return new BooleanGeometryBlock(\"Boolean\");\r\n            case \"TextureFetchBlock\":\r\n                return new GeometryTextureFetchBlock(\"Texture Fetch\");\r\n            case \"TextureBlock\":\r\n                return new GeometryTextureBlock(\"Texture\");\r\n            case \"BoundingBlock\":\r\n                return new BoundingBlock(\"Bounding\");\r\n            case \"MatrixComposeBlock\":\r\n                return new MatrixComposeBlock(\"Matrix Compose\");\r\n            case \"GeometryInfoBlock\":\r\n                return new GeometryInfoBlock(\"Geometry Info\");\r\n            case \"CollectionBlock\":\r\n                return new GeometryCollectionBlock(\"Collection\");\r\n            case \"OptimizeBlock\":\r\n                return new GeometryOptimizeBlock(\"Optimize\");\r\n            case \"NullBlock\":\r\n                return new NullBlock(\"Null\");\r\n            case \"TeleportInBlock\":\r\n                return new TeleportInBlock(\"Teleport In\");\r\n            case \"TeleportOutBlock\":\r\n                return new TeleportOutBlock(\"Teleport Out\");\r\n            case \"DebugBlock\":\r\n                return new DebugBlock(\"Debug\");\r\n            case \"IntFloatConverterBlock\":\r\n                return new IntFloatConverterBlock(\"Int/Float converter\");\r\n            case \"EqualBlock\": {\r\n                const block = new ConditionBlock(\"Equal\");\r\n                block.test = ConditionBlockTests.Equal;\r\n                return block;\r\n            }\r\n            case \"NotEqualBlock\": {\r\n                const block = new ConditionBlock(\"Not equal\");\r\n                block.test = ConditionBlockTests.NotEqual;\r\n                return block;\r\n            }\r\n            case \"LessThanBlock\": {\r\n                const block = new ConditionBlock(\"Less than\");\r\n                block.test = ConditionBlockTests.LessThan;\r\n                return block;\r\n            }\r\n            case \"LessOrEqualBlock\": {\r\n                const block = new ConditionBlock(\"Less or equal\");\r\n                block.test = ConditionBlockTests.LessOrEqual;\r\n                return block;\r\n            }\r\n            case \"GreaterThanBlock\": {\r\n                const block = new ConditionBlock(\"Greater than\");\r\n                block.test = ConditionBlockTests.GreaterThan;\r\n                return block;\r\n            }\r\n            case \"GreaterOrEqualBlock\": {\r\n                const block = new ConditionBlock(\"Greater or equal\");\r\n                block.test = ConditionBlockTests.GreaterOrEqual;\r\n                return block;\r\n            }\r\n            case \"XorBlock\": {\r\n                const block = new ConditionBlock(\"Xor\");\r\n                block.test = ConditionBlockTests.Xor;\r\n                return block;\r\n            }\r\n            case \"OrBlock\": {\r\n                const block = new ConditionBlock(\"Or\");\r\n                block.test = ConditionBlockTests.Or;\r\n                return block;\r\n            }\r\n            case \"AndBlock\": {\r\n                const block = new ConditionBlock(\"And\");\r\n                block.test = ConditionBlockTests.And;\r\n                return block;\r\n            }\r\n            case \"LerpBlock\":\r\n                return new GeometryLerpBlock(\"Lerp\");\r\n            case \"NLerpBlock\":\r\n                return new GeometryNLerpBlock(\"NLerp\");\r\n            case \"SmoothStepBlock\":\r\n                return new GeometrySmoothStepBlock(\"SmoothStep\");\r\n            case \"StepBlock\":\r\n                return new GeometryStepBlock(\"Step\");\r\n            case \"MappingBlock\":\r\n                return new MappingBlock(\"Mapping\");\r\n            case \"SetMaterialIDBlock\":\r\n                return new SetMaterialIDBlock(\"Set material ID\");\r\n            case \"InstantiateOnVolumeBlock\":\r\n                return new InstantiateOnVolumeBlock(\"Instantiate on volume\");\r\n            case \"InstantiateOnFacesBlock\":\r\n                return new InstantiateOnFacesBlock(\"Instantiate on faces\");\r\n            case \"InstantiateOnVerticesBlock\":\r\n                return new InstantiateOnVerticesBlock(\"Instantiate on vertices\");\r\n            case \"InstantiateBlock\":\r\n                return new InstantiateBlock(\"Instantiate\");\r\n            case \"MapRangeBlock\":\r\n                return new MapRangeBlock(\"Map Range\");\r\n            case \"NormalizeBlock\":\r\n                return new NormalizeVectorBlock(\"Normalize\");\r\n            case \"MeshBlock\":\r\n                return new MeshBlock(\"Mesh\");\r\n            case \"VectorConverterBlock\":\r\n                return new VectorConverterBlock(\"Converter\");\r\n            case \"TranslationBlock\":\r\n                return new TranslationBlock(\"Translation\");\r\n            case \"ScalingBlock\":\r\n                return new ScalingBlock(\"Scaling\");\r\n            case \"AlignBlock\":\r\n                return new AlignBlock(\"Align\");\r\n            case \"RotationXBlock\":\r\n                return new RotationXBlock(\"Rotation X\");\r\n            case \"RotationYBlock\":\r\n                return new RotationYBlock(\"Rotation Y\");\r\n            case \"RotationZBlock\":\r\n                return new RotationZBlock(\"Rotation Z\");\r\n            case \"ComputeNormalsBlock\":\r\n                return new ComputeNormalsBlock(\"Compute normals\");\r\n            case \"SetPositionsBlock\":\r\n                return new SetPositionsBlock(\"Set positions\");\r\n            case \"SetNormalsBlock\":\r\n                return new SetNormalsBlock(\"Set normals\");\r\n            case \"SetColorsBlock\":\r\n                return new SetColorsBlock(\"Set colors\");\r\n            case \"SetTangentsBlock\":\r\n                return new SetTangentsBlock(\"Set tangents\");\r\n            case \"SetUVsBlock\":\r\n                return new SetUVsBlock(\"Set UVs\");\r\n            case \"NoiseBlock\":\r\n                return new NoiseBlock(\"Noise\");\r\n            case \"RandomBlock\":\r\n                return new RandomBlock(\"Random\");\r\n            case \"GeometryOutputBlock\":\r\n                return new GeometryOutputBlock(\"Output\");\r\n            case \"GridBlock\":\r\n                return new GridBlock(\"Grid\");\r\n            case \"DiscBlock\":\r\n                return new DiscBlock(\"Disc\");\r\n            case \"IcoSphereBlock\":\r\n                return new IcoSphereBlock(\"IcoSphere\");\r\n            case \"BoxBlock\":\r\n                return new BoxBlock(\"Box\");\r\n            case \"TorusBlock\":\r\n                return new TorusBlock(\"Torus\");\r\n            case \"SphereBlock\":\r\n                return new SphereBlock(\"Sphere\");\r\n            case \"CylinderBlock\":\r\n                return new CylinderBlock(\"Cylinder\");\r\n            case \"CapsuleBlock\":\r\n                return new CapsuleBlock(\"Capsule\");\r\n            case \"PlaneBlock\":\r\n                return new PlaneBlock(\"Plane\");\r\n            case \"ElbowBlock\":\r\n                return new GeometryElbowBlock(\"\");\r\n            case \"MergeBlock\":\r\n                return new MergeGeometryBlock(\"Merge\");\r\n            case \"TransformBlock\":\r\n                return new GeometryTransformBlock(\"Transform\");\r\n            case \"ModBlock\":\r\n                return new GeometryModBlock(\"Mod\");\r\n            case \"PowBlock\":\r\n                return new GeometryPowBlock(\"Pow\");\r\n            case \"PositionsBlock\": {\r\n                const block = new GeometryInputBlock(\"Positions\");\r\n                block.contextualValue = NodeGeometryContextualSources.Positions;\r\n                return block;\r\n            }\r\n            case \"NormalsBlock\": {\r\n                const block = new GeometryInputBlock(\"Normals\");\r\n                block.contextualValue = NodeGeometryContextualSources.Normals;\r\n                return block;\r\n            }\r\n            case \"ColorsBlock\": {\r\n                const block = new GeometryInputBlock(\"Colors\");\r\n                block.contextualValue = NodeGeometryContextualSources.Colors;\r\n                return block;\r\n            }\r\n            case \"TangentsBlock\": {\r\n                const block = new GeometryInputBlock(\"Tangents\");\r\n                block.contextualValue = NodeGeometryContextualSources.Tangents;\r\n                return block;\r\n            }\r\n            case \"UVsBlock\": {\r\n                const block = new GeometryInputBlock(\"UVs\");\r\n                block.contextualValue = NodeGeometryContextualSources.UV;\r\n                return block;\r\n            }\r\n            case \"VertexIDBlock\": {\r\n                const block = new GeometryInputBlock(\"Vertex ID\");\r\n                block.contextualValue = NodeGeometryContextualSources.VertexID;\r\n                return block;\r\n            }\r\n            case \"LoopIDBlock\": {\r\n                const block = new GeometryInputBlock(\"Loop ID\");\r\n                block.contextualValue = NodeGeometryContextualSources.LoopID;\r\n                return block;\r\n            }\r\n            case \"InstanceIDBlock\": {\r\n                const block = new GeometryInputBlock(\"Instance ID\");\r\n                block.contextualValue = NodeGeometryContextualSources.InstanceID;\r\n                return block;\r\n            }\r\n            case \"GeometryIDBlock\": {\r\n                const block = new GeometryInputBlock(\"Geometry ID\");\r\n                block.contextualValue = NodeGeometryContextualSources.GeometryID;\r\n                return block;\r\n            }\r\n            case \"CollectionIDBlock\": {\r\n                const block = new GeometryInputBlock(\"Collection ID\");\r\n                block.contextualValue = NodeGeometryContextualSources.CollectionID;\r\n                return block;\r\n            }\r\n            case \"FaceIDBlock\": {\r\n                const block = new GeometryInputBlock(\"Face ID\");\r\n                block.contextualValue = NodeGeometryContextualSources.FaceID;\r\n                return block;\r\n            }\r\n            case \"LatticeIDBlock\": {\r\n                const block = new GeometryInputBlock(\"Lattice ID\");\r\n                block.contextualValue = NodeGeometryContextualSources.LatticeID;\r\n                return block;\r\n            }\r\n            case \"LatticeControlBlock\": {\r\n                const block = new GeometryInputBlock(\"Lattice Control\");\r\n                block.contextualValue = NodeGeometryContextualSources.LatticeControl;\r\n                return block;\r\n            }\r\n            case \"AddBlock\": {\r\n                const block = new MathBlock(\"Add\");\r\n                block.operation = MathBlockOperations.Add;\r\n                return block;\r\n            }\r\n            case \"SubtractBlock\": {\r\n                const block = new MathBlock(\"Subtract\");\r\n                block.operation = MathBlockOperations.Subtract;\r\n                return block;\r\n            }\r\n            case \"MultiplyBlock\": {\r\n                const block = new MathBlock(\"Multiply\");\r\n                block.operation = MathBlockOperations.Multiply;\r\n                return block;\r\n            }\r\n            case \"DivideBlock\": {\r\n                const block = new MathBlock(\"Divide\");\r\n                block.operation = MathBlockOperations.Divide;\r\n                return block;\r\n            }\r\n            case \"ToDegreesBlock\": {\r\n                const block = new GeometryTrigonometryBlock(\"To degrees\");\r\n                block.operation = GeometryTrigonometryBlockOperations.ToDegrees;\r\n                return block;\r\n            }\r\n            case \"ToRadiansBlock\": {\r\n                const block = new GeometryTrigonometryBlock(\"To radians\");\r\n                block.operation = GeometryTrigonometryBlockOperations.ToRadians;\r\n                return block;\r\n            }\r\n            case \"AbsBlock\": {\r\n                const block = new GeometryTrigonometryBlock(\"Abs\");\r\n                block.operation = GeometryTrigonometryBlockOperations.Abs;\r\n                return block;\r\n            }\r\n            case \"ArcCosBlock\": {\r\n                const block = new GeometryTrigonometryBlock(\"ArcCos\");\r\n                block.operation = GeometryTrigonometryBlockOperations.ArcCos;\r\n                return block;\r\n            }\r\n            case \"ArcSinBlock\": {\r\n                const block = new GeometryTrigonometryBlock(\"ArcSin\");\r\n                block.operation = GeometryTrigonometryBlockOperations.ArcSin;\r\n                return block;\r\n            }\r\n            case \"ArcTanBlock\": {\r\n                const block = new GeometryTrigonometryBlock(\"ArcTan\");\r\n                block.operation = GeometryTrigonometryBlockOperations.ArcTan;\r\n                return block;\r\n            }\r\n            case \"ArcTan2Block\": {\r\n                return new GeometryArcTan2Block(\"ArcTan2\");\r\n            }\r\n            case \"CosBlock\": {\r\n                const block = new GeometryTrigonometryBlock(\"Cos\");\r\n                block.operation = GeometryTrigonometryBlockOperations.Cos;\r\n                return block;\r\n            }\r\n            case \"ExpBlock\": {\r\n                const block = new GeometryTrigonometryBlock(\"Exp\");\r\n                block.operation = GeometryTrigonometryBlockOperations.Exp;\r\n                return block;\r\n            }\r\n            case \"Exp2Block\": {\r\n                const block = new GeometryTrigonometryBlock(\"Exp2\");\r\n                block.operation = GeometryTrigonometryBlockOperations.Exp2;\r\n                return block;\r\n            }\r\n            case \"LogBlock\": {\r\n                const block = new GeometryTrigonometryBlock(\"Log\");\r\n                block.operation = GeometryTrigonometryBlockOperations.Log;\r\n                return block;\r\n            }\r\n            case \"SinBlock\": {\r\n                const block = new GeometryTrigonometryBlock(\"Sin\");\r\n                block.operation = GeometryTrigonometryBlockOperations.Sin;\r\n                return block;\r\n            }\r\n            case \"SignBlock\": {\r\n                const block = new GeometryTrigonometryBlock(\"Sign\");\r\n                block.operation = GeometryTrigonometryBlockOperations.Sign;\r\n                return block;\r\n            }\r\n            case \"TanBlock\": {\r\n                const block = new GeometryTrigonometryBlock(\"Tan\");\r\n                block.operation = GeometryTrigonometryBlockOperations.Tan;\r\n                return block;\r\n            }\r\n            case \"SqrtBlock\": {\r\n                const block = new GeometryTrigonometryBlock(\"Sqrt\");\r\n                block.operation = GeometryTrigonometryBlockOperations.Sqrt;\r\n                return block;\r\n            }\r\n            case \"NegateBlock\": {\r\n                const block = new GeometryTrigonometryBlock(\"Negate\");\r\n                block.operation = GeometryTrigonometryBlockOperations.Negate;\r\n                return block;\r\n            }\r\n            case \"OneMinusBlock\": {\r\n                const block = new GeometryTrigonometryBlock(\"OneMinus\");\r\n                block.operation = GeometryTrigonometryBlockOperations.OneMinus;\r\n                return block;\r\n            }\r\n            case \"ReciprocalBlock\": {\r\n                const block = new GeometryTrigonometryBlock(\"Reciprocal\");\r\n                block.operation = GeometryTrigonometryBlockOperations.Reciprocal;\r\n                return block;\r\n            }\r\n            case \"RoundBlock\": {\r\n                const block = new GeometryTrigonometryBlock(\"Round\");\r\n                block.operation = GeometryTrigonometryBlockOperations.Round;\r\n                return block;\r\n            }\r\n            case \"FloorBlock\": {\r\n                const block = new GeometryTrigonometryBlock(\"Floor\");\r\n                block.operation = GeometryTrigonometryBlockOperations.Floor;\r\n                return block;\r\n            }\r\n            case \"FractBlock\": {\r\n                const block = new GeometryTrigonometryBlock(\"Fract\");\r\n                block.operation = GeometryTrigonometryBlockOperations.Fract;\r\n                return block;\r\n            }\r\n            case \"CeilingBlock\": {\r\n                const block = new GeometryTrigonometryBlock(\"Ceiling\");\r\n                block.operation = GeometryTrigonometryBlockOperations.Ceiling;\r\n                return block;\r\n            }\r\n            case \"MinBlock\": {\r\n                const block = new MathBlock(\"Min\");\r\n                block.operation = MathBlockOperations.Min;\r\n                return block;\r\n            }\r\n            case \"MaxBlock\": {\r\n                const block = new MathBlock(\"Max\");\r\n                block.operation = MathBlockOperations.Max;\r\n                return block;\r\n            }\r\n            case \"InstantiateLinearBlock\": {\r\n                return new InstantiateLinearBlock(\"Instantiate Linear\");\r\n            }\r\n            case \"InstantiateRadialBlock\": {\r\n                return new InstantiateRadialBlock(\"Instantiate Radial\");\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    public static GetColorFromConnectionNodeType(type: NodeGeometryBlockConnectionPointTypes) {\r\n        let color = \"#880000\";\r\n        switch (type) {\r\n            case NodeGeometryBlockConnectionPointTypes.Int:\r\n                color = \"#51b0e5\";\r\n                break;\r\n            case NodeGeometryBlockConnectionPointTypes.Float:\r\n                color = \"#cb9e27\";\r\n                break;\r\n            case NodeGeometryBlockConnectionPointTypes.Vector2:\r\n                color = \"#16bcb1\";\r\n                break;\r\n            case NodeGeometryBlockConnectionPointTypes.Vector3:\r\n                color = \"#b786cb\";\r\n                break;\r\n            case NodeGeometryBlockConnectionPointTypes.Vector4:\r\n                color = \"#be5126\";\r\n                break;\r\n            case NodeGeometryBlockConnectionPointTypes.Matrix:\r\n                color = \"#591990\";\r\n                break;\r\n            case NodeGeometryBlockConnectionPointTypes.Geometry:\r\n                color = \"#84995c\";\r\n                break;\r\n            case NodeGeometryBlockConnectionPointTypes.Texture:\r\n                color = \"#f28e0a\";\r\n                break;\r\n        }\r\n\r\n        return color;\r\n    }\r\n\r\n    public static GetConnectionNodeTypeFromString(type: string) {\r\n        switch (type) {\r\n            case \"Int\":\r\n                return NodeGeometryBlockConnectionPointTypes.Int;\r\n            case \"Float\":\r\n                return NodeGeometryBlockConnectionPointTypes.Float;\r\n            case \"Vector2\":\r\n                return NodeGeometryBlockConnectionPointTypes.Vector2;\r\n            case \"Vector3\":\r\n                return NodeGeometryBlockConnectionPointTypes.Vector3;\r\n            case \"Vector4\":\r\n                return NodeGeometryBlockConnectionPointTypes.Vector4;\r\n            case \"Matrix\":\r\n                return NodeGeometryBlockConnectionPointTypes.Matrix;\r\n        }\r\n\r\n        return NodeGeometryBlockConnectionPointTypes.AutoDetect;\r\n    }\r\n\r\n    public static GetStringFromConnectionNodeType(type: NodeGeometryBlockConnectionPointTypes) {\r\n        switch (type) {\r\n            case NodeGeometryBlockConnectionPointTypes.Int:\r\n                return \"Int\";\r\n            case NodeGeometryBlockConnectionPointTypes.Float:\r\n                return \"Float\";\r\n            case NodeGeometryBlockConnectionPointTypes.Vector2:\r\n                return \"Vector2\";\r\n            case NodeGeometryBlockConnectionPointTypes.Vector3:\r\n                return \"Vector3\";\r\n            case NodeGeometryBlockConnectionPointTypes.Vector4:\r\n                return \"Vector4\";\r\n            case NodeGeometryBlockConnectionPointTypes.Matrix:\r\n                return \"Matrix\";\r\n        }\r\n\r\n        return \"\";\r\n    }\r\n}\r\n"]}