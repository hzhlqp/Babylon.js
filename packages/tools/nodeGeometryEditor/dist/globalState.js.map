{"version":3,"file":"globalState.js","sourceRoot":"","sources":["../src/globalState.ts"],"names":[],"mappings":"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","sourcesContent":["import type { NodeGeometry } from \"core/Meshes/Node/nodeGeometry\";\r\nimport { Observable } from \"core/Misc/observable\";\r\nimport type { LogEntry } from \"./components/log/logComponent\";\r\nimport { DataStorage } from \"core/Misc/dataStorage\";\r\nimport { Color4 } from \"core/Maths/math.color\";\r\nimport { RegisterElbowSupport } from \"./graphSystem/registerElbowSupport\";\r\nimport { RegisterNodePortDesign } from \"./graphSystem/registerNodePortDesign\";\r\nimport type { GraphNode } from \"shared-ui-components/nodeGraphSystem/graphNode\";\r\nimport type { GraphFrame } from \"shared-ui-components/nodeGraphSystem/graphFrame\";\r\nimport type { Nullable } from \"core/types\";\r\nimport { LockObject } from \"shared-ui-components/tabs/propertyGrids/lockObject\";\r\nimport { StateManager } from \"shared-ui-components/nodeGraphSystem/stateManager\";\r\nimport { RegisterDefaultInput } from \"./graphSystem/registerDefaultInput\";\r\nimport { RegisterExportData } from \"./graphSystem/registerExportData\";\r\nimport type { NodeGeometryBlock } from \"core/Meshes/Node/nodeGeometryBlock\";\r\nimport { PreviewMode } from \"./components/preview/previewMode\";\r\nimport { RegisterDebugSupport } from \"./graphSystem/registerDebugSupport\";\r\n\r\nexport class GlobalState {\r\n    private _previewMode = PreviewMode.Normal;\r\n\r\n    nodeGeometry: NodeGeometry;\r\n    hostElement: HTMLElement;\r\n    hostDocument: Document;\r\n    hostWindow: Window;\r\n    stateManager: StateManager;\r\n    onBuiltObservable = new Observable<void>();\r\n    onResetRequiredObservable = new Observable<boolean>();\r\n    onClearUndoStack = new Observable<void>();\r\n    onZoomToFitRequiredObservable = new Observable<void>();\r\n    onReOrganizedRequiredObservable = new Observable<void>();\r\n    onPreviewModeChanged = new Observable<void>();\r\n    onLogRequiredObservable = new Observable<LogEntry>();\r\n    onIsLoadingChanged = new Observable<boolean>();\r\n    onPreviewBackgroundChanged = new Observable<void>();\r\n    onFrame = new Observable<void>();\r\n    onAnimationCommandActivated = new Observable<void>();\r\n    onImportFrameObservable = new Observable<any>();\r\n    onPopupClosedObservable = new Observable<void>();\r\n    onGetNodeFromBlock: (block: NodeGeometryBlock) => GraphNode;\r\n    listOfCustomPreviewFiles: File[] = [];\r\n    rotatePreview: boolean;\r\n    backgroundColor: Color4;\r\n    lockObject = new LockObject();\r\n    pointerOverCanvas: boolean = false;\r\n    onRefreshPreviewMeshControlComponentRequiredObservable = new Observable<void>();\r\n    onExportToGLBRequired = new Observable<void>();\r\n\r\n    customSave?: { label: string; action: (data: string) => Promise<void> };\r\n\r\n    resyncHandler?: () => void;\r\n\r\n    public get previewMode() {\r\n        return this._previewMode;\r\n    }\r\n\r\n    public set previewMode(value: PreviewMode) {\r\n        this._previewMode = value;\r\n        DataStorage.WriteNumber(\"PreviewMode\", value);\r\n        this.onPreviewModeChanged.notifyObservers();\r\n    }\r\n\r\n    public constructor() {\r\n        this._previewMode = DataStorage.ReadNumber(\"PreviewMode\", PreviewMode.Normal);\r\n        this.stateManager = new StateManager();\r\n        this.stateManager.data = this;\r\n        this.stateManager.lockObject = this.lockObject;\r\n        RegisterElbowSupport(this.stateManager);\r\n        RegisterDebugSupport(this.stateManager);\r\n        RegisterNodePortDesign(this.stateManager);\r\n        RegisterDefaultInput(this.stateManager);\r\n        RegisterExportData(this.stateManager);\r\n\r\n        const r = DataStorage.ReadNumber(\"BackgroundColorR\", 0.12549019607843137);\r\n        const g = DataStorage.ReadNumber(\"BackgroundColorG\", 0.09803921568627451);\r\n        const b = DataStorage.ReadNumber(\"BackgroundColorB\", 0.25098039215686274);\r\n        this.backgroundColor = new Color4(r, g, b, 1.0);\r\n    }\r\n\r\n    storeEditorData(serializationObject: any, frame?: Nullable<GraphFrame>) {\r\n        this.stateManager.storeEditorData(serializationObject, frame);\r\n    }\r\n}\r\n"]}