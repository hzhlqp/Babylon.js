{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["#!/usr/bin/env node\r\n/* eslint-disable no-console */\r\nimport { addJsExtensionsToCompiledFilesCommand } from \"./addJSToCompiledFiles.js\";\r\nimport { generateDeclaration } from \"./generateDeclaration.js\";\r\nimport { transformLtsCommand } from \"./ltsTransformer.js\";\r\nimport { prepareES6Build } from \"./prepareEs6Build.js\";\r\nimport { checkArgs, copyFolder, externalArgs, populateEnvironment } from \"./utils.js\";\r\nimport { devWatch } from \"./devWatcher.js\";\r\nimport { processAssets } from \"./copyAssets.js\";\r\nimport { prepareSnapshot } from \"./prepareSnapshot.js\";\r\nimport { umdPackageMapping } from \"./packageMapping.js\";\r\nimport { updateEngineVersion } from \"./updateEngineVersion.js\";\r\nimport { declarationsEs6 } from \"./declarationsEs6.js\";\r\n// public API\r\nimport transformer from \"./pathTransform.js\";\r\nimport * as webpackTools from \"./webpackTools.js\";\r\nimport * as fs from \"fs\";\r\nimport * as path from \"path\";\r\n\r\nconst cliCommand = checkArgs([\"-c\", \"--command\"], false, true) as string;\r\nrunCommand(cliCommand);\r\n\r\nfunction processConfigFile() {\r\n    const baseDir = path.resolve(\".\");\r\n    const configFile = (checkArgs([\"-f\", \"--file\"], false, true) as string) || \"config.tasks.json\";\r\n    if (configFile) {\r\n        console.log(`Processing config file: ${configFile}`);\r\n        // read the json file using fs\r\n        const config = JSON.parse(fs.readFileSync(path.resolve(baseDir, configFile), \"utf8\"));\r\n        if (config) {\r\n            if (config.commands) {\r\n                for (const command of config.commands as { command: string; args?: string[] }[]) {\r\n                    // populate the args\r\n                    externalArgs.length = 0;\r\n                    if (command.args) {\r\n                        externalArgs.push(...(command.args as string[]));\r\n                    }\r\n                    runCommand(command.command);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction runCommand(command: string) {\r\n    if (command) {\r\n        console.log(\"Babylon.js build tools\");\r\n        console.log(`Command: ${command}`);\r\n        switch (command) {\r\n            case \"run-tasks\":\r\n            case \"rt\":\r\n                processConfigFile();\r\n                break;\r\n            case \"add-js-to-es6\":\r\n            case \"ajte\":\r\n                addJsExtensionsToCompiledFilesCommand();\r\n                break;\r\n            case \"process-umd-declaration\":\r\n            case \"pud\":\r\n                generateDeclaration();\r\n                break;\r\n            case \"build-shaders\":\r\n            case \"bs\":\r\n                processAssets({ extensions: [\"fx\"] });\r\n                break;\r\n            case \"transform-lts\":\r\n            case \"tlts\":\r\n                transformLtsCommand();\r\n                break;\r\n            case \"prepare-es6-build\":\r\n            case \"peb\":\r\n                prepareES6Build().catch((e) => {\r\n                    console.error(e);\r\n                    process.exit(1);\r\n                });\r\n                break;\r\n            case \"dev-watch\":\r\n            case \"dw\":\r\n                devWatch();\r\n                break;\r\n            case \"process-assets\":\r\n            case \"pa\":\r\n                processAssets();\r\n                break;\r\n            case \"prepare-snapshot\":\r\n            case \"ps\":\r\n                prepareSnapshot();\r\n                break;\r\n            case \"update-engine-version\":\r\n            case \"uev\":\r\n                updateEngineVersion();\r\n                break;\r\n            case \"declarations-es6\":\r\n            case \"des6\":\r\n                declarationsEs6();\r\n                break;\r\n            case \"copy\":\r\n            case \"cp\":\r\n                copyFolder(checkArgs([\"-f\", \"--from\"], false, true) as string, checkArgs([\"-t\", \"--to\"], false, true) as string);\r\n                break;\r\n            default:\r\n                console.log(`Unknown command: ${command}`);\r\n                break;\r\n        }\r\n    }\r\n}\r\n\r\nexport { transformer, webpackTools, checkArgs, umdPackageMapping, populateEnvironment };\r\n"]}