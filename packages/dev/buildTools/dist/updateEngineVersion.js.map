{"version":3,"file":"updateEngineVersion.js","sourceRoot":"","sources":["../src/updateEngineVersion.ts"],"names":[],"mappings":";;;AAAA,6BAA6B;AAC7B,yBAAyB;AACzB,yCAA+C;AAExC,MAAM,mBAAmB,GAAG,KAAK,IAAI,EAAE;IAC1C,MAAM,aAAa,GAAG,IAAA,4BAAiB,GAAE,CAAC;IAC1C,6BAA6B;IAC7B,MAAM,OAAO,GAAG,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,UAAU,EAAE,KAAK,EAAE,MAAM,EAAE,cAAc,CAAC,EAAE,OAAO,CAAC,CAAC;IAC9G,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACxC,MAAM,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC;IAEpC,wBAAwB;IACxB,MAAM,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,UAAU,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,mBAAmB,CAAC,CAAC;IACtH,MAAM,kBAAkB,GAAG,EAAE,CAAC,YAAY,CAAC,kBAAkB,EAAE,OAAO,CAAC,CAAC;IACxE,MAAM,KAAK,GAAG,kBAAkB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;IAC1D,IAAI,CAAC,KAAK,EAAE;QACR,MAAM,IAAI,KAAK,CAAC,uDAAuD,CAAC,CAAC;KAC5E;IACD,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IACzC,MAAM,qBAAqB,GAAG,kBAAkB,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;IAC1E,EAAE,CAAC,aAAa,CAAC,kBAAkB,EAAE,qBAAqB,CAAC,CAAC;AAChE,CAAC,CAAC;AAjBW,QAAA,mBAAmB,uBAiB9B","sourcesContent":["import * as path from \"path\";\r\nimport * as fs from \"fs\";\r\nimport { findRootDirectory } from \"./utils.js\";\r\n\r\nexport const updateEngineVersion = async () => {\r\n    const baseDirectory = findRootDirectory();\r\n    // get @dev/core package.json\r\n    const rawdata = fs.readFileSync(path.join(baseDirectory, \"packages\", \"dev\", \"core\", \"package.json\"), \"utf-8\");\r\n    const packageJson = JSON.parse(rawdata);\r\n    const version = packageJson.version;\r\n\r\n    // get abstractEngine.ts\r\n    const abstractEngineFile = path.join(baseDirectory, \"packages\", \"dev\", \"core\", \"src\", \"Engines\", \"abstractEngine.ts\");\r\n    const abstractEngineData = fs.readFileSync(abstractEngineFile, \"utf-8\");\r\n    const array = /\"babylonjs@(.*)\"/.exec(abstractEngineData);\r\n    if (!array) {\r\n        throw new Error(\"Could not find babylonjs version in abstractEngine.ts\");\r\n    }\r\n    const regexp = new RegExp(array[1], \"g\");\r\n    const newAbstractEngineData = abstractEngineData.replace(regexp, version);\r\n    fs.writeFileSync(abstractEngineFile, newAbstractEngineData);\r\n};\r\n"]}