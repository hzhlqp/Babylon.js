{"version":3,"file":"indentedTextLineComponent.js","sourceRoot":"","sources":["../../src/lines/indentedTextLineComponent.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAW/B,MAAM,OAAO,yBAA0B,SAAQ,KAAK,CAAC,SAA0C;IAC3F,YAAY,KAAsC;QAC9C,KAAK,CAAC,KAAK,CAAC,CAAC;IACjB,CAAC;IAED,MAAM;QACF,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE;YAChB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;YACtC,OAAO;SACV;QACD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YACpB,OAAO;SACV;QAED,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;IACxB,CAAC;IAED,aAAa;QACT,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE;YACrC,OAAO,CACH,cAAK,SAAS,EAAC,YAAY,EAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,YAC5E,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,SAAS,GACrD,CACT,CAAC;SACL;QACD,OAAO,CACH,cAAK,SAAS,EAAC,OAAO,EAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,YACrG,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,SAAS,GAC5B,CACT,CAAC;IACN,CAAC;IAEQ,MAAM;QACX,OAAO,CACH,cAAK,SAAS,EAAE,WAAW,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,YAC1J,IAAI,CAAC,aAAa,EAAE,GACnB,CACT,CAAC;IACN,CAAC;CACJ","sourcesContent":["import * as React from \"react\";\r\n\r\ninterface IIndentedTextLineComponentProps {\r\n    value?: string;\r\n    color?: string;\r\n    underline?: boolean;\r\n    onLink?: () => void;\r\n    url?: string;\r\n    additionalClass?: string;\r\n}\r\n\r\nexport class IndentedTextLineComponent extends React.Component<IIndentedTextLineComponentProps> {\r\n    constructor(props: IIndentedTextLineComponentProps) {\r\n        super(props);\r\n    }\r\n\r\n    onLink() {\r\n        if (this.props.url) {\r\n            window.open(this.props.url, \"_blank\");\r\n            return;\r\n        }\r\n        if (!this.props.onLink) {\r\n            return;\r\n        }\r\n\r\n        this.props.onLink();\r\n    }\r\n\r\n    renderContent() {\r\n        if (this.props.onLink || this.props.url) {\r\n            return (\r\n                <div className=\"link-value\" title={this.props.value} onClick={() => this.onLink()}>\r\n                    {this.props.url ? \"doc\" : this.props.value || \"no name\"}\r\n                </div>\r\n            );\r\n        }\r\n        return (\r\n            <div className=\"value\" title={this.props.value} style={{ color: this.props.color ? this.props.color : \"\" }}>\r\n                {this.props.value || \"no name\"}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    override render() {\r\n        return (\r\n            <div className={\"indented \" + (this.props.underline ? \"textLine underline\" : \"textLine\" + (this.props.additionalClass ? \" \" + this.props.additionalClass : \"\"))}>\r\n                {this.renderContent()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]}