{"version":3,"file":"matrixLineComponent.js","sourceRoot":"","sources":["../../src/lines/matrixLineComponent.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport type { Vector3, Vector4 } from \"core/Maths/math.vector\";\r\nimport { Matrix, Quaternion } from \"core/Maths/math.vector\";\r\nimport type { Observable } from \"core/Misc/observable\";\r\nimport { Vector4LineComponent } from \"./vector4LineComponent\";\r\nimport type { PropertyChangedEvent } from \"../propertyChangedEvent\";\r\nimport { OptionsLine } from \"./optionsLineComponent\";\r\nimport { SliderLineComponent } from \"./sliderLineComponent\";\r\nimport type { LockObject } from \"../tabs/propertyGrids/lockObject\";\r\n\r\ninterface IMatrixLineComponentProps {\r\n    label: string;\r\n    target: any;\r\n    propertyName: string;\r\n    step?: number;\r\n    onChange?: (newValue: Matrix) => void;\r\n    onModeChange?: (mode: number) => void;\r\n    onPropertyChangedObservable?: Observable<PropertyChangedEvent>;\r\n    mode?: number;\r\n    lockObject: LockObject;\r\n}\r\n\r\nexport class MatrixLineComponent extends React.Component<IMatrixLineComponentProps, { value: Matrix; mode: number; angle: number }> {\r\n    private _localChange = false;\r\n\r\n    constructor(props: IMatrixLineComponentProps) {\r\n        super(props);\r\n\r\n        const matrix: Matrix = this.props.target[this.props.propertyName].clone();\r\n\r\n        let angle = 0;\r\n\r\n        if (this.props.mode) {\r\n            const quat = new Quaternion();\r\n            matrix.decompose(undefined, quat);\r\n\r\n            const euler = quat.toEulerAngles();\r\n\r\n            switch (this.props.mode) {\r\n                case 1:\r\n                    angle = euler.x;\r\n                    break;\r\n                case 2:\r\n                    angle = euler.y;\r\n                    break;\r\n                case 3:\r\n                    angle = euler.z;\r\n                    break;\r\n            }\r\n        }\r\n\r\n        this.state = { value: matrix, mode: this.props.mode || 0, angle: angle };\r\n    }\r\n\r\n    override shouldComponentUpdate(nextProps: IMatrixLineComponentProps, nextState: { value: Matrix; mode: number; angle: number }) {\r\n        const nextPropsValue = nextProps.target[nextProps.propertyName];\r\n\r\n        if (!nextPropsValue.equals(nextState.value) || this._localChange) {\r\n            nextState.value = nextPropsValue.clone();\r\n            this._localChange = false;\r\n            return true;\r\n        }\r\n        return nextState.mode !== this.state.mode || nextState.angle !== this.state.angle;\r\n    }\r\n\r\n    raiseOnPropertyChanged(previousValue: Vector3) {\r\n        if (this.props.onChange) {\r\n            this.props.onChange(this.state.value);\r\n        }\r\n\r\n        if (!this.props.onPropertyChangedObservable) {\r\n            return;\r\n        }\r\n        this.props.onPropertyChangedObservable.notifyObservers({\r\n            object: this.props.target,\r\n            property: this.props.propertyName,\r\n            value: this.state.value,\r\n            initialValue: previousValue,\r\n        });\r\n    }\r\n\r\n    updateMatrix() {\r\n        const store = this.props.target[this.props.propertyName].clone();\r\n        this.props.target[this.props.propertyName] = this.state.value;\r\n\r\n        this.setState({ value: store });\r\n\r\n        this.raiseOnPropertyChanged(store);\r\n    }\r\n\r\n    updateRow(value: Vector4, row: number) {\r\n        this._localChange = true;\r\n\r\n        this.state.value.setRow(row, value);\r\n        this.updateMatrix();\r\n    }\r\n\r\n    updateBasedOnMode(value: number) {\r\n        switch (this.state.mode) {\r\n            case 1: {\r\n                Matrix.RotationXToRef(this.state.angle, this.state.value);\r\n                break;\r\n            }\r\n            case 2: {\r\n                Matrix.RotationYToRef(this.state.angle, this.state.value);\r\n                break;\r\n            }\r\n            case 3: {\r\n                Matrix.RotationZToRef(this.state.angle, this.state.value);\r\n                break;\r\n            }\r\n        }\r\n        this.updateMatrix();\r\n\r\n        this.setState({ angle: value });\r\n    }\r\n\r\n    override render() {\r\n        const modeOptions = [\r\n            { label: \"User-defined\", value: 0 },\r\n            { label: \"Rotation over X axis\", value: 1 },\r\n            { label: \"Rotation over Y axis\", value: 2 },\r\n            { label: \"Rotation over Z axis\", value: 3 },\r\n        ];\r\n\r\n        return (\r\n            <div className=\"vector3Line\">\r\n                <div className=\"firstLine\">\r\n                    <div className=\"label\" title={this.props.label}>\r\n                        {this.props.label}\r\n                    </div>\r\n                </div>\r\n                <div className=\"secondLine\">\r\n                    <OptionsLine\r\n                        label=\"Mode\"\r\n                        className=\"no-right-margin\"\r\n                        options={modeOptions}\r\n                        target={this}\r\n                        noDirectUpdate={true}\r\n                        propertyName={\"\"}\r\n                        extractValue={() => {\r\n                            return this.state.mode;\r\n                        }}\r\n                        onSelect={(value: any) => {\r\n                            this.props.target[this.props.propertyName] = Matrix.Identity();\r\n                            Matrix.IdentityToRef(this.state.value);\r\n                            this.setState({ mode: value, angle: 0 });\r\n\r\n                            this.updateMatrix();\r\n\r\n                            if (this.props.onModeChange) {\r\n                                this.props.onModeChange(value);\r\n                            }\r\n                        }}\r\n                    />\r\n                </div>\r\n                {this.state.mode === 0 && (\r\n                    <div className=\"secondLine\">\r\n                        <Vector4LineComponent\r\n                            lockObject={this.props.lockObject}\r\n                            label=\"Row #0\"\r\n                            value={this.state.value.getRow(0)!}\r\n                            onChange={(value) => this.updateRow(value, 0)}\r\n                        />\r\n                        <Vector4LineComponent\r\n                            lockObject={this.props.lockObject}\r\n                            label=\"Row #1\"\r\n                            value={this.state.value.getRow(1)!}\r\n                            onChange={(value) => this.updateRow(value, 1)}\r\n                        />\r\n                        <Vector4LineComponent\r\n                            lockObject={this.props.lockObject}\r\n                            label=\"Row #2\"\r\n                            value={this.state.value.getRow(2)!}\r\n                            onChange={(value) => this.updateRow(value, 2)}\r\n                        />\r\n                        <Vector4LineComponent\r\n                            lockObject={this.props.lockObject}\r\n                            label=\"Row #3\"\r\n                            value={this.state.value.getRow(3)!}\r\n                            onChange={(value) => this.updateRow(value, 3)}\r\n                        />\r\n                    </div>\r\n                )}\r\n                {this.state.mode !== 0 && (\r\n                    <div className=\"secondLine\">\r\n                        <SliderLineComponent\r\n                            label=\"Angle\"\r\n                            lockObject={this.props.lockObject}\r\n                            minimum={0}\r\n                            maximum={2 * Math.PI}\r\n                            useEuler={true}\r\n                            step={0.1}\r\n                            directValue={this.state.angle}\r\n                            onChange={(value) => this.updateBasedOnMode(value)}\r\n                        />\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]}