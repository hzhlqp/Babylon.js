{"version":3,"file":"GraphLine.js","sourceRoot":"","sources":["../../../src/components/reactGraphSystem/GraphLine.tsx"],"names":[],"mappings":";AACA,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAC;AAmCpD,MAAM,CAAC,MAAM,aAAa,GAAG,OAAO,CAAC;AAErC;;;;;GAKG;AACH,MAAM,CAAC,MAAM,SAAS,GAAwB,CAAC,KAAsB,EAAE,EAAE;IACrE,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,WAAW,GAAG,IAAI,EAAE,GAAG,KAAK,CAAC;IACnE,MAAM,EAAE,cAAc,EAAE,GAAG,eAAe,EAAE,CAAC;IAE7C,4CAA4C;IAC5C,MAAM,OAAO,GAAG,GAAG,EAAE;QACjB,EAAE,IAAI,cAAc,IAAI,cAAc,CAAC,EAAE,CAAC,CAAC;IAC/C,CAAC,CAAC;IAEF,MAAM,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;IACzB,MAAM,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;IAEzB,OAAO,CACH,eACI,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,EAC9C,WAAW,EAAE,CAAC,EACd,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,EACrC,OAAO,EAAE,OAAO,EAChB,SAAS,EAAE,WAAW,CAAC,CAAC,CAAC,QAAQ,aAAa,GAAG,CAAC,CAAC,CAAC,EAAE,GACxD,CACL,CAAC;AACN,CAAC,CAAC","sourcesContent":["import type { FC } from \"react\";\r\nimport { useGraphContext } from \"./useGraphContext\";\r\n/**\r\n * props for the GraphLine component\r\n */\r\nexport interface IGraphLineProps {\r\n    /**\r\n     * id of the line. temporary lines can have no id\r\n     */\r\n    id?: string;\r\n    /**\r\n     * starting x pos of the line\r\n     */\r\n    x1: number;\r\n    /**\r\n     * ending x pos of the line\r\n     */\r\n    x2: number;\r\n    /**\r\n     * starting y pos of the line\r\n     */\r\n    y1: number;\r\n    /**\r\n     * ending y pos of the line\r\n     */\r\n    y2: number;\r\n    /**\r\n     * is the line selected\r\n     */\r\n    selected?: boolean;\r\n    /**\r\n     * does the line have a direction\r\n     */\r\n    directional?: boolean;\r\n}\r\n\r\nexport const MarkerArrowId = \"arrow\";\r\n\r\n/**\r\n * This component draws a SVG line between two points, with an optional marker\r\n * indicating direction\r\n * @param props properties\r\n * @returns graph line element\r\n */\r\nexport const GraphLine: FC<IGraphLineProps> = (props: IGraphLineProps) => {\r\n    const { id, x1, x2, y1, y2, selected, directional = true } = props;\r\n    const { onLineSelected } = useGraphContext();\r\n\r\n    // Line is only selectable when it has an id\r\n    const onClick = () => {\r\n        id && onLineSelected && onLineSelected(id);\r\n    };\r\n\r\n    const xm = (x1 + x2) / 2;\r\n    const ym = (y1 + y2) / 2;\r\n\r\n    return (\r\n        <path\r\n            d={`M ${x1} ${y1} L ${xm} ${ym} L ${x2} ${y2}`}\r\n            strokeWidth={3}\r\n            stroke={selected ? \"yellow\" : \"black\"}\r\n            onClick={onClick}\r\n            markerMid={directional ? `url(#${MarkerArrowId})` : \"\"}\r\n        />\r\n    );\r\n};\r\n"]}