{"version":3,"file":"DraggableIcon.js","sourceRoot":"","sources":["../../../src/components/layout/DraggableIcon.tsx"],"names":[],"mappings":";AACA,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AAqBpC;;;;GAIG;AACH,MAAM,CAAC,MAAM,aAAa,GAA4B,CAAC,KAAK,EAAE,EAAE;IAC5D,MAAM,CAAC,EAAE,IAAI,CAAC,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC;QAC5B,IAAI,EAAE,KAAK,CAAC,IAAI;QAChB,IAAI,EAAE,KAAK,CAAC,IAAI;QAChB,OAAO,CAAC,OAAO;YACX,OAAO;gBACH,UAAU,EAAE,CAAC,CAAC,OAAO,CAAC,UAAU,EAAE;aACrC,CAAC;QACN,CAAC;KACJ,CAAC,CAAC,CAAC;IACJ,OAAO,cAAK,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,GAAI,CAAC;AAC9C,CAAC,CAAC","sourcesContent":["import type { FC } from \"react\";\r\nimport { useDrag } from \"react-dnd\";\r\nimport type { ElementTypes, TabDrag } from \"./types\";\r\n\r\n/**\r\n * Arguments for the DraggableIcon component.\r\n */\r\nexport interface IDraggableIconProps {\r\n    /**\r\n     * Icon source\r\n     */\r\n    src: string;\r\n    /**\r\n     * Object that will be passed to the drag event\r\n     */\r\n    item: TabDrag;\r\n    /**\r\n     * Type of drag event\r\n     */\r\n    type: ElementTypes;\r\n}\r\n\r\n/**\r\n * An icon that can be dragged by the user\r\n * @param props properties\r\n * @returns draggable icon element\r\n */\r\nexport const DraggableIcon: FC<IDraggableIconProps> = (props) => {\r\n    const [, drag] = useDrag(() => ({\r\n        type: props.type,\r\n        item: props.item,\r\n        collect(monitor) {\r\n            return {\r\n                isDragging: !!monitor.isDragging(),\r\n            };\r\n        },\r\n    }));\r\n    return <img ref={drag} src={props.src} />;\r\n};\r\n"]}