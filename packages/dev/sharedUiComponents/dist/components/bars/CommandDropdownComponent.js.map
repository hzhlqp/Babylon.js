{"version":3,"file":"CommandDropdownComponent.js","sourceRoot":"","sources":["../../../src/components/bars/CommandDropdownComponent.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport { FileButtonLineComponent } from \"../lines/FileButtonLineComponent\";\r\nimport { JoinClassNames } from \"../classNames\";\r\n\r\nimport style from \"./CommandDropdown.modules.scss\";\r\n\r\ninterface ICommandDropdownComponentProps {\r\n    icon?: string;\r\n    tooltip: string;\r\n    defaultValue?: string;\r\n    items: {\r\n        label: string;\r\n        icon?: string;\r\n        fileButton?: boolean;\r\n        onClick?: () => void;\r\n        onCheck?: (value: boolean) => void;\r\n        storeKey?: string;\r\n        isActive?: boolean;\r\n        defaultValue?: boolean | string;\r\n        subItems?: string[];\r\n    }[];\r\n    toRight?: boolean;\r\n}\r\n\r\nexport class CommandDropdownComponent extends React.Component<ICommandDropdownComponentProps, { isExpanded: boolean; activeState: string }> {\r\n    public constructor(props: ICommandDropdownComponentProps) {\r\n        super(props);\r\n\r\n        this.state = { isExpanded: false, activeState: \"\" };\r\n    }\r\n\r\n    public override render() {\r\n        return (\r\n            <>\r\n                {this.state.isExpanded && (\r\n                    <div\r\n                        className={style.commandDropdownBlocker}\r\n                        onClick={() => {\r\n                            this.setState({ isExpanded: false });\r\n                        }}\r\n                    ></div>\r\n                )}\r\n                <div className={style.commandDropdownRoot}>\r\n                    <div\r\n                        className={JoinClassNames(style, \"commandDropdown\", this.state.isExpanded ? \"activated\" : \"\")}\r\n                        title={this.props.tooltip}\r\n                        onClick={() => {\r\n                            this.setState({ isExpanded: false });\r\n                            const newState = !this.state.isExpanded;\r\n                            const pgHost = document.getElementById(\"embed-host\");\r\n\r\n                            if (pgHost) {\r\n                                pgHost.style.zIndex = newState ? \"0\" : \"10\";\r\n                            }\r\n\r\n                            this.setState({ isExpanded: newState });\r\n                        }}\r\n                    >\r\n                        {this.props.icon && (\r\n                            <div className={style.commandDropdownIcon}>\r\n                                <img src={this.props.icon} />\r\n                            </div>\r\n                        )}\r\n                        {!this.props.icon && <div className={style.commandDropdownActive}></div>}\r\n                    </div>\r\n                    {this.state.isExpanded && (\r\n                        <div className={JoinClassNames(style, \"commandDropdownContent\", this.props.toRight ? \"toRight\" : \"\")}>\r\n                            {this.props.items.map((m) => {\r\n                                if (!m.fileButton) {\r\n                                    return (\r\n                                        <div\r\n                                            className={JoinClassNames(style, \"commandDropdownLabel\", m.isActive ? \"active\" : \"\")}\r\n                                            key={m.label}\r\n                                            onClick={() => {\r\n                                                if (!m.onClick) {\r\n                                                    this.forceUpdate();\r\n                                                    return;\r\n                                                }\r\n                                                if (!m.subItems) {\r\n                                                    m.onClick();\r\n\r\n                                                    this.setState({ isExpanded: false, activeState: m.label });\r\n                                                }\r\n                                            }}\r\n                                            title={m.label}\r\n                                        >\r\n                                            {!m.icon && <div className={style.commandDropdownLabelText}>{(m.isActive ? \"> \" : \"\") + m.label}</div>}\r\n                                            {m.icon && (\r\n                                                <div className={style.commandDropdownIcon}>\r\n                                                    <img src={m.icon} />\r\n                                                </div>\r\n                                            )}\r\n                                            {m.onCheck && (\r\n                                                <input\r\n                                                    type=\"checkBox\"\r\n                                                    className={style.commandDropdownLabelCheck}\r\n                                                    onChange={(evt) => {\r\n                                                        this.forceUpdate();\r\n                                                        m.onCheck!(evt.target.checked);\r\n                                                    }}\r\n                                                    checked={false}\r\n                                                />\r\n                                            )}\r\n                                            {m.subItems && <div className={style.commandDropdownArrow}>{\">\"}</div>}\r\n                                            {m.subItems && (\r\n                                                <div className={style.subItems}>\r\n                                                    {m.subItems.map((s) => {\r\n                                                        return (\r\n                                                            <div\r\n                                                                key={s}\r\n                                                                className={style.subItem}\r\n                                                                onClick={() => {\r\n                                                                    m.onClick!();\r\n                                                                    this.setState({ isExpanded: false });\r\n                                                                }}\r\n                                                            >\r\n                                                                <div>{s}</div>\r\n                                                            </div>\r\n                                                        );\r\n                                                    })}\r\n                                                </div>\r\n                                            )}\r\n                                        </div>\r\n                                    );\r\n                                } else {\r\n                                    // eslint-disable-next-line no-console\r\n                                    return <FileButtonLineComponent key={m.label} label=\"Load\" onClick={(file) => console.log(\"file btn clicked\")} accept=\".json\" />;\r\n                                }\r\n                            })}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n"]}