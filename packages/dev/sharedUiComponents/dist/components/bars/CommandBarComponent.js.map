{"version":3,"file":"CommandBarComponent.js","sourceRoot":"","sources":["../../../src/components/bars/CommandBarComponent.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { FC } from \"react\";\r\nimport { JoinClassNames } from \"../classNames\";\r\nimport { CommandButtonComponent } from \"./CommandButtonComponent\";\r\nimport { CommandDropdownComponent } from \"./CommandDropdownComponent\";\r\n\r\nimport hamburgerIcon from \"../../imgs/hamburgerIcon.svg\";\r\nimport pointerIcon from \"../../imgs/pointerIcon.svg\";\r\nimport handIcon from \"../../imgs/handIcon.svg\";\r\nimport zoomIcon from \"../../imgs/zoomIcon.svg\";\r\nimport logoIcon from \"../../imgs/babylonLogo.svg\";\r\nimport canvasFitIcon from \"../../imgs/canvasFitIcon.svg\";\r\nimport betaFlag from \"../../imgs/betaFlag.svg\";\r\n\r\nimport style from \"./CommandBar.modules.scss\";\r\nimport { Color3 } from \"core/Maths/math.color\";\r\nimport { ColorPickerLineComponent } from \"../lines/ColorPickerLineComponent\";\r\n\r\nexport interface ICommandBarComponentProps {\r\n    onSaveButtonClicked?: () => void;\r\n    onSaveToSnippetButtonClicked?: () => void;\r\n    onLoadFromSnippetButtonClicked?: () => void;\r\n    onHelpButtonClicked?: () => void;\r\n    onGiveFeedbackButtonClicked?: () => void;\r\n    onSelectButtonClicked?: () => void;\r\n    onPanButtonClicked?: () => void;\r\n    onZoomButtonClicked?: () => void;\r\n    onFitButtonClicked?: () => void;\r\n    onArtboardColorChanged?: (newColor: string) => void;\r\n    artboardColor?: string;\r\n    artboardColorPickerColor?: string;\r\n}\r\n\r\nexport const CommandBarComponent: FC<ICommandBarComponentProps> = (props) => {\r\n    return (\r\n        <div className={style.commandBar}>\r\n            <div className={style.commandsLeft}>\r\n                <div className={style.divider}>\r\n                    <img src={logoIcon} color=\"white\" className={\"active\"} draggable={false} />\r\n                    <CommandDropdownComponent\r\n                        //globalState={this.props.globalState}\r\n                        toRight={true}\r\n                        icon={hamburgerIcon}\r\n                        tooltip=\"Options\"\r\n                        items={[\r\n                            {\r\n                                label: \"Save\",\r\n                                onClick: () => {\r\n                                    props.onSaveButtonClicked && props.onSaveButtonClicked();\r\n                                },\r\n                            },\r\n                            {\r\n                                label: \"Load\",\r\n                                fileButton: true,\r\n                            },\r\n                            {\r\n                                label: \"Save to snippet\",\r\n                                onClick: () => {\r\n                                    props.onSaveToSnippetButtonClicked && props.onSaveToSnippetButtonClicked();\r\n                                },\r\n                            },\r\n                            {\r\n                                label: \"Load from snippet\",\r\n                                onClick: () => {\r\n                                    props.onLoadFromSnippetButtonClicked && props.onLoadFromSnippetButtonClicked();\r\n                                },\r\n                            },\r\n                            {\r\n                                label: \"Help\",\r\n                                onClick: () => {\r\n                                    props.onHelpButtonClicked && props.onHelpButtonClicked();\r\n                                },\r\n                            },\r\n                            {\r\n                                label: \"Give feedback\",\r\n                                onClick: () => {\r\n                                    props.onGiveFeedbackButtonClicked && props.onGiveFeedbackButtonClicked();\r\n                                },\r\n                            },\r\n                        ]}\r\n                    />\r\n                    <CommandButtonComponent\r\n                        tooltip=\"Select\"\r\n                        icon={pointerIcon}\r\n                        shortcut=\"S\"\r\n                        isActive={false}\r\n                        onClick={() => {\r\n                            props.onSelectButtonClicked && props.onSelectButtonClicked();\r\n                        }}\r\n                    />\r\n                    <CommandButtonComponent\r\n                        tooltip=\"Pan\"\r\n                        icon={handIcon}\r\n                        shortcut=\"P\"\r\n                        isActive={false}\r\n                        onClick={() => {\r\n                            props.onPanButtonClicked && props.onPanButtonClicked();\r\n                        }}\r\n                    />\r\n                    <CommandButtonComponent\r\n                        tooltip=\"Zoom\"\r\n                        shortcut=\"Z\"\r\n                        icon={zoomIcon}\r\n                        isActive={false}\r\n                        onClick={() => {\r\n                            props.onZoomButtonClicked && props.onZoomButtonClicked();\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className={style.divider}>\r\n                    <CommandButtonComponent\r\n                        tooltip=\"Fit to Window\"\r\n                        shortcut=\"F\"\r\n                        icon={canvasFitIcon}\r\n                        isActive={false}\r\n                        onClick={() => {\r\n                            props.onFitButtonClicked && props.onFitButtonClicked();\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className={JoinClassNames(style, \"divider\", \"padded\")}>\r\n                    <div style={{ paddingRight: \"5px\" }}>Artboard:</div>\r\n                    {props.onArtboardColorChanged && (\r\n                        <ColorPickerLineComponent\r\n                            backgroundColor={props.artboardColorPickerColor || \"#888888\"}\r\n                            value={props.artboardColor ? Color3.FromHexString(props.artboardColor) : new Color3(0, 0, 0)}\r\n                            onColorChanged={(newColor: string) => {\r\n                                if (props.onArtboardColorChanged) {\r\n                                    props.onArtboardColorChanged(newColor);\r\n                                }\r\n                            }}\r\n                        />\r\n                    )}\r\n                </div>\r\n                <div className={style.divider}>{props.children}</div>\r\n            </div>\r\n            <div className={style.commandsRight}>\r\n                <img src={betaFlag} className={style.betaFlag} draggable={false} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n"]}