{"version":3,"file":"graphNode.js","sourceRoot":"","sources":["../../src/nodeGraphSystem/graphNode.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Nullable } from \"core/types\";\r\nimport type { Observer } from \"core/Misc/observable\";\r\nimport type { GraphCanvasComponent } from \"./graphCanvas\";\r\nimport * as React from \"react\";\r\nimport { NodePort } from \"./nodePort\";\r\nimport type { GraphFrame } from \"./graphFrame\";\r\nimport type { NodeLink } from \"./nodeLink\";\r\nimport type { StateManager } from \"./stateManager\";\r\nimport type { ISelectionChangedOptions } from \"./interfaces/selectionChangedOptions\";\r\nimport type { IDisplayManager } from \"./interfaces/displayManager\";\r\nimport { PropertyLedger } from \"./propertyLedger\";\r\nimport { DisplayLedger } from \"./displayLedger\";\r\nimport type { INodeData } from \"./interfaces/nodeData\";\r\nimport type { IPortData } from \"./interfaces/portData\";\r\nimport localStyles from \"./graphNode.modules.scss\";\r\nimport commonStyles from \"./common.modules.scss\";\r\nimport type { IEditablePropertyListOption, IEditablePropertyOption, IPropertyDescriptionForEdition } from \"core/Decorators/nodeDecorator\";\r\nimport { PropertyTypeForEdition } from \"core/Decorators/nodeDecorator\";\r\nimport { ForceRebuild } from \"./automaticProperties\";\r\n\r\nexport class GraphNode {\r\n    private _visual: HTMLDivElement;\r\n    private _headerContainer: HTMLDivElement;\r\n    private _headerIcon: HTMLDivElement;\r\n    private _headerIconImg: HTMLImageElement;\r\n    private _header: HTMLDivElement;\r\n    private _connections: HTMLDivElement;\r\n    private _optionsContainer: HTMLDivElement;\r\n    private _inputsContainer: HTMLDivElement;\r\n    private _outputsContainer: HTMLDivElement;\r\n    private _content: HTMLDivElement;\r\n    private _comments: HTMLDivElement;\r\n    private _executionTime: HTMLDivElement;\r\n    private _selectionBorder: HTMLDivElement;\r\n    private _inputPorts: NodePort[] = [];\r\n    private _outputPorts: NodePort[] = [];\r\n    private _links: NodeLink[] = [];\r\n    private _x = 0;\r\n    private _y = 0;\r\n    private _gridAlignedX = 0;\r\n    private _gridAlignedY = 0;\r\n    private _mouseStartPointX: Nullable<number> = null;\r\n    private _mouseStartPointY: Nullable<number> = null;\r\n    private _stateManager: StateManager;\r\n    private _onSelectionChangedObserver: Nullable<Observer<Nullable<ISelectionChangedOptions>>>;\r\n    private _onSelectionBoxMovedObserver: Nullable<Observer<ClientRect | DOMRect>>;\r\n    private _onFrameCreatedObserver: Nullable<Observer<GraphFrame>>;\r\n    private _onUpdateRequiredObserver: Nullable<Observer<Nullable<INodeData>>>;\r\n    private _onHighlightNodeObserver: Nullable<Observer<any>>;\r\n    private _ownerCanvas: GraphCanvasComponent;\r\n    private _isSelected: boolean;\r\n    private _displayManager: Nullable<IDisplayManager> = null;\r\n    private _isVisible = true;\r\n    private _enclosingFrameId = -1;\r\n    private _visualPropertiesRefresh: Array<() => void> = [];\r\n\r\n    public addClassToVisual(className: string) {\r\n        this._visual.classList.add(className);\r\n    }\r\n\r\n    public removeClassFromVisual(className: string) {\r\n        this._visual.classList.remove(className);\r\n    }\r\n\r\n    public get isVisible() {\r\n        return this._isVisible;\r\n    }\r\n\r\n    public set isVisible(value: boolean) {\r\n        this._isVisible = value;\r\n\r\n        if (!value) {\r\n            this._visual.classList.add(commonStyles[\"hidden\"]);\r\n        } else {\r\n            this._visual.classList.remove(commonStyles[\"hidden\"]);\r\n            this._upateNodePortNames();\r\n        }\r\n\r\n        for (const link of this._links) {\r\n            link.isVisible = value;\r\n        }\r\n\r\n        this._refreshLinks();\r\n    }\r\n\r\n    private _upateNodePortNames() {\r\n        for (const port of this._inputPorts.concat(this._outputPorts)) {\r\n            if (port.hasLabel()) {\r\n                port.portName = port.portData.name;\r\n            }\r\n        }\r\n    }\r\n\r\n    public get outputPorts() {\r\n        return this._outputPorts;\r\n    }\r\n\r\n    public get inputPorts() {\r\n        return this._inputPorts;\r\n    }\r\n\r\n    public get links() {\r\n        return this._links;\r\n    }\r\n\r\n    public get gridAlignedX() {\r\n        return this._gridAlignedX;\r\n    }\r\n\r\n    public get gridAlignedY() {\r\n        return this._gridAlignedY;\r\n    }\r\n\r\n    public get x() {\r\n        return this._x;\r\n    }\r\n\r\n    public set x(value: number) {\r\n        if (this._x === value) {\r\n            return;\r\n        }\r\n        this._x = value;\r\n\r\n        this._gridAlignedX = this._ownerCanvas.getGridPosition(value);\r\n        this._visual.style.left = `${this._gridAlignedX}px`;\r\n\r\n        this._refreshLinks();\r\n        this._refreshFrames();\r\n    }\r\n\r\n    public get y() {\r\n        return this._y;\r\n    }\r\n\r\n    public set y(value: number) {\r\n        if (this._y === value) {\r\n            return;\r\n        }\r\n\r\n        this._y = value;\r\n\r\n        this._gridAlignedY = this._ownerCanvas.getGridPosition(value);\r\n        this._visual.style.top = `${this._gridAlignedY}px`;\r\n\r\n        this._refreshLinks();\r\n        this._refreshFrames();\r\n    }\r\n\r\n    public get width() {\r\n        return this._visual.clientWidth;\r\n    }\r\n\r\n    public get height() {\r\n        return this._visual.clientHeight;\r\n    }\r\n\r\n    public get id() {\r\n        return this.content.uniqueId;\r\n    }\r\n\r\n    public get name() {\r\n        return this.content.name;\r\n    }\r\n\r\n    public get isSelected() {\r\n        return this._isSelected;\r\n    }\r\n\r\n    public get enclosingFrameId() {\r\n        return this._enclosingFrameId;\r\n    }\r\n\r\n    public set enclosingFrameId(value: number) {\r\n        this._enclosingFrameId = value;\r\n    }\r\n\r\n    public set isSelected(value: boolean) {\r\n        this.setIsSelected(value, false);\r\n    }\r\n\r\n    public setIsSelected(value: boolean, marqueeSelection: boolean) {\r\n        if (this._isSelected === value) {\r\n            return;\r\n        }\r\n\r\n        this._isSelected = value;\r\n\r\n        if (!value) {\r\n            this._visual.classList.remove(localStyles[\"selected\"]);\r\n            const indexInSelection = this._ownerCanvas.selectedNodes.indexOf(this);\r\n\r\n            if (indexInSelection > -1) {\r\n                this._ownerCanvas.selectedNodes.splice(indexInSelection, 1);\r\n            }\r\n        } else {\r\n            this._stateManager.onSelectionChangedObservable.notifyObservers({ selection: this, marqueeSelection });\r\n        }\r\n    }\r\n\r\n    public get rootElement() {\r\n        return this._visual;\r\n    }\r\n\r\n    public constructor(\r\n        public content: INodeData,\r\n        stateManager: StateManager\r\n    ) {\r\n        this._stateManager = stateManager;\r\n\r\n        this._onSelectionChangedObserver = this._stateManager.onSelectionChangedObservable.add((options) => {\r\n            const { selection: node } = options || {};\r\n            if (node === this) {\r\n                this._visual.classList.add(localStyles[\"selected\"]);\r\n                if (this._displayManager && this._displayManager.onSelectionChanged) {\r\n                    this._displayManager.onSelectionChanged(this.content, node.content, this._stateManager);\r\n                }\r\n            } else {\r\n                if (this._ownerCanvas.selectedNodes.indexOf(this) === -1) {\r\n                    this._visual.classList.remove(localStyles[\"selected\"]);\r\n                    if (this._displayManager && this._displayManager.onSelectionChanged) {\r\n                        this._displayManager.onSelectionChanged(this.content, node && (node as GraphNode).content ? (node as GraphNode).content : null, this._stateManager);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        this._onHighlightNodeObserver = this._stateManager.onHighlightNodeObservable.add((data) => {\r\n            if (data.data !== this.content.data) {\r\n                return;\r\n            }\r\n            if (data.active) {\r\n                this._visual.classList.add(localStyles[\"highlighted\"]);\r\n            } else {\r\n                this._visual.classList.remove(localStyles[\"highlighted\"]);\r\n            }\r\n        });\r\n\r\n        this._onUpdateRequiredObserver = this._stateManager.onUpdateRequiredObservable.add((data) => {\r\n            if (data !== this.content.data) {\r\n                return;\r\n            }\r\n            this.refresh();\r\n        });\r\n\r\n        this._onSelectionBoxMovedObserver = this._stateManager.onSelectionBoxMoved.add((rect1) => {\r\n            const rect2 = this._visual.getBoundingClientRect();\r\n            const overlap = !(rect1.right < rect2.left || rect1.left > rect2.right || rect1.bottom < rect2.top || rect1.top > rect2.bottom);\r\n\r\n            this.setIsSelected(overlap, true);\r\n        });\r\n\r\n        this._onFrameCreatedObserver = this._stateManager.onFrameCreatedObservable.add((frame) => {\r\n            if (this._ownerCanvas.frames.some((f) => f.nodes.indexOf(this) !== -1)) {\r\n                return;\r\n            }\r\n\r\n            if (this.isOverlappingFrame(frame)) {\r\n                frame.nodes.push(this);\r\n            }\r\n        });\r\n    }\r\n\r\n    public isOverlappingFrame(frame: GraphFrame) {\r\n        const rect2 = this._visual.getBoundingClientRect();\r\n        const rect1 = frame.element.getBoundingClientRect();\r\n\r\n        // Add a tiny margin\r\n        rect1.width -= 5;\r\n        rect1.height -= 5;\r\n\r\n        const isOverlappingFrame = !(rect1.right < rect2.left || rect1.left > rect2.right || rect1.bottom < rect2.top || rect1.top > rect2.bottom);\r\n\r\n        if (isOverlappingFrame) {\r\n            this.enclosingFrameId = frame.id;\r\n        }\r\n        return isOverlappingFrame;\r\n    }\r\n\r\n    public getPortForPortData(portData: IPortData) {\r\n        for (const port of this._inputPorts) {\r\n            const attachedPoint = port.portData;\r\n\r\n            if (attachedPoint === portData || (attachedPoint.ownerData === portData.ownerData && attachedPoint.internalName === portData.internalName)) {\r\n                return port;\r\n            }\r\n        }\r\n\r\n        for (const port of this._outputPorts) {\r\n            const attachedPoint = port.portData;\r\n\r\n            if (attachedPoint === portData || (attachedPoint.ownerData === portData.ownerData && attachedPoint.internalName === portData.internalName)) {\r\n                return port;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    public getPortDataForPortDataContent(data: any) {\r\n        for (const port of this._inputPorts) {\r\n            const attachedPoint = port.portData;\r\n\r\n            if (attachedPoint.data === data) {\r\n                return attachedPoint;\r\n            }\r\n        }\r\n\r\n        for (const port of this._outputPorts) {\r\n            const attachedPoint = port.portData;\r\n\r\n            if (attachedPoint.data === data) {\r\n                return attachedPoint;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    public getLinksForPortDataContent(data: any) {\r\n        return this._links.filter((link) => link.portA.portData.data === data || link.portB!.portData.data === data);\r\n    }\r\n\r\n    public getLinksForPortData(portData: IPortData) {\r\n        return this._links.filter((link) => link.portA.portData === portData || link.portB!.portData === portData);\r\n    }\r\n\r\n    private _refreshFrames() {\r\n        if (this._ownerCanvas._frameIsMoving || this._ownerCanvas._isLoading) {\r\n            return;\r\n        }\r\n\r\n        // Frames\r\n        for (const frame of this._ownerCanvas.frames) {\r\n            frame.syncNode(this);\r\n        }\r\n    }\r\n\r\n    public _refreshLinks() {\r\n        if (this._ownerCanvas._isLoading) {\r\n            return;\r\n        }\r\n        for (const link of this._links) {\r\n            link.update();\r\n        }\r\n    }\r\n\r\n    public refresh() {\r\n        if (this._displayManager) {\r\n            this._header.innerHTML = this._displayManager.getHeaderText(this.content);\r\n            this._displayManager.updatePreviewContent(this.content, this._content);\r\n            this._visual.style.background = this._displayManager.getBackgroundColor(this.content);\r\n            const additionalClass = this._displayManager.getHeaderClass(this.content);\r\n            this._header.classList.value = localStyles.header;\r\n            this._headerContainer.classList.value = localStyles[\"header-container\"];\r\n            if (additionalClass) {\r\n                this._headerContainer.classList.add(additionalClass);\r\n            }\r\n            if (this._displayManager.updateFullVisualContent) {\r\n                this._displayManager.updateFullVisualContent(this.content, {\r\n                    visual: this._visual,\r\n                    header: this._header,\r\n                    headerContainer: this._headerContainer,\r\n                    headerIcon: this._headerIcon,\r\n                    headerIconImg: this._headerIconImg,\r\n                    comments: this._comments,\r\n                    connections: this._connections,\r\n                    inputsContainer: this._inputsContainer,\r\n                    outputsContainer: this._outputsContainer,\r\n                    content: this._content,\r\n                    selectionBorder: this._selectionBorder,\r\n                });\r\n            }\r\n        } else {\r\n            this._header.innerHTML = this.content.name;\r\n        }\r\n\r\n        for (const refresh of this._visualPropertiesRefresh) {\r\n            refresh();\r\n        }\r\n\r\n        for (const port of this._inputPorts) {\r\n            port.refresh();\r\n        }\r\n\r\n        for (const port of this._outputPorts) {\r\n            port.refresh();\r\n        }\r\n\r\n        if (this.enclosingFrameId !== -1) {\r\n            const index = this._ownerCanvas.frames.findIndex((frame) => frame.id === this.enclosingFrameId);\r\n            if (index >= 0 && this._ownerCanvas.frames[index].isCollapsed) {\r\n                this._ownerCanvas.frames[index].redrawFramePorts();\r\n            }\r\n        }\r\n\r\n        this._comments.innerHTML = this.content.comments || \"\";\r\n        this._comments.title = this.content.comments || \"\";\r\n\r\n        const executionTime = this.content.executionTime || 0;\r\n        this._executionTime.innerHTML = executionTime >= 0 ? `${executionTime.toFixed(2)} ms` : \"\";\r\n\r\n        this.content.prepareHeaderIcon(this._headerIcon, this._headerIconImg);\r\n        if (this._headerIconImg.src) {\r\n            this._header.classList.add(localStyles[\"headerWithIcon\"]);\r\n        }\r\n    }\r\n\r\n    private _onDown(evt: PointerEvent) {\r\n        // Check if this is coming from the port\r\n        if (evt.target && (evt.target as HTMLElement).nodeName === \"IMG\") {\r\n            return;\r\n        }\r\n\r\n        const indexInSelection = this._ownerCanvas.selectedNodes.indexOf(this);\r\n        if (indexInSelection === -1) {\r\n            this._stateManager.onSelectionChangedObservable.notifyObservers({ selection: this });\r\n        } else if (evt.ctrlKey) {\r\n            this.setIsSelected(false, false);\r\n        }\r\n\r\n        evt.stopPropagation();\r\n\r\n        for (const selectedNode of this._ownerCanvas.selectedNodes) {\r\n            selectedNode.cleanAccumulation();\r\n        }\r\n\r\n        this._mouseStartPointX = evt.clientX;\r\n        this._mouseStartPointY = evt.clientY;\r\n\r\n        this._visual.setPointerCapture(evt.pointerId);\r\n    }\r\n\r\n    public cleanAccumulation(useCeil = false) {\r\n        this.x = this._ownerCanvas.getGridPosition(this.x, useCeil);\r\n        this.y = this._ownerCanvas.getGridPosition(this.y, useCeil);\r\n    }\r\n\r\n    private _onUp(evt: PointerEvent) {\r\n        evt.stopPropagation();\r\n\r\n        for (const selectedNode of this._ownerCanvas.selectedNodes) {\r\n            selectedNode.cleanAccumulation();\r\n        }\r\n\r\n        this._mouseStartPointX = null;\r\n        this._mouseStartPointY = null;\r\n        this._visual.releasePointerCapture(evt.pointerId);\r\n\r\n        if (!this._ownerCanvas._targetLinkCandidate) {\r\n            this._stateManager.onNodeMovedObservable.notifyObservers(this);\r\n            return;\r\n        }\r\n\r\n        // Connect the ports\r\n        const inputs: Nullable<IPortData>[] = [];\r\n        const outputs: Nullable<IPortData>[] = [];\r\n        const availableNodeInputs: Nullable<IPortData>[] = [];\r\n        const availableNodeOutputs: Nullable<IPortData>[] = [];\r\n        const leftNode = this._ownerCanvas._targetLinkCandidate.nodeA;\r\n        const rightNode = this._ownerCanvas._targetLinkCandidate.nodeB!;\r\n        const leftPort = this._ownerCanvas._targetLinkCandidate.portA.portData;\r\n        const rightPort = this._ownerCanvas._targetLinkCandidate.portB!.portData;\r\n\r\n        // Delete previous\r\n        this._ownerCanvas._targetLinkCandidate.dispose();\r\n        this._ownerCanvas._targetLinkCandidate = null;\r\n\r\n        // Get the ports\r\n        availableNodeInputs.push(...this.content.inputs.filter((i) => !i.isConnected));\r\n\r\n        availableNodeOutputs.push(...this.content.outputs);\r\n\r\n        inputs.push(...leftNode.content.outputs);\r\n\r\n        outputs.push(...rightNode.content.inputs.filter((i) => !i.isConnected));\r\n\r\n        // Prioritize the already connected ports\r\n        const leftPortIndex = inputs.indexOf(leftPort);\r\n        const rightPortIndex = outputs.indexOf(rightPort);\r\n\r\n        if (leftPortIndex > 0) {\r\n            inputs.splice(leftPortIndex, 1);\r\n            inputs.splice(0, 0, leftPort);\r\n        }\r\n\r\n        if (rightPortIndex > 0) {\r\n            outputs.splice(rightPortIndex, 1);\r\n            outputs.splice(0, 0, rightPort);\r\n        }\r\n\r\n        // Reconnect\r\n        this._ownerCanvas.automaticRewire(inputs, availableNodeInputs, true);\r\n        this._ownerCanvas.automaticRewire(availableNodeOutputs, outputs, true);\r\n\r\n        this._stateManager.onRebuildRequiredObservable.notifyObservers();\r\n        this._stateManager.onNodeMovedObservable.notifyObservers(this);\r\n    }\r\n\r\n    private _onMove(evt: PointerEvent) {\r\n        this._ownerCanvas._targetLinkCandidate = null;\r\n        if (this._mouseStartPointX === null || this._mouseStartPointY === null || evt.ctrlKey) {\r\n            return;\r\n        }\r\n\r\n        // Move\r\n        const newX = (evt.clientX - this._mouseStartPointX) / this._ownerCanvas.zoom;\r\n        const newY = (evt.clientY - this._mouseStartPointY) / this._ownerCanvas.zoom;\r\n\r\n        for (const selectedNode of this._ownerCanvas.selectedNodes) {\r\n            selectedNode.x += newX;\r\n            selectedNode.y += newY;\r\n        }\r\n        for (const frame of this._ownerCanvas.selectedFrames) {\r\n            frame._moveFrame(newX, newY);\r\n        }\r\n\r\n        this._mouseStartPointX = evt.clientX;\r\n        this._mouseStartPointY = evt.clientY;\r\n\r\n        evt.stopPropagation();\r\n\r\n        if (this._inputPorts.some((p) => p.portData.isConnected) || this._outputPorts.some((o) => o.portData.hasEndpoints)) {\r\n            return;\r\n        }\r\n\r\n        // Check wires that could be underneath\r\n        const rect = this._visual.getBoundingClientRect();\r\n        for (const link of this._ownerCanvas.links) {\r\n            if (link.portA.node === this || link.portB!.node === this) {\r\n                link.isTargetCandidate = false;\r\n                continue;\r\n            }\r\n            link.isTargetCandidate = link.intersectsWith(rect);\r\n\r\n            if (link.isTargetCandidate) {\r\n                if (this._ownerCanvas._targetLinkCandidate !== link) {\r\n                    if (this._ownerCanvas._targetLinkCandidate) {\r\n                        this._ownerCanvas._targetLinkCandidate.isTargetCandidate = false;\r\n                    }\r\n                    this._ownerCanvas._targetLinkCandidate = link;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public renderProperties(): Nullable<JSX.Element> {\r\n        let control = PropertyLedger.RegisteredControls[this.content.getClassName()];\r\n\r\n        if (!control) {\r\n            control = PropertyLedger.DefaultControl;\r\n        }\r\n\r\n        return React.createElement(control, {\r\n            stateManager: this._stateManager,\r\n            nodeData: this.content,\r\n        });\r\n    }\r\n\r\n    private _forceRebuild(source: any, propertyName: string, notifiers?: IEditablePropertyOption[\"notifiers\"]) {\r\n        for (const refresh of this._visualPropertiesRefresh) {\r\n            refresh();\r\n        }\r\n        ForceRebuild(source, this._stateManager, propertyName, notifiers);\r\n    }\r\n\r\n    public appendVisual(root: HTMLDivElement, owner: GraphCanvasComponent) {\r\n        this._ownerCanvas = owner;\r\n\r\n        // Display manager\r\n        const displayManagerClass = DisplayLedger.RegisteredControls[this.content.getClassName()];\r\n\r\n        if (displayManagerClass) {\r\n            this._displayManager = new displayManagerClass();\r\n        }\r\n\r\n        // DOM\r\n        this._visual = root.ownerDocument!.createElement(\"div\");\r\n        this._visual.classList.add(localStyles.visual);\r\n\r\n        this._visual.addEventListener(\"pointerdown\", (evt) => this._onDown(evt));\r\n        this._visual.addEventListener(\"pointerup\", (evt) => this._onUp(evt));\r\n        this._visual.addEventListener(\"pointermove\", (evt) => this._onMove(evt));\r\n\r\n        this._headerContainer = root.ownerDocument!.createElement(\"div\");\r\n        this._headerContainer.classList.add(localStyles[\"header-container\"]);\r\n        this._visual.appendChild(this._headerContainer);\r\n\r\n        this._header = root.ownerDocument!.createElement(\"div\");\r\n        this._header.classList.add(localStyles.header);\r\n        this._headerContainer.appendChild(this._header);\r\n\r\n        this._headerIcon = root.ownerDocument!.createElement(\"div\");\r\n        this._headerIcon.classList.add(localStyles.headerIcon);\r\n        this._headerIconImg = root.ownerDocument!.createElement(\"img\");\r\n        this._headerIcon.appendChild(this._headerIconImg);\r\n        this._headerContainer.appendChild(this._headerIcon);\r\n\r\n        this._selectionBorder = root.ownerDocument!.createElement(\"div\");\r\n        this._selectionBorder.classList.add(\"selection-border\");\r\n        this._visual.appendChild(this._selectionBorder);\r\n\r\n        this._connections = root.ownerDocument!.createElement(\"div\");\r\n        this._connections.classList.add(localStyles.connections);\r\n        this._visual.appendChild(this._connections);\r\n\r\n        this._optionsContainer = root.ownerDocument!.createElement(\"div\");\r\n        this._optionsContainer.classList.add(localStyles.optionsContainer);\r\n        this._connections.appendChild(this._optionsContainer);\r\n        this._optionsContainer.addEventListener(\"pointerdown\", (evt) => evt.stopPropagation());\r\n        this._optionsContainer.addEventListener(\"pointerup\", (evt) => evt.stopPropagation());\r\n        this._optionsContainer.addEventListener(\"pointermove\", (evt) => evt.stopPropagation());\r\n\r\n        this._inputsContainer = root.ownerDocument!.createElement(\"div\");\r\n        this._inputsContainer.classList.add(commonStyles.inputsContainer);\r\n        this._connections.appendChild(this._inputsContainer);\r\n\r\n        this._outputsContainer = root.ownerDocument!.createElement(\"div\");\r\n        this._outputsContainer.classList.add(commonStyles.outputsContainer);\r\n        this._connections.appendChild(this._outputsContainer);\r\n\r\n        this._content = root.ownerDocument!.createElement(\"div\");\r\n        this._content.classList.add(localStyles.content);\r\n        this._visual.appendChild(this._content);\r\n\r\n        root.appendChild(this._visual);\r\n\r\n        // Comments\r\n        this._comments = root.ownerDocument!.createElement(\"div\");\r\n        this._comments.classList.add(localStyles.comments);\r\n\r\n        this._visual.appendChild(this._comments);\r\n\r\n        // Comments\r\n        this._executionTime = root.ownerDocument!.createElement(\"div\");\r\n        this._executionTime.classList.add(localStyles.executionTime);\r\n\r\n        this._visual.appendChild(this._executionTime);\r\n\r\n        // Options\r\n        let idGenerator = 0;\r\n        const propStore: IPropertyDescriptionForEdition[] = (this.content.data as any)._propStore;\r\n        if (propStore) {\r\n            const source = this.content.data;\r\n\r\n            for (const { propertyName, displayName, type, options } of propStore) {\r\n                if (options && !options.embedded) {\r\n                    continue;\r\n                }\r\n\r\n                const container = root.ownerDocument!.createElement(\"div\");\r\n                this._optionsContainer.appendChild(container);\r\n                switch (type) {\r\n                    case PropertyTypeForEdition.Boolean: {\r\n                        container.classList.add(localStyles.booleanContainer);\r\n                        const checkbox = root.ownerDocument!.createElement(\"input\");\r\n                        checkbox.type = \"checkbox\";\r\n                        checkbox.id = `checkbox-${idGenerator++}`;\r\n                        checkbox.checked = source[propertyName];\r\n                        this._visualPropertiesRefresh.push(() => {\r\n                            checkbox.checked = source[propertyName];\r\n                        });\r\n                        checkbox.onchange = () => {\r\n                            source[propertyName] = !source[propertyName];\r\n                            this._forceRebuild(source, propertyName, options?.notifiers);\r\n                        };\r\n                        container.appendChild(checkbox);\r\n                        const label = root.ownerDocument!.createElement(\"label\");\r\n                        label.innerText = displayName;\r\n                        label.htmlFor = checkbox.id;\r\n                        label.onclick = () => {\r\n                            checkbox.click();\r\n                        };\r\n                        container.appendChild(label);\r\n                        break;\r\n                    }\r\n                    case PropertyTypeForEdition.Int:\r\n                    case PropertyTypeForEdition.Float: {\r\n                        const cantDisplaySlider = isNaN(options.min as number) || isNaN(options.max as number) || options.min === options.max;\r\n                        if (cantDisplaySlider) {\r\n                            container.classList.add(localStyles.floatContainer);\r\n                            const numberInput = root.ownerDocument!.createElement(\"input\");\r\n                            numberInput.type = \"number\";\r\n                            numberInput.id = `number-${idGenerator++}`;\r\n                            this._visualPropertiesRefresh.push(() => {\r\n                                numberInput.value = source[propertyName];\r\n                            });\r\n                            numberInput.onchange = () => {\r\n                                source[propertyName] = parseFloat(numberInput.value);\r\n                                this._forceRebuild(source, propertyName, options?.notifiers);\r\n                            };\r\n                            container.appendChild(numberInput);\r\n                            const label = root.ownerDocument!.createElement(\"div\");\r\n                            label.innerText = displayName;\r\n                            container.appendChild(label);\r\n                        } else {\r\n                            container.classList.add(localStyles.sliderContainer);\r\n                            const label = root.ownerDocument!.createElement(\"label\");\r\n                            container.appendChild(label);\r\n                            const value = root.ownerDocument!.createElement(\"div\");\r\n                            container.appendChild(value);\r\n                            const slider = root.ownerDocument!.createElement(\"input\");\r\n                            slider.type = \"range\";\r\n                            slider.id = `slider-${idGenerator++}`;\r\n                            slider.step = type === PropertyTypeForEdition.Int ? \"1\" : (Math.abs((options.max as number) - (options.min as number)) / 100.0).toString();\r\n                            slider.min = (options.min as number).toString();\r\n                            slider.max = (options.max as number).toString();\r\n                            container.appendChild(slider);\r\n                            label.innerText = displayName;\r\n                            label.htmlFor = slider.id;\r\n                            this._visualPropertiesRefresh.push(() => {\r\n                                slider.value = source[propertyName];\r\n                                value.innerText = source[propertyName];\r\n                            });\r\n                            slider.oninput = () => {\r\n                                source[propertyName] = parseFloat(slider.value);\r\n                                value.innerText = source[propertyName];\r\n                                this._forceRebuild(source, propertyName, options?.notifiers);\r\n                            };\r\n                        }\r\n                        break;\r\n                    }\r\n                    case PropertyTypeForEdition.List: {\r\n                        container.classList.add(localStyles.listContainer);\r\n                        const select = root.ownerDocument!.createElement(\"div\");\r\n                        select.classList.add(localStyles.select);\r\n                        container.appendChild(select);\r\n                        const selectText = root.ownerDocument!.createElement(\"div\");\r\n                        selectText.classList.add(localStyles.selectText);\r\n                        select.appendChild(selectText);\r\n                        const items = options.options as IEditablePropertyListOption[];\r\n\r\n                        this._visualPropertiesRefresh.push(() => {\r\n                            selectText.innerText = items[source[propertyName]].label;\r\n                        });\r\n                        const selectList = root.ownerDocument!.createElement(\"div\");\r\n                        selectList.classList.add(localStyles.selectList);\r\n                        selectList.classList.add(commonStyles.hidden);\r\n                        select.appendChild(selectList);\r\n                        for (const item of items) {\r\n                            const option = root.ownerDocument!.createElement(\"div\");\r\n                            option.classList.add(localStyles.option);\r\n                            option.innerText = item.label;\r\n                            option.onclick = () => {\r\n                                source[propertyName] = item.value;\r\n                                this._forceRebuild(source, propertyName, options?.notifiers);\r\n                            };\r\n                            selectList.appendChild(option);\r\n                        }\r\n\r\n                        select.onclick = () => {\r\n                            selectList.classList.toggle(commonStyles.hidden);\r\n                            select.classList.toggle(localStyles.active);\r\n                            this._visual.classList.toggle(localStyles.topMost);\r\n                            this._stateManager.modalIsDisplayed = !this._stateManager.modalIsDisplayed;\r\n                        };\r\n\r\n                        select.onpointerleave = () => {\r\n                            selectList.classList.add(commonStyles.hidden);\r\n                            select.classList.remove(localStyles.active);\r\n                            this._visual.classList.remove(localStyles.topMost);\r\n                            this._stateManager.modalIsDisplayed = false;\r\n                        };\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._visualPropertiesRefresh.length === 0) {\r\n            this._inputsContainer.classList.add(commonStyles.inputsContainerUp);\r\n        }\r\n\r\n        // Connections\r\n        for (const input of this.content.inputs) {\r\n            this._inputPorts.push(NodePort.CreatePortElement(input, this, this._inputsContainer, this._displayManager, this._stateManager));\r\n        }\r\n\r\n        for (const output of this.content.outputs) {\r\n            this._outputPorts.push(NodePort.CreatePortElement(output, this, this._outputsContainer, this._displayManager, this._stateManager));\r\n        }\r\n\r\n        this.refresh();\r\n\r\n        this.content.refreshCallback = () => {\r\n            this.refresh();\r\n        };\r\n    }\r\n\r\n    public dispose() {\r\n        if (this._displayManager && this._displayManager.onDispose) {\r\n            this._displayManager.onDispose(this.content, this._stateManager);\r\n        }\r\n\r\n        // notify frame observers that this node is being deleted\r\n        this._stateManager.onGraphNodeRemovalObservable.notifyObservers(this);\r\n\r\n        if (this._onSelectionChangedObserver) {\r\n            this._stateManager.onSelectionChangedObservable.remove(this._onSelectionChangedObserver);\r\n        }\r\n\r\n        if (this._onUpdateRequiredObserver) {\r\n            this._stateManager.onUpdateRequiredObservable.remove(this._onUpdateRequiredObserver);\r\n        }\r\n\r\n        if (this._onHighlightNodeObserver) {\r\n            this._stateManager.onHighlightNodeObservable.remove(this._onHighlightNodeObserver);\r\n        }\r\n\r\n        if (this._onSelectionBoxMovedObserver) {\r\n            this._stateManager.onSelectionBoxMoved.remove(this._onSelectionBoxMovedObserver);\r\n        }\r\n\r\n        if (this._visual.parentElement) {\r\n            this._visual.parentElement.removeChild(this._visual);\r\n        }\r\n\r\n        if (this._onFrameCreatedObserver) {\r\n            this._stateManager.onFrameCreatedObservable.remove(this._onFrameCreatedObserver);\r\n        }\r\n\r\n        for (const port of this._inputPorts) {\r\n            port.dispose();\r\n        }\r\n\r\n        for (const port of this._outputPorts) {\r\n            port.dispose();\r\n        }\r\n\r\n        const links = this._links.slice(0);\r\n        for (const link of links) {\r\n            link.dispose();\r\n        }\r\n\r\n        this.content.dispose();\r\n    }\r\n}\r\n"]}