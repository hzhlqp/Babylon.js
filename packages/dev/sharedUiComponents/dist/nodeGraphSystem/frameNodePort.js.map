{"version":3,"file":"frameNodePort.js","sourceRoot":"","sources":["../../src/nodeGraphSystem/frameNodePort.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IDisplayManager } from \"./interfaces/displayManager\";\r\nimport { Observable } from \"core/Misc/observable\";\r\nimport type { Nullable } from \"core/types\";\r\nimport type { IPortData } from \"./interfaces/portData\";\r\nimport { NodePort } from \"./nodePort\";\r\nimport type { GraphNode } from \"./graphNode\";\r\nimport { IsFramePortData } from \"./tools\";\r\nimport type { FramePortPosition } from \"./graphFrame\";\r\nimport type { StateManager } from \"./stateManager\";\r\nimport type { FramePortData } from \"./types/framePortData\";\r\nimport commonStyles from \"./common.modules.scss\";\r\n\r\nexport class FrameNodePort extends NodePort {\r\n    private _parentFrameId: number;\r\n    private _isInput: boolean;\r\n    private _framePortPosition: FramePortPosition;\r\n    private _framePortId: number;\r\n    private _onFramePortPositionChangedObservable = new Observable<FrameNodePort>();\r\n\r\n    public get parentFrameId() {\r\n        return this._parentFrameId;\r\n    }\r\n\r\n    public get onFramePortPositionChangedObservable() {\r\n        return this._onFramePortPositionChangedObservable;\r\n    }\r\n\r\n    public get isInput() {\r\n        return this._isInput;\r\n    }\r\n\r\n    public get framePortId() {\r\n        return this._framePortId;\r\n    }\r\n\r\n    public get framePortPosition() {\r\n        return this._framePortPosition;\r\n    }\r\n\r\n    public set framePortPosition(position: FramePortPosition) {\r\n        this._framePortPosition = position;\r\n        this.onFramePortPositionChangedObservable.notifyObservers(this);\r\n    }\r\n\r\n    public constructor(\r\n        portContainer: HTMLElement,\r\n        public override portData: IPortData,\r\n        public override node: GraphNode,\r\n        stateManager: StateManager,\r\n        isInput: boolean,\r\n        framePortId: number,\r\n        parentFrameId: number\r\n    ) {\r\n        super(portContainer, portData, node, stateManager);\r\n\r\n        this._parentFrameId = parentFrameId;\r\n        this._isInput = isInput;\r\n        this._framePortId = framePortId;\r\n\r\n        this._onSelectionChangedObserver = stateManager.onSelectionChangedObservable.add((options) => {\r\n            const { selection } = options || {};\r\n            if (IsFramePortData(selection) && (selection as FramePortData).port === this) {\r\n                this._img.classList.add(commonStyles[\"selected\"]);\r\n            } else {\r\n                this._img.classList.remove(commonStyles[\"selected\"]);\r\n            }\r\n        });\r\n\r\n        this.refresh();\r\n    }\r\n\r\n    public static CreateFrameNodePortElement(\r\n        portData: IPortData,\r\n        node: GraphNode,\r\n        root: HTMLElement,\r\n        displayManager: Nullable<IDisplayManager>,\r\n        stateManager: StateManager,\r\n        isInput: boolean,\r\n        framePortId: number,\r\n        parentFrameId: number\r\n    ) {\r\n        const portContainer = root.ownerDocument!.createElement(\"div\");\r\n\r\n        portContainer.classList.add(commonStyles[\"portLine\"]);\r\n        if (framePortId !== null) {\r\n            portContainer.dataset.framePortId = `${framePortId}`;\r\n        }\r\n        root.appendChild(portContainer);\r\n\r\n        if (!displayManager || displayManager.shouldDisplayPortLabels(portData)) {\r\n            const portLabel = root.ownerDocument!.createElement(\"div\");\r\n            portLabel.classList.add(commonStyles[\"port-label\"]);\r\n\r\n            portLabel.innerHTML = portData.name;\r\n            portContainer.appendChild(portLabel);\r\n        }\r\n\r\n        return new FrameNodePort(portContainer, portData, node, stateManager, isInput, framePortId, parentFrameId);\r\n    }\r\n}\r\n"]}