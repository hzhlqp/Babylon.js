{"version":3,"file":"automaticProperties.js","sourceRoot":"","sources":["../../src/nodeGraphSystem/automaticProperties.ts"],"names":[],"mappings":"AAGA;;;;;;GAMG;AACH,MAAM,UAAU,YAAY,CAAC,MAAW,EAAE,YAA0B,EAAE,YAAoB,EAAE,SAAgD;IACxI,IAAI,SAAS,EAAE,YAAY,IAAI,CAAC,SAAS,EAAE,YAAY,CAAC,MAAM,EAAE,YAAY,CAAC,EAAE;QAC3E,OAAO;KACV;IAED,IAAI,CAAC,SAAS,IAAI,SAAS,CAAC,MAAM,EAAE;QAChC,YAAY,CAAC,0BAA0B,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;KACnE;IAED,IAAI,CAAC,SAAS,IAAI,SAAS,CAAC,OAAO,EAAE;QACjC,YAAY,CAAC,2BAA2B,CAAC,eAAe,EAAE,CAAC;KAC9D;IAED,IAAI,SAAS,EAAE,sBAAsB,EAAE;QACnC,YAAY,CAAC,yBAAyB,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;KAChE;IAED,IAAI,YAAY,CAAC,QAAQ,EAAE;QACvB,MAAM,OAAO,GAAG,SAAS,EAAE,QAAQ,EAAE,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAE,MAAM,CAAC,IAAI,KAAK,CAAC;QAEhF,IAAI,OAAO,EAAE;YACT,YAAY,CAAC,2BAA2B,CAAC,eAAe,EAAE,CAAC;SAC9D;KACJ;AACL,CAAC","sourcesContent":["import type { IEditablePropertyOption } from \"core/Decorators/nodeDecorator\";\r\nimport type { StateManager } from \"./stateManager\";\r\n\r\n/**\r\n * Function used to force a rebuild of the node system\r\n * @param source source object\r\n * @param stateManager defines the state manager to use\r\n * @param propertyName name of the property that has been changed\r\n * @param notifiers list of notifiers to use\r\n */\r\nexport function ForceRebuild(source: any, stateManager: StateManager, propertyName: string, notifiers?: IEditablePropertyOption[\"notifiers\"]) {\r\n    if (notifiers?.onValidation && !notifiers?.onValidation(source, propertyName)) {\r\n        return;\r\n    }\r\n\r\n    if (!notifiers || notifiers.update) {\r\n        stateManager.onUpdateRequiredObservable.notifyObservers(source);\r\n    }\r\n\r\n    if (!notifiers || notifiers.rebuild) {\r\n        stateManager.onRebuildRequiredObservable.notifyObservers();\r\n    }\r\n\r\n    if (notifiers?.activatePreviewCommand) {\r\n        stateManager.onPreviewCommandActivated.notifyObservers(true);\r\n    }\r\n\r\n    if (stateManager.getScene) {\r\n        const rebuild = notifiers?.callback?.(stateManager.getScene(), source) ?? false;\r\n\r\n        if (rebuild) {\r\n            stateManager.onRebuildRequiredObservable.notifyObservers();\r\n        }\r\n    }\r\n}\r\n"]}