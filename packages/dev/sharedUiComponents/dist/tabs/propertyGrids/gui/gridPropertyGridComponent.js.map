{"version":3,"file":"gridPropertyGridComponent.js","sourceRoot":"","sources":["../../../../src/tabs/propertyGrids/gui/gridPropertyGridComponent.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAG/B,OAAO,EAAE,kCAAkC,EAAE,MAAM,oEAAoE,CAAC;AAGxH,OAAO,EAAE,sBAAsB,EAAE,MAAM,uCAAuC,CAAC;AAC/E,OAAO,EAAE,iBAAiB,EAAE,MAAM,kCAAkC,CAAC;AAQrE,MAAM,OAAO,yBAA0B,SAAQ,KAAK,CAAC,SAA0C;IAC3F,YAAY,KAAsC;QAC9C,KAAK,CAAC,KAAK,CAAC,CAAC;IACjB,CAAC;IAED,UAAU;QACN,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;QAC7B,MAAM,IAAI,GAAG,EAAE,CAAC;QAEhB,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,EAAE;YAChD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAE,CAAC,CAAC;SAC5C;QAED,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE;YACtB,OAAO,KAAC,iBAAiB,IAAe,KAAK,EAAE,OAAO,CAAC,EAAE,EAAE,KAAK,EAAE,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,KAAK,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAhG,IAAI,CAAC,EAAE,CAA6F,CAAC;QACxI,CAAC,CAAC,CAAC;IACP,CAAC;IAED,aAAa;QACT,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;QAC7B,MAAM,IAAI,GAAG,EAAE,CAAC;QAEhB,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,WAAW,EAAE,KAAK,EAAE,EAAE;YACnD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAE,CAAC,CAAC;SAC/C;QAED,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE;YACtB,OAAO,KAAC,iBAAiB,IAAe,KAAK,EAAE,UAAU,CAAC,EAAE,EAAE,KAAK,EAAE,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,IAA/D,IAAI,CAAC,EAAE,CAA4D,CAAC;QACvG,CAAC,CAAC,CAAC;IACP,CAAC;IAEQ,MAAM;QACX,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;QAE7B,MAAM,IAAI,GAAG,EAAE,CAAC;QAEhB,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,EAAE;YAChD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,CAAC;SAC9C;QAED,OAAO,CACH,8BACI,KAAC,kCAAkC,IAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,OAAO,EAAE,IAAI,EAAE,2BAA2B,EAAE,IAAI,CAAC,KAAK,CAAC,2BAA2B,GAAI,EAC7J,MAAC,sBAAsB,IAAC,KAAK,EAAC,MAAM,aAC/B,IAAI,CAAC,UAAU,EAAE,EACjB,IAAI,CAAC,aAAa,EAAE,IACA,IAC1B,CACN,CAAC;IACN,CAAC;CACJ","sourcesContent":["import * as React from \"react\";\r\nimport type { Observable } from \"core/Misc/observable\";\r\nimport type { PropertyChangedEvent } from \"../../../propertyChangedEvent\";\r\nimport { CommonControlPropertyGridComponent } from \"../../../tabs/propertyGrids/gui/commonControlPropertyGridComponent\";\r\nimport type { LockObject } from \"../../../tabs/propertyGrids/lockObject\";\r\nimport type { Grid } from \"gui/2D/controls/grid\";\r\nimport { LineContainerComponent } from \"../../../lines/lineContainerComponent\";\r\nimport { TextLineComponent } from \"../../../lines/textLineComponent\";\r\n\r\ninterface IGridPropertyGridComponentProps {\r\n    grid: Grid;\r\n    lockObject: LockObject;\r\n    onPropertyChangedObservable?: Observable<PropertyChangedEvent>;\r\n}\r\n\r\nexport class GridPropertyGridComponent extends React.Component<IGridPropertyGridComponentProps> {\r\n    constructor(props: IGridPropertyGridComponentProps) {\r\n        super(props);\r\n    }\r\n\r\n    renderRows() {\r\n        const grid = this.props.grid;\r\n        const rows = [];\r\n\r\n        for (let index = 0; index < grid.rowCount; index++) {\r\n            rows.push(grid.getRowDefinition(index)!);\r\n        }\r\n\r\n        return rows.map((rd, i) => {\r\n            return <TextLineComponent key={`r${i}`} label={`Row ${i}`} value={rd.toString(grid.host, 2)} underline={i === grid.rowCount - 1} />;\r\n        });\r\n    }\r\n\r\n    renderColumns() {\r\n        const grid = this.props.grid;\r\n        const cols = [];\r\n\r\n        for (let index = 0; index < grid.columnCount; index++) {\r\n            cols.push(grid.getColumnDefinition(index)!);\r\n        }\r\n\r\n        return cols.map((cd, i) => {\r\n            return <TextLineComponent key={`c${i}`} label={`Column ${i}`} value={cd.toString(grid.host, 2)} />;\r\n        });\r\n    }\r\n\r\n    override render() {\r\n        const grid = this.props.grid;\r\n\r\n        const cols = [];\r\n\r\n        for (let index = 0; index < grid.rowCount; index++) {\r\n            cols.push(grid.getColumnDefinition(index));\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <CommonControlPropertyGridComponent lockObject={this.props.lockObject} control={grid} onPropertyChangedObservable={this.props.onPropertyChangedObservable} />\r\n                <LineContainerComponent title=\"GRID\">\r\n                    {this.renderRows()}\r\n                    {this.renderColumns()}\r\n                </LineContainerComponent>\r\n            </>\r\n        );\r\n    }\r\n}\r\n"]}