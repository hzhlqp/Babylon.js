{"version":3,"file":"gltfComponent.js","sourceRoot":"","sources":["../../../../../src/components/actionTabs/tabs/tools/gltfComponent.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport type { Scene } from \"core/scene\";\r\nimport { LineContainerComponent } from \"shared-ui-components/lines/lineContainerComponent\";\r\nimport { CheckBoxLineComponent } from \"shared-ui-components/lines/checkBoxLineComponent\";\r\nimport type { GlobalState } from \"../../../globalState\";\r\nimport { FloatLineComponent } from \"shared-ui-components/lines/floatLineComponent\";\r\nimport { OptionsLine } from \"shared-ui-components/lines/optionsLineComponent\";\r\nimport { MessageLineComponent } from \"shared-ui-components/lines/messageLineComponent\";\r\nimport { faCheck, faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { TextLineComponent } from \"shared-ui-components/lines/textLineComponent\";\r\n// TODO - does it still work if loading the modules from the correct files?\r\n// eslint-disable-next-line import/no-internal-modules\r\nimport { GLTFLoaderCoordinateSystemMode, GLTFLoaderAnimationStartMode } from \"loaders/glTF/index\";\r\nimport type { Nullable } from \"core/types\";\r\nimport type { Observer } from \"core/Misc/observable\";\r\nimport type { IGLTFValidationResults } from \"babylonjs-gltf2interface\";\r\nimport type { LockObject } from \"shared-ui-components/tabs/propertyGrids/lockObject\";\r\n\r\ninterface IGLTFComponentProps {\r\n    scene: Scene;\r\n    globalState: GlobalState;\r\n    lockObject: LockObject;\r\n}\r\n\r\ninterface IGLTFComponentState {\r\n    showGLTFLoaderOptions: boolean;\r\n    showGLTFExtensionOptions: boolean;\r\n}\r\n\r\nexport class GLTFComponent extends React.Component<IGLTFComponentProps, IGLTFComponentState> {\r\n    private _onValidationResultsUpdatedObserver: Nullable<Observer<Nullable<IGLTFValidationResults>>> = null;\r\n\r\n    constructor(props: IGLTFComponentProps) {\r\n        super(props);\r\n        this.state = {\r\n            showGLTFLoaderOptions: this.props.globalState.glTFLoaderOverrideConfig,\r\n            showGLTFExtensionOptions: this.props.globalState.glTFLoaderOverrideExtensionsConfig,\r\n        };\r\n    }\r\n\r\n    openValidationDetails() {\r\n        const validationResults = this.props.globalState.validationResults;\r\n        const win = window.open(\"\", \"_blank\");\r\n        if (win) {\r\n            // TODO: format this better and use generator registry (https://github.com/KhronosGroup/glTF-Generator-Registry)\r\n            win.document.title = \"glTF Validation Results\";\r\n            win.document.body.innerText = JSON.stringify(validationResults, null, 2);\r\n            win.document.body.style.whiteSpace = \"pre\";\r\n            win.document.body.style.fontFamily = `monospace`;\r\n            win.document.body.style.fontSize = `14px`;\r\n            win.focus();\r\n        }\r\n    }\r\n\r\n    prepareText(singularForm: string, count: number) {\r\n        if (count) {\r\n            return `${count} ${singularForm}s`;\r\n        }\r\n\r\n        return `${singularForm}`;\r\n    }\r\n\r\n    override componentDidMount() {\r\n        if (this.props.globalState) {\r\n            this._onValidationResultsUpdatedObserver = this.props.globalState.onValidationResultsUpdatedObservable.add(() => {\r\n                this.forceUpdate();\r\n            });\r\n        }\r\n    }\r\n\r\n    override componentWillUnmount() {\r\n        if (this.props.globalState) {\r\n            if (this._onValidationResultsUpdatedObserver) {\r\n                this.props.globalState.onValidationResultsUpdatedObservable.remove(this._onValidationResultsUpdatedObserver);\r\n            }\r\n        }\r\n    }\r\n\r\n    renderValidation() {\r\n        const validationResults = this.props.globalState.validationResults;\r\n        if (!validationResults) {\r\n            return null;\r\n        }\r\n\r\n        const issues = validationResults.issues;\r\n\r\n        return (\r\n            <LineContainerComponent title=\"GLTF VALIDATION\" closed={!issues.numErrors && !issues.numWarnings} selection={this.props.globalState}>\r\n                {issues.numErrors !== 0 && <MessageLineComponent text=\"Your file has some validation issues\" icon={faTimesCircle} color=\"Red\" />}\r\n                {issues.numErrors === 0 && <MessageLineComponent text=\"Your file is a valid glTF file\" icon={faCheck} color=\"Green\" />}\r\n                <TextLineComponent label=\"Errors\" value={issues.numErrors.toString()} />\r\n                <TextLineComponent label=\"Warnings\" value={issues.numWarnings.toString()} />\r\n                <TextLineComponent label=\"Infos\" value={issues.numInfos.toString()} />\r\n                <TextLineComponent label=\"Hints\" value={issues.numHints.toString()} />\r\n                <TextLineComponent label=\"More details\" value=\"Click here\" onLink={() => this.openValidationDetails()} />\r\n            </LineContainerComponent>\r\n        );\r\n    }\r\n\r\n    override render() {\r\n        const extensionStates = this.props.globalState.glTFLoaderExtensionDefaults;\r\n        const loaderState = this.props.globalState.glTFLoaderDefaults;\r\n\r\n        const animationStartMode =\r\n            typeof GLTFLoaderAnimationStartMode !== \"undefined\"\r\n                ? [\r\n                      { label: \"None\", value: GLTFLoaderAnimationStartMode.NONE },\r\n                      { label: \"First\", value: GLTFLoaderAnimationStartMode.FIRST },\r\n                      { label: \"ALL\", value: GLTFLoaderAnimationStartMode.ALL },\r\n                  ]\r\n                : [\r\n                      { label: \"None\", value: 0 },\r\n                      { label: \"First\", value: 1 },\r\n                      { label: \"ALL\", value: 2 },\r\n                  ];\r\n\r\n        const coordinateSystemMode =\r\n            typeof GLTFLoaderCoordinateSystemMode !== \"undefined\"\r\n                ? [\r\n                      { label: \"Auto\", value: GLTFLoaderCoordinateSystemMode.AUTO },\r\n                      { label: \"Right handed\", value: GLTFLoaderCoordinateSystemMode.FORCE_RIGHT_HANDED },\r\n                  ]\r\n                : [\r\n                      { label: \"Auto\", value: 0 },\r\n                      { label: \"Right handed\", value: 1 },\r\n                  ];\r\n\r\n        return (\r\n            <div>\r\n                <LineContainerComponent title=\"GLTF LOADER\" closed={true} selection={this.props.globalState}>\r\n                    <CheckBoxLineComponent\r\n                        label=\"Override glTF loader options\"\r\n                        target={this.props.globalState}\r\n                        propertyName=\"glTFLoaderOverrideConfig\"\r\n                        onValueChanged={() => this.setState({ showGLTFLoaderOptions: this.props.globalState.glTFLoaderOverrideConfig })}\r\n                    />\r\n                    <MessageLineComponent\r\n                        text={this.props.globalState.glTFLoaderOverrideConfig ? \"Modify glTF loader overrides below\" : \"Toggle on glTF loader overrides to see and change options\"}\r\n                    />\r\n                    {this.state.showGLTFLoaderOptions && (\r\n                        <>\r\n                            <CheckBoxLineComponent label=\"Always compute bounding box\" target={loaderState} propertyName=\"alwaysComputeBoundingBox\" />\r\n                            <CheckBoxLineComponent label=\"Always compute skeleton root node\" target={loaderState} propertyName=\"alwaysComputeSkeletonRootNode\" />\r\n                            <OptionsLine label=\"Animation start mode\" options={animationStartMode} target={loaderState} propertyName=\"animationStartMode\" />\r\n                            <CheckBoxLineComponent label=\"Capture performance counters\" target={loaderState} propertyName=\"capturePerformanceCounters\" />\r\n                            <CheckBoxLineComponent label=\"Compile materials\" target={loaderState} propertyName=\"compileMaterials\" />\r\n                            <CheckBoxLineComponent label=\"Compile shadow generators\" target={loaderState} propertyName=\"compileShadowGenerators\" />\r\n                            <OptionsLine label=\"Coordinate system\" options={coordinateSystemMode} target={loaderState} propertyName=\"coordinateSystemMode\" />\r\n                            <CheckBoxLineComponent label=\"Create instances\" target={loaderState} propertyName=\"createInstances\" />\r\n                            <CheckBoxLineComponent label=\"Enable logging\" target={loaderState} propertyName=\"loggingEnabled\" />\r\n                            <CheckBoxLineComponent label=\"Load all materials\" target={loaderState} propertyName=\"loadAllMaterials\" />\r\n                            <FloatLineComponent lockObject={this.props.lockObject} label=\"Target FPS\" target={loaderState} propertyName=\"targetFps\" isInteger={true} />\r\n                            <CheckBoxLineComponent label=\"Transparency as coverage\" target={loaderState} propertyName=\"transparencyAsCoverage\" />\r\n                            <CheckBoxLineComponent label=\"Use clip plane\" target={loaderState} propertyName=\"useClipPlane\" />\r\n                            <CheckBoxLineComponent label=\"Use sRGB buffers\" target={loaderState} propertyName=\"useSRGBBuffers\" />\r\n                            <CheckBoxLineComponent label=\"Validate\" target={loaderState} propertyName=\"validate\" />\r\n                            <MessageLineComponent text=\"You need to reload your file to see these changes\" />\r\n                        </>\r\n                    )}\r\n                </LineContainerComponent>\r\n                <LineContainerComponent title=\"GLTF EXTENSIONS\" closed={true} selection={this.props.globalState}>\r\n                    <CheckBoxLineComponent\r\n                        label=\"Override glTF extension options\"\r\n                        target={this.props.globalState}\r\n                        propertyName=\"glTFLoaderOverrideExtensionsConfig\"\r\n                        onValueChanged={() => this.setState({ showGLTFExtensionOptions: this.props.globalState.glTFLoaderOverrideExtensionsConfig })}\r\n                    />\r\n                    <MessageLineComponent\r\n                        text={\r\n                            this.props.globalState.glTFLoaderOverrideExtensionsConfig\r\n                                ? \"Modify glTF extension overrides below\"\r\n                                : \"Toggle on glTF extension overrides to see and change options\"\r\n                        }\r\n                    />\r\n                    {this.state.showGLTFExtensionOptions && (\r\n                        <>\r\n                            <CheckBoxLineComponent\r\n                                label=\"EXT_lights_image_based\"\r\n                                isSelected={() => extensionStates[\"EXT_lights_image_based\"].enabled}\r\n                                onSelect={(value) => (extensionStates[\"EXT_lights_image_based\"].enabled = value)}\r\n                            />\r\n                            <CheckBoxLineComponent\r\n                                label=\"EXT_mesh_gpu_instancing\"\r\n                                isSelected={() => extensionStates[\"EXT_mesh_gpu_instancing\"].enabled}\r\n                                onSelect={(value) => (extensionStates[\"EXT_mesh_gpu_instancing\"].enabled = value)}\r\n                            />\r\n                            <CheckBoxLineComponent\r\n                                label=\"EXT_texture_webp\"\r\n                                isSelected={() => extensionStates[\"EXT_texture_webp\"].enabled}\r\n                                onSelect={(value) => (extensionStates[\"EXT_texture_webp\"].enabled = value)}\r\n                            />\r\n                            <CheckBoxLineComponent\r\n                                label=\"EXT_texture_avif\"\r\n                                isSelected={() => extensionStates[\"EXT_texture_avif\"].enabled}\r\n                                onSelect={(value) => (extensionStates[\"EXT_texture_avif\"].enabled = value)}\r\n                            />\r\n                            <CheckBoxLineComponent\r\n                                label=\"KHR_draco_mesh_compression\"\r\n                                isSelected={() => extensionStates[\"KHR_draco_mesh_compression\"].enabled}\r\n                                onSelect={(value) => (extensionStates[\"KHR_draco_mesh_compression\"].enabled = value)}\r\n                            />\r\n                            <CheckBoxLineComponent\r\n                                label=\"KHR_materials_pbrSpecularGloss...\"\r\n                                isSelected={() => extensionStates[\"KHR_materials_pbrSpecularGlossiness\"].enabled}\r\n                                onSelect={(value) => (extensionStates[\"KHR_materials_pbrSpecularGlossiness\"].enabled = value)}\r\n                            />\r\n                            <CheckBoxLineComponent\r\n                                label=\"KHR_materials_clearcoat\"\r\n                                isSelected={() => extensionStates[\"KHR_materials_clearcoat\"].enabled}\r\n                                onSelect={(value) => (extensionStates[\"KHR_materials_clearcoat\"].enabled = value)}\r\n                            />\r\n                            <CheckBoxLineComponent\r\n                                label=\"KHR_materials_iridescence\"\r\n                                isSelected={() => extensionStates[\"KHR_materials_iridescence\"].enabled}\r\n                                onSelect={(value) => (extensionStates[\"KHR_materials_iridescence\"].enabled = value)}\r\n                            />\r\n                            <CheckBoxLineComponent\r\n                                label=\"KHR_materials_anisotropy\"\r\n                                isSelected={() => extensionStates[\"KHR_materials_anisotropy\"].enabled}\r\n                                onSelect={(value) => (extensionStates[\"KHR_materials_anisotropy\"].enabled = value)}\r\n                            />\r\n                            <CheckBoxLineComponent\r\n                                label=\"KHR_materials_emissive_strength\"\r\n                                isSelected={() => extensionStates[\"KHR_materials_emissive_strength\"].enabled}\r\n                                onSelect={(value) => (extensionStates[\"KHR_materials_emissive_strength\"].enabled = value)}\r\n                            />\r\n                            <CheckBoxLineComponent\r\n                                label=\"KHR_materials_ior\"\r\n                                isSelected={() => extensionStates[\"KHR_materials_ior\"].enabled}\r\n                                onSelect={(value) => (extensionStates[\"KHR_materials_ior\"].enabled = value)}\r\n                            />\r\n                            <CheckBoxLineComponent\r\n                                label=\"KHR_materials_sheen\"\r\n                                isSelected={() => extensionStates[\"KHR_materials_sheen\"].enabled}\r\n                                onSelect={(value) => (extensionStates[\"KHR_materials_sheen\"].enabled = value)}\r\n                            />\r\n                            <CheckBoxLineComponent\r\n                                label=\"KHR_materials_specular\"\r\n                                isSelected={() => extensionStates[\"KHR_materials_specular\"].enabled}\r\n                                onSelect={(value) => (extensionStates[\"KHR_materials_specular\"].enabled = value)}\r\n                            />\r\n                            <CheckBoxLineComponent\r\n                                label=\"KHR_materials_unlit\"\r\n                                isSelected={() => extensionStates[\"KHR_materials_unlit\"].enabled}\r\n                                onSelect={(value) => (extensionStates[\"KHR_materials_unlit\"].enabled = value)}\r\n                            />\r\n                            <CheckBoxLineComponent\r\n                                label=\"KHR_materials_variants\"\r\n                                isSelected={() => extensionStates[\"KHR_materials_variants\"].enabled}\r\n                                onSelect={(value) => (extensionStates[\"KHR_materials_variants\"].enabled = value)}\r\n                            />\r\n                            <CheckBoxLineComponent\r\n                                label=\"KHR_materials_transmission\"\r\n                                isSelected={() => extensionStates[\"KHR_materials_transmission\"].enabled}\r\n                                onSelect={(value) => (extensionStates[\"KHR_materials_transmission\"].enabled = value)}\r\n                            />\r\n                            <CheckBoxLineComponent\r\n                                label=\"KHR_materials_diffuse_transmission\"\r\n                                isSelected={() => extensionStates[\"KHR_materials_diffuse_transmission\"].enabled}\r\n                                onSelect={(value) => (extensionStates[\"KHR_materials_diffuse_transmission\"].enabled = value)}\r\n                            />\r\n                            <CheckBoxLineComponent\r\n                                label=\"KHR_materials_volume\"\r\n                                isSelected={() => extensionStates[\"KHR_materials_volume\"].enabled}\r\n                                onSelect={(value) => (extensionStates[\"KHR_materials_volume\"].enabled = value)}\r\n                            />\r\n                            <CheckBoxLineComponent\r\n                                label=\"KHR_materials_dispersion\"\r\n                                isSelected={() => extensionStates[\"KHR_materials_dispersion\"].enabled}\r\n                                onSelect={(value) => (extensionStates[\"KHR_materials_dispersion\"].enabled = value)}\r\n                            />\r\n                            <CheckBoxLineComponent\r\n                                label=\"KHR_mesh_quantization\"\r\n                                isSelected={() => extensionStates[\"KHR_mesh_quantization\"].enabled}\r\n                                onSelect={(value) => (extensionStates[\"KHR_mesh_quantization\"].enabled = value)}\r\n                            />\r\n                            <CheckBoxLineComponent\r\n                                label=\"KHR_lights_punctual\"\r\n                                isSelected={() => extensionStates[\"KHR_lights_punctual\"].enabled}\r\n                                onSelect={(value) => (extensionStates[\"KHR_lights_punctual\"].enabled = value)}\r\n                            />\r\n                            <CheckBoxLineComponent\r\n                                label=\"KHR_texture_basisu\"\r\n                                isSelected={() => extensionStates[\"KHR_texture_basisu\"].enabled}\r\n                                onSelect={(value) => (extensionStates[\"KHR_texture_basisu\"].enabled = value)}\r\n                            />\r\n                            <CheckBoxLineComponent\r\n                                label=\"KHR_texture_transform\"\r\n                                isSelected={() => extensionStates[\"KHR_texture_transform\"].enabled}\r\n                                onSelect={(value) => (extensionStates[\"KHR_texture_transform\"].enabled = value)}\r\n                            />\r\n                            <CheckBoxLineComponent\r\n                                label=\"KHR_xmp_json_ld\"\r\n                                isSelected={() => extensionStates[\"KHR_xmp_json_ld\"].enabled}\r\n                                onSelect={(value) => (extensionStates[\"KHR_xmp_json_ld\"].enabled = value)}\r\n                            />\r\n                            <CheckBoxLineComponent\r\n                                label=\"MSFT_lod\"\r\n                                isSelected={() => extensionStates[\"MSFT_lod\"].enabled}\r\n                                onSelect={(value) => (extensionStates[\"MSFT_lod\"].enabled = value)}\r\n                            />\r\n                            <FloatLineComponent\r\n                                lockObject={this.props.lockObject}\r\n                                label=\"Maximum LODs\"\r\n                                target={extensionStates[\"MSFT_lod\"]}\r\n                                propertyName=\"maxLODsToLoad\"\r\n                                additionalClass=\"gltf-extension-property\"\r\n                                isInteger={true}\r\n                            />\r\n                            <CheckBoxLineComponent\r\n                                label=\"MSFT_minecraftMesh\"\r\n                                isSelected={() => extensionStates[\"MSFT_minecraftMesh\"].enabled}\r\n                                onSelect={(value) => (extensionStates[\"MSFT_minecraftMesh\"].enabled = value)}\r\n                            />\r\n                            <CheckBoxLineComponent\r\n                                label=\"MSFT_sRGBFactors\"\r\n                                isSelected={() => extensionStates[\"MSFT_sRGBFactors\"].enabled}\r\n                                onSelect={(value) => (extensionStates[\"MSFT_sRGBFactors\"].enabled = value)}\r\n                            />\r\n                            <CheckBoxLineComponent\r\n                                label=\"MSFT_audio_emitter\"\r\n                                isSelected={() => extensionStates[\"MSFT_audio_emitter\"].enabled}\r\n                                onSelect={(value) => (extensionStates[\"MSFT_audio_emitter\"].enabled = value)}\r\n                            />\r\n                            <MessageLineComponent text=\"You need to reload your file to see these changes\" />\r\n                        </>\r\n                    )}\r\n                </LineContainerComponent>\r\n                {this.props.globalState.validationResults && this.renderValidation()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]}