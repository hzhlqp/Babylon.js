{"version":3,"file":"bottomBarComponent.js","sourceRoot":"","sources":["../../../../../../../../src/components/actionTabs/tabs/propertyGrids/animations/curveEditor/bottomBar/bottomBarComponent.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { Observer } from \"core/Misc/observable\";\r\nimport type { Nullable } from \"core/types\";\r\nimport * as React from \"react\";\r\nimport type { GlobalState } from \"../../../../../../globalState\";\r\nimport type { Context, IActiveAnimationChangedOptions } from \"../context\";\r\nimport { TextInputComponent } from \"../controls/textInputComponent\";\r\nimport { MediaPlayerComponent } from \"./mediaPlayerComponent\";\r\nimport { RangeSelectorComponent } from \"./rangeSelectorComponent\";\r\n\r\nimport \"../scss/bottomBar.scss\";\r\n\r\ninterface IBottomBarComponentProps {\r\n    globalState: GlobalState;\r\n    context: Context;\r\n}\r\n\r\ninterface IBottomBarComponentState {\r\n    clipLength: string;\r\n}\r\n\r\nexport class BottomBarComponent extends React.Component<IBottomBarComponentProps, IBottomBarComponentState> {\r\n    private _onAnimationsLoadedObserver: Nullable<Observer<void>>;\r\n    private _onActiveAnimationChangedObserver: Nullable<Observer<IActiveAnimationChangedOptions>>;\r\n    private _onClipLengthIncreasedObserver: Nullable<Observer<number>>;\r\n    private _onClipLengthDecreasedObserver: Nullable<Observer<number>>;\r\n\r\n    constructor(props: IBottomBarComponentProps) {\r\n        super(props);\r\n\r\n        this.state = { clipLength: this.props.context.clipLength ? this.props.context.clipLength.toFixed(0) : this.props.context.referenceMaxFrame.toFixed(0) };\r\n\r\n        this._onAnimationsLoadedObserver = this.props.context.onAnimationsLoaded.add(() => {\r\n            this.forceUpdate();\r\n        });\r\n\r\n        this._onActiveAnimationChangedObserver = this.props.context.onActiveAnimationChanged.add(() => {\r\n            this.forceUpdate();\r\n        });\r\n\r\n        this._onClipLengthIncreasedObserver = this.props.context.onClipLengthIncreased.add((newClipLength) => {\r\n            // New clip length is greater than current clip length: add a key frame at the new clip length location with the same value as the previous frame\r\n            this.props.context.clipLength = newClipLength;\r\n\r\n            this.props.context.onMoveToFrameRequired.notifyObservers(newClipLength);\r\n            const keyAlreadyExists = this.props.context.getKeyAtAnyFrameIndex(newClipLength) !== null;\r\n            if (!keyAlreadyExists) {\r\n                this.props.context.onCreateOrUpdateKeyPointRequired.notifyObservers();\r\n            }\r\n\r\n            this.setState({ clipLength: newClipLength.toFixed(0) });\r\n        });\r\n\r\n        this._onClipLengthIncreasedObserver = this.props.context.onClipLengthDecreased.add((newClipLength) => {\r\n            // New clip length is smaller than current clip length: move the playing range to the new clip length\r\n            this.props.context.clipLength = newClipLength;\r\n\r\n            this.props.context.onMoveToFrameRequired.notifyObservers(newClipLength);\r\n            const keyAlreadyExists = this.props.context.getKeyAtAnyFrameIndex(newClipLength) !== null;\r\n            if (!keyAlreadyExists) {\r\n                this.props.context.onCreateOrUpdateKeyPointRequired.notifyObservers();\r\n            }\r\n\r\n            this.props.context.toKey = Math.min(this.props.context.toKey, this.props.context.clipLength);\r\n            this.props.context.onRangeUpdated.notifyObservers();\r\n\r\n            this.setState({ clipLength: newClipLength.toFixed(0) });\r\n        });\r\n    }\r\n\r\n    private _changeClipLength(newClipLength: number) {\r\n        const currClipLength = this.props.context.clipLength || this.props.context.referenceMaxFrame;\r\n        if (currClipLength < newClipLength) {\r\n            this.props.context.onClipLengthIncreased.notifyObservers(newClipLength);\r\n        } else if (currClipLength > newClipLength) {\r\n            this.props.context.onClipLengthDecreased.notifyObservers(newClipLength);\r\n        }\r\n        this.setState({ clipLength: newClipLength.toFixed(0) });\r\n    }\r\n\r\n    override componentWillUnmount() {\r\n        if (this._onAnimationsLoadedObserver) {\r\n            this.props.context.onAnimationsLoaded.remove(this._onAnimationsLoadedObserver);\r\n        }\r\n\r\n        if (this._onActiveAnimationChangedObserver) {\r\n            this.props.context.onActiveAnimationChanged.remove(this._onActiveAnimationChangedObserver);\r\n        }\r\n\r\n        if (this._onClipLengthDecreasedObserver) {\r\n            this.props.context.onClipLengthDecreased.remove(this._onClipLengthDecreasedObserver);\r\n        }\r\n\r\n        if (this._onClipLengthIncreasedObserver) {\r\n            this.props.context.onClipLengthDecreased.remove(this._onClipLengthIncreasedObserver);\r\n        }\r\n    }\r\n\r\n    public override render() {\r\n        return (\r\n            <div id=\"bottom-bar\">\r\n                <MediaPlayerComponent globalState={this.props.globalState} context={this.props.context} />\r\n                <RangeSelectorComponent globalState={this.props.globalState} context={this.props.context} />\r\n                {this.props.context.activeAnimations.length > 0 && (\r\n                    <div id=\"bottom-bar-total\">\r\n                        <TextInputComponent\r\n                            isNumber={true}\r\n                            value={this.state.clipLength}\r\n                            tooltip=\"Clip Length\"\r\n                            id=\"clip-range\"\r\n                            onValueAsNumberChanged={(newValue, isFocused) => {\r\n                                !isFocused && this._changeClipLength(newValue);\r\n                            }}\r\n                            globalState={this.props.globalState}\r\n                            context={this.props.context}\r\n                        />\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]}