{"version":3,"file":"pbrMaterialPropertyGridComponent.js","sourceRoot":"","sources":["../../../../../../src/components/actionTabs/tabs/propertyGrids/materials/pbrMaterialPropertyGridComponent.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\n\r\nimport { Observable } from \"core/Misc/observable\";\r\nimport type { PBRMaterial } from \"core/Materials/PBR/pbrMaterial\";\r\nimport { Constants } from \"core/Engines/constants\";\r\n\r\nimport type { PropertyChangedEvent } from \"../../../../propertyChangedEvent\";\r\nimport { LineContainerComponent } from \"shared-ui-components/lines/lineContainerComponent\";\r\nimport { Color3LineComponent } from \"shared-ui-components/lines/color3LineComponent\";\r\nimport { CheckBoxLineComponent } from \"shared-ui-components/lines/checkBoxLineComponent\";\r\nimport { SliderLineComponent } from \"shared-ui-components/lines/sliderLineComponent\";\r\nimport { OptionsLine } from \"shared-ui-components/lines/optionsLineComponent\";\r\nimport { CommonMaterialPropertyGridComponent } from \"./commonMaterialPropertyGridComponent\";\r\nimport { TextureLinkLineComponent } from \"../../../lines/textureLinkLineComponent\";\r\nimport type { LockObject } from \"shared-ui-components/tabs/propertyGrids/lockObject\";\r\nimport type { GlobalState } from \"../../../../globalState\";\r\nimport { Vector2LineComponent } from \"shared-ui-components/lines/vector2LineComponent\";\r\n\r\nimport \"core/Materials/material.decalMap\";\r\nimport \"core/Rendering/prePassRendererSceneComponent\";\r\nimport \"core/Rendering/subSurfaceSceneComponent\";\r\n\r\ninterface IPBRMaterialPropertyGridComponentProps {\r\n    globalState: GlobalState;\r\n    material: PBRMaterial;\r\n    lockObject: LockObject;\r\n    onSelectionChangedObservable?: Observable<any>;\r\n    onPropertyChangedObservable?: Observable<PropertyChangedEvent>;\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class PBRMaterialPropertyGridComponent extends React.Component<IPBRMaterialPropertyGridComponentProps> {\r\n    private _onDebugSelectionChangeObservable = new Observable<TextureLinkLineComponent>();\r\n    constructor(props: IPBRMaterialPropertyGridComponentProps) {\r\n        super(props);\r\n    }\r\n\r\n    switchAmbientMode(state: boolean) {\r\n        this.props.material.debugMode = state ? 21 : 0;\r\n    }\r\n\r\n    renderTextures(onDebugSelectionChangeObservable: Observable<TextureLinkLineComponent>) {\r\n        const material = this.props.material;\r\n\r\n        return (\r\n            <LineContainerComponent title=\"CHANNELS\" selection={this.props.globalState}>\r\n                <TextureLinkLineComponent\r\n                    label=\"Albedo\"\r\n                    texture={material.albedoTexture}\r\n                    propertyName=\"albedoTexture\"\r\n                    material={material}\r\n                    onSelectionChangedObservable={this.props.onSelectionChangedObservable}\r\n                    onDebugSelectionChangeObservable={onDebugSelectionChangeObservable}\r\n                />\r\n                <TextureLinkLineComponent\r\n                    label=\"Metallic Roughness\"\r\n                    texture={material.metallicTexture}\r\n                    propertyName=\"metallicTexture\"\r\n                    material={material}\r\n                    onSelectionChangedObservable={this.props.onSelectionChangedObservable}\r\n                    onDebugSelectionChangeObservable={onDebugSelectionChangeObservable}\r\n                />\r\n                <TextureLinkLineComponent\r\n                    label=\"Reflection\"\r\n                    texture={material.reflectionTexture}\r\n                    propertyName=\"reflectionTexture\"\r\n                    material={material}\r\n                    onSelectionChangedObservable={this.props.onSelectionChangedObservable}\r\n                    onDebugSelectionChangeObservable={onDebugSelectionChangeObservable}\r\n                />\r\n                <TextureLinkLineComponent\r\n                    label=\"Refraction\"\r\n                    texture={material.refractionTexture}\r\n                    propertyName=\"refractionTexture\"\r\n                    material={material}\r\n                    onSelectionChangedObservable={this.props.onSelectionChangedObservable}\r\n                    onDebugSelectionChangeObservable={onDebugSelectionChangeObservable}\r\n                />\r\n                <TextureLinkLineComponent\r\n                    label=\"Reflectivity\"\r\n                    texture={material.reflectivityTexture}\r\n                    propertyName=\"reflectivityTexture\"\r\n                    material={material}\r\n                    onSelectionChangedObservable={this.props.onSelectionChangedObservable}\r\n                    onDebugSelectionChangeObservable={onDebugSelectionChangeObservable}\r\n                />\r\n                <TextureLinkLineComponent\r\n                    label=\"Micro-surface\"\r\n                    texture={material.microSurfaceTexture}\r\n                    propertyName=\"microSurfaceTexture\"\r\n                    material={material}\r\n                    onSelectionChangedObservable={this.props.onSelectionChangedObservable}\r\n                    onDebugSelectionChangeObservable={onDebugSelectionChangeObservable}\r\n                />\r\n                <TextureLinkLineComponent\r\n                    label=\"Bump\"\r\n                    texture={material.bumpTexture}\r\n                    propertyName=\"bumpTexture\"\r\n                    material={material}\r\n                    onSelectionChangedObservable={this.props.onSelectionChangedObservable}\r\n                    onDebugSelectionChangeObservable={onDebugSelectionChangeObservable}\r\n                />\r\n                <TextureLinkLineComponent\r\n                    label=\"Emissive\"\r\n                    texture={material.emissiveTexture}\r\n                    propertyName=\"emissiveTexture\"\r\n                    material={material}\r\n                    onSelectionChangedObservable={this.props.onSelectionChangedObservable}\r\n                    onDebugSelectionChangeObservable={onDebugSelectionChangeObservable}\r\n                />\r\n                <TextureLinkLineComponent\r\n                    label=\"Opacity\"\r\n                    texture={material.opacityTexture}\r\n                    propertyName=\"opacityTexture\"\r\n                    material={material}\r\n                    onSelectionChangedObservable={this.props.onSelectionChangedObservable}\r\n                    onDebugSelectionChangeObservable={onDebugSelectionChangeObservable}\r\n                />\r\n                <TextureLinkLineComponent\r\n                    customDebugAction={(state) => this.switchAmbientMode(state)}\r\n                    label=\"Ambient\"\r\n                    texture={material.ambientTexture}\r\n                    propertyName=\"ambientTexture\"\r\n                    material={material}\r\n                    onSelectionChangedObservable={this.props.onSelectionChangedObservable}\r\n                    onDebugSelectionChangeObservable={onDebugSelectionChangeObservable}\r\n                />\r\n                <TextureLinkLineComponent\r\n                    label=\"Lightmap\"\r\n                    texture={material.lightmapTexture}\r\n                    propertyName=\"lightmapTexture\"\r\n                    material={material}\r\n                    onSelectionChangedObservable={this.props.onSelectionChangedObservable}\r\n                    onDebugSelectionChangeObservable={onDebugSelectionChangeObservable}\r\n                />\r\n                <TextureLinkLineComponent\r\n                    label=\"Detailmap\"\r\n                    texture={material.detailMap.texture}\r\n                    material={material}\r\n                    onTextureCreated={(texture) => (material.detailMap.texture = texture)}\r\n                    onTextureRemoved={() => (material.detailMap.texture = null)}\r\n                    onSelectionChangedObservable={this.props.onSelectionChangedObservable}\r\n                    onDebugSelectionChangeObservable={onDebugSelectionChangeObservable}\r\n                />\r\n                <CheckBoxLineComponent\r\n                    label=\"Use lightmap as shadowmap\"\r\n                    target={material}\r\n                    propertyName=\"useLightmapAsShadowmap\"\r\n                    onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                />\r\n                <CheckBoxLineComponent\r\n                    label=\"Use detailmap\"\r\n                    target={material.detailMap}\r\n                    propertyName=\"isEnabled\"\r\n                    onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                />\r\n                {material.decalMap && (\r\n                    <CheckBoxLineComponent\r\n                        label=\"Use decalmap\"\r\n                        target={material.decalMap}\r\n                        propertyName=\"isEnabled\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                )}\r\n            </LineContainerComponent>\r\n        );\r\n    }\r\n\r\n    override render() {\r\n        const material = this.props.material;\r\n\r\n        const debugMode = [\r\n            { label: \"None\", value: 0 },\r\n            // Geometry\r\n            { label: \"Normalized position\", value: 1 },\r\n            { label: \"Normals\", value: 2 },\r\n            { label: \"Tangents\", value: 3 },\r\n            { label: \"Bitangents\", value: 4 },\r\n            { label: \"Bump Normals\", value: 5 },\r\n            { label: \"UV1\", value: 6 },\r\n            { label: \"UV2\", value: 7 },\r\n            { label: \"ClearCoat Normals\", value: 8 },\r\n            { label: \"ClearCoat Tangents\", value: 9 },\r\n            { label: \"ClearCoat Bitangents\", value: 10 },\r\n            { label: \"Anisotropic Normals\", value: 11 },\r\n            { label: \"Anisotropic Tangents\", value: 12 },\r\n            { label: \"Anisotropic Bitangents\", value: 13 },\r\n            // Maps\r\n            { label: \"Albedo Map\", value: 20 },\r\n            { label: \"Ambient Map\", value: 21 },\r\n            { label: \"Opacity Map\", value: 22 },\r\n            { label: \"Emissive Map\", value: 23 },\r\n            { label: \"Light Map\", value: 24 },\r\n            { label: \"Metallic Map\", value: 25 },\r\n            { label: \"Reflectivity Map\", value: 26 },\r\n            { label: \"ClearCoat Map\", value: 27 },\r\n            { label: \"ClearCoat Tint Map\", value: 28 },\r\n            { label: \"Sheen Map\", value: 29 },\r\n            { label: \"Anisotropic Map\", value: 30 },\r\n            { label: \"Thickness Map\", value: 31 },\r\n            { label: \"Bump Map\", value: 32 },\r\n            // Env\r\n            { label: \"Env Refraction\", value: 40 },\r\n            { label: \"Env Reflection\", value: 41 },\r\n            { label: \"Env Clear Coat\", value: 42 },\r\n            // Lighting\r\n            { label: \"Direct Diffuse\", value: 50 },\r\n            { label: \"Direct Specular\", value: 51 },\r\n            { label: \"Direct Clear Coat\", value: 52 },\r\n            { label: \"Direct Sheen\", value: 53 },\r\n            { label: \"Env Irradiance\", value: 54 },\r\n            // Lighting Params\r\n            { label: \"Surface Albedo\", value: 60 },\r\n            { label: \"Reflectance 0\", value: 61 },\r\n            { label: \"Metallic\", value: 62 },\r\n            { label: \"Metallic F0\", value: 71 },\r\n            { label: \"Roughness\", value: 63 },\r\n            { label: \"AlphaG\", value: 64 },\r\n            { label: \"NdotV\", value: 65 },\r\n            { label: \"ClearCoat Color\", value: 66 },\r\n            { label: \"ClearCoat Roughness\", value: 67 },\r\n            { label: \"ClearCoat NdotV\", value: 68 },\r\n            { label: \"Transmittance\", value: 69 },\r\n            { label: \"Refraction Transmittance\", value: 70 },\r\n            { label: \"Glossiness\", value: 72 },\r\n            { label: \"Base Color\", value: 73 },\r\n            { label: \"Specular Color\", value: 74 },\r\n            { label: \"Emissive Color\", value: 75 },\r\n            // Misc\r\n            { label: \"SEO\", value: 80 },\r\n            { label: \"EHO\", value: 81 },\r\n            { label: \"Energy Factor\", value: 82 },\r\n            { label: \"Specular Reflectance\", value: 83 },\r\n            { label: \"Clear Coat Reflectance\", value: 84 },\r\n            { label: \"Sheen Reflectance\", value: 85 },\r\n            { label: \"Luminance Over Alpha\", value: 86 },\r\n            { label: \"Alpha\", value: 87 },\r\n            { label: \"Albedo Alpha\", value: 88 },\r\n            { label: \"Ambient occlusion color\", value: 89 },\r\n        ];\r\n\r\n        const realTimeFilteringQualityOptions = [\r\n            { label: \"Low\", value: Constants.TEXTURE_FILTERING_QUALITY_LOW },\r\n            { label: \"Medium\", value: Constants.TEXTURE_FILTERING_QUALITY_MEDIUM },\r\n            { label: \"High\", value: Constants.TEXTURE_FILTERING_QUALITY_HIGH },\r\n        ];\r\n\r\n        (material.sheen as any)._useRoughness = (material.sheen as any)._useRoughness ?? material.sheen.roughness !== null;\r\n        material.sheen.roughness = material.sheen.roughness ?? (material.sheen as any)._saveRoughness ?? 0;\r\n\r\n        if (!(material.sheen as any)._useRoughness) {\r\n            (material.sheen as any)._saveRoughness = material.sheen.roughness;\r\n            material.sheen.roughness = null;\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <CommonMaterialPropertyGridComponent\r\n                    globalState={this.props.globalState}\r\n                    lockObject={this.props.lockObject}\r\n                    material={material}\r\n                    onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                />\r\n                {this.renderTextures(this._onDebugSelectionChangeObservable)}\r\n                <LineContainerComponent title=\"LIGHTING & COLORS\" selection={this.props.globalState}>\r\n                    <Color3LineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Albedo\"\r\n                        target={material}\r\n                        propertyName=\"albedoColor\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        isLinear={true}\r\n                    />\r\n                    <Color3LineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Reflectivity\"\r\n                        target={material}\r\n                        propertyName=\"reflectivityColor\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        isLinear={true}\r\n                    />\r\n                    <SliderLineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Micro-surface\"\r\n                        target={material}\r\n                        propertyName=\"microSurface\"\r\n                        minimum={0}\r\n                        maximum={1}\r\n                        step={0.01}\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <Color3LineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Emissive\"\r\n                        target={material}\r\n                        propertyName=\"emissiveColor\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        isLinear={true}\r\n                    />\r\n                    <Color3LineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Ambient\"\r\n                        target={material}\r\n                        propertyName=\"ambientColor\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        isLinear={true}\r\n                    />\r\n                    <CheckBoxLineComponent\r\n                        label=\"Use physical light falloff\"\r\n                        target={material}\r\n                        propertyName=\"usePhysicalLightFalloff\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                </LineContainerComponent>\r\n                <LineContainerComponent title=\"METALLIC WORKFLOW\" selection={this.props.globalState}>\r\n                    <SliderLineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Metallic\"\r\n                        target={material}\r\n                        propertyName=\"metallic\"\r\n                        minimum={0}\r\n                        maximum={1}\r\n                        step={0.01}\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <SliderLineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Roughness\"\r\n                        target={material}\r\n                        propertyName=\"roughness\"\r\n                        minimum={0}\r\n                        maximum={1}\r\n                        step={0.01}\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <SliderLineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Index of Refraction\"\r\n                        target={material}\r\n                        propertyName=\"indexOfRefraction\"\r\n                        minimum={1}\r\n                        maximum={3}\r\n                        step={0.01}\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <SliderLineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"F0 Factor\"\r\n                        target={material}\r\n                        propertyName=\"metallicF0Factor\"\r\n                        minimum={0}\r\n                        maximum={1}\r\n                        step={0.01}\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <Color3LineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Reflectance Color\"\r\n                        target={material}\r\n                        propertyName=\"metallicReflectanceColor\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        isLinear={true}\r\n                    />\r\n                    <CheckBoxLineComponent\r\n                        label=\"Use only metallic from MetallicReflectance texture\"\r\n                        target={material}\r\n                        propertyName=\"useOnlyMetallicFromMetallicReflectanceTexture\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <TextureLinkLineComponent\r\n                        label=\"MetallicReflectance Texture\"\r\n                        texture={material.metallicReflectanceTexture}\r\n                        onTextureCreated={(texture) => (material.metallicReflectanceTexture = texture)}\r\n                        onTextureRemoved={() => (material.metallicReflectanceTexture = null)}\r\n                        material={material}\r\n                        onSelectionChangedObservable={this.props.onSelectionChangedObservable}\r\n                        onDebugSelectionChangeObservable={this._onDebugSelectionChangeObservable}\r\n                    />\r\n                    <TextureLinkLineComponent\r\n                        label=\"Reflectance Texture\"\r\n                        texture={material.reflectanceTexture}\r\n                        onTextureCreated={(texture) => (material.reflectanceTexture = texture)}\r\n                        onTextureRemoved={() => (material.reflectanceTexture = null)}\r\n                        material={material}\r\n                        onSelectionChangedObservable={this.props.onSelectionChangedObservable}\r\n                        onDebugSelectionChangeObservable={this._onDebugSelectionChangeObservable}\r\n                    />\r\n                </LineContainerComponent>\r\n                <LineContainerComponent title=\"CLEAR COAT\" selection={this.props.globalState}>\r\n                    <CheckBoxLineComponent\r\n                        label=\"Enabled\"\r\n                        target={material.clearCoat}\r\n                        propertyName=\"isEnabled\"\r\n                        onValueChanged={() => this.forceUpdate()}\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    {material.clearCoat.isEnabled && (\r\n                        <div className=\"fragment\">\r\n                            <SliderLineComponent\r\n                                lockObject={this.props.lockObject}\r\n                                label=\"Intensity\"\r\n                                target={material.clearCoat}\r\n                                propertyName=\"intensity\"\r\n                                minimum={0}\r\n                                maximum={1}\r\n                                step={0.01}\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            />\r\n                            <SliderLineComponent\r\n                                lockObject={this.props.lockObject}\r\n                                label=\"Roughness\"\r\n                                target={material.clearCoat}\r\n                                propertyName=\"roughness\"\r\n                                minimum={0}\r\n                                maximum={1}\r\n                                step={0.01}\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            />\r\n                            <SliderLineComponent\r\n                                lockObject={this.props.lockObject}\r\n                                label=\"IOR\"\r\n                                target={material.clearCoat}\r\n                                propertyName=\"indexOfRefraction\"\r\n                                minimum={1.0}\r\n                                maximum={3}\r\n                                step={0.01}\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            />\r\n                            <CheckBoxLineComponent\r\n                                label=\"Remap F0\"\r\n                                target={material.clearCoat}\r\n                                propertyName=\"remapF0OnInterfaceChange\"\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            />\r\n                            <TextureLinkLineComponent\r\n                                label=\"Clear coat\"\r\n                                texture={material.clearCoat.texture}\r\n                                onTextureCreated={(texture) => (material.clearCoat.texture = texture)}\r\n                                onTextureRemoved={() => (material.clearCoat.texture = null)}\r\n                                material={material}\r\n                                onSelectionChangedObservable={this.props.onSelectionChangedObservable}\r\n                                onDebugSelectionChangeObservable={this._onDebugSelectionChangeObservable}\r\n                            />\r\n                            <TextureLinkLineComponent\r\n                                label=\"Roughness\"\r\n                                texture={material.clearCoat.textureRoughness}\r\n                                onTextureCreated={(texture) => (material.clearCoat.textureRoughness = texture)}\r\n                                onTextureRemoved={() => (material.clearCoat.textureRoughness = null)}\r\n                                material={material}\r\n                                onSelectionChangedObservable={this.props.onSelectionChangedObservable}\r\n                                onDebugSelectionChangeObservable={this._onDebugSelectionChangeObservable}\r\n                            />\r\n                            <TextureLinkLineComponent\r\n                                label=\"Bump\"\r\n                                texture={material.clearCoat.bumpTexture}\r\n                                onTextureCreated={(texture) => (material.clearCoat.bumpTexture = texture)}\r\n                                onTextureRemoved={() => (material.clearCoat.bumpTexture = null)}\r\n                                material={material}\r\n                                onSelectionChangedObservable={this.props.onSelectionChangedObservable}\r\n                                onDebugSelectionChangeObservable={this._onDebugSelectionChangeObservable}\r\n                            />\r\n                            {material.clearCoat.bumpTexture && (\r\n                                <SliderLineComponent\r\n                                    lockObject={this.props.lockObject}\r\n                                    label=\"Bump strength\"\r\n                                    target={material.clearCoat.bumpTexture}\r\n                                    propertyName=\"level\"\r\n                                    minimum={0}\r\n                                    maximum={2}\r\n                                    step={0.01}\r\n                                    onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                                />\r\n                            )}\r\n                            <CheckBoxLineComponent\r\n                                label=\"Use roughness from main texture\"\r\n                                target={material.clearCoat}\r\n                                propertyName=\"useRoughnessFromMainTexture\"\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            />\r\n                            <CheckBoxLineComponent\r\n                                label=\"Tint\"\r\n                                target={material.clearCoat}\r\n                                propertyName=\"isTintEnabled\"\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            />\r\n                            {material.clearCoat.isEnabled && material.clearCoat.isTintEnabled && (\r\n                                <Color3LineComponent\r\n                                    lockObject={this.props.lockObject}\r\n                                    label=\"Tint Color\"\r\n                                    target={material.clearCoat}\r\n                                    propertyName=\"tintColor\"\r\n                                    onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                                    isLinear={true}\r\n                                />\r\n                            )}\r\n                            {material.clearCoat.isEnabled && material.clearCoat.isTintEnabled && (\r\n                                <SliderLineComponent\r\n                                    lockObject={this.props.lockObject}\r\n                                    label=\"At Distance\"\r\n                                    target={material.clearCoat}\r\n                                    propertyName=\"tintColorAtDistance\"\r\n                                    minimum={0}\r\n                                    maximum={20}\r\n                                    step={0.1}\r\n                                    onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                                />\r\n                            )}\r\n                            {material.clearCoat.isEnabled && material.clearCoat.isTintEnabled && (\r\n                                <SliderLineComponent\r\n                                    lockObject={this.props.lockObject}\r\n                                    label=\"Tint Thickness\"\r\n                                    target={material.clearCoat}\r\n                                    propertyName=\"tintThickness\"\r\n                                    minimum={0}\r\n                                    maximum={20}\r\n                                    step={0.1}\r\n                                    onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                                />\r\n                            )}\r\n                            {material.clearCoat.isEnabled && material.clearCoat.isTintEnabled && (\r\n                                <TextureLinkLineComponent\r\n                                    label=\"Tint\"\r\n                                    texture={material.clearCoat.tintTexture}\r\n                                    onTextureCreated={(texture) => (material.clearCoat.tintTexture = texture)}\r\n                                    onTextureRemoved={() => (material.clearCoat.tintTexture = null)}\r\n                                    material={material}\r\n                                    onSelectionChangedObservable={this.props.onSelectionChangedObservable}\r\n                                    onDebugSelectionChangeObservable={this._onDebugSelectionChangeObservable}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </LineContainerComponent>\r\n                <LineContainerComponent title=\"IRIDESCENCE\" selection={this.props.globalState}>\r\n                    <CheckBoxLineComponent\r\n                        label=\"Enabled\"\r\n                        target={material.iridescence}\r\n                        propertyName=\"isEnabled\"\r\n                        onValueChanged={() => this.forceUpdate()}\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    {material.iridescence.isEnabled && (\r\n                        <div className=\"fragment\">\r\n                            <SliderLineComponent\r\n                                lockObject={this.props.lockObject}\r\n                                label=\"Intensity\"\r\n                                target={material.iridescence}\r\n                                propertyName=\"intensity\"\r\n                                minimum={0}\r\n                                maximum={1}\r\n                                step={0.01}\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            />\r\n                            <SliderLineComponent\r\n                                lockObject={this.props.lockObject}\r\n                                label=\"IOR\"\r\n                                target={material.iridescence}\r\n                                propertyName=\"indexOfRefraction\"\r\n                                minimum={1.0}\r\n                                maximum={3}\r\n                                step={0.01}\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            />\r\n                            <SliderLineComponent\r\n                                lockObject={this.props.lockObject}\r\n                                label=\"Min Thickness\"\r\n                                target={material.iridescence}\r\n                                propertyName=\"minimumThickness\"\r\n                                minimum={0}\r\n                                maximum={1000}\r\n                                step={10}\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            />\r\n                            <SliderLineComponent\r\n                                lockObject={this.props.lockObject}\r\n                                label=\"Max Thickness\"\r\n                                target={material.iridescence}\r\n                                propertyName=\"maximumThickness\"\r\n                                minimum={0}\r\n                                maximum={1000}\r\n                                step={10}\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            />\r\n                            <TextureLinkLineComponent\r\n                                label=\"Iridescence\"\r\n                                texture={material.iridescence.texture}\r\n                                onTextureCreated={(texture) => (material.iridescence.texture = texture)}\r\n                                onTextureRemoved={() => (material.iridescence.texture = null)}\r\n                                material={material}\r\n                                onSelectionChangedObservable={this.props.onSelectionChangedObservable}\r\n                                onDebugSelectionChangeObservable={this._onDebugSelectionChangeObservable}\r\n                            />\r\n                            <TextureLinkLineComponent\r\n                                label=\"Thickness\"\r\n                                texture={material.iridescence.thicknessTexture}\r\n                                onTextureCreated={(texture) => (material.iridescence.thicknessTexture = texture)}\r\n                                onTextureRemoved={() => (material.iridescence.thicknessTexture = null)}\r\n                                material={material}\r\n                                onSelectionChangedObservable={this.props.onSelectionChangedObservable}\r\n                                onDebugSelectionChangeObservable={this._onDebugSelectionChangeObservable}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </LineContainerComponent>\r\n                <LineContainerComponent title=\"ANISOTROPIC\" selection={this.props.globalState}>\r\n                    <CheckBoxLineComponent\r\n                        label=\"Enabled\"\r\n                        target={material.anisotropy}\r\n                        propertyName=\"isEnabled\"\r\n                        onValueChanged={() => this.forceUpdate()}\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    {material.anisotropy.isEnabled && (\r\n                        <div className=\"fragment\">\r\n                            <CheckBoxLineComponent\r\n                                label=\"Legacy Mode\"\r\n                                target={material.anisotropy}\r\n                                propertyName=\"legacy\"\r\n                                onValueChanged={() => this.forceUpdate()}\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            />\r\n                            <SliderLineComponent\r\n                                lockObject={this.props.lockObject}\r\n                                label=\"Intensity\"\r\n                                target={material.anisotropy}\r\n                                propertyName=\"intensity\"\r\n                                minimum={0}\r\n                                maximum={1}\r\n                                step={0.01}\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            />\r\n                            <Vector2LineComponent\r\n                                lockObject={this.props.lockObject}\r\n                                label=\"Direction\"\r\n                                target={material.anisotropy}\r\n                                propertyName=\"direction\"\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            />\r\n                            <TextureLinkLineComponent\r\n                                label=\"Anisotropic\"\r\n                                texture={material.anisotropy.texture}\r\n                                onTextureCreated={(texture) => (material.anisotropy.texture = texture)}\r\n                                onTextureRemoved={() => (material.anisotropy.texture = null)}\r\n                                material={material}\r\n                                onSelectionChangedObservable={this.props.onSelectionChangedObservable}\r\n                                onDebugSelectionChangeObservable={this._onDebugSelectionChangeObservable}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </LineContainerComponent>\r\n                <LineContainerComponent title=\"SHEEN\" selection={this.props.globalState}>\r\n                    <CheckBoxLineComponent\r\n                        label=\"Enabled\"\r\n                        target={material.sheen}\r\n                        propertyName=\"isEnabled\"\r\n                        onValueChanged={() => this.forceUpdate()}\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    {material.sheen.isEnabled && (\r\n                        <div className=\"fragment\">\r\n                            <CheckBoxLineComponent\r\n                                label=\"Link to Albedo\"\r\n                                target={material.sheen}\r\n                                propertyName=\"linkSheenWithAlbedo\"\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            />\r\n                            <SliderLineComponent\r\n                                lockObject={this.props.lockObject}\r\n                                label=\"Intensity\"\r\n                                target={material.sheen}\r\n                                propertyName=\"intensity\"\r\n                                minimum={0}\r\n                                maximum={1}\r\n                                step={0.01}\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            />\r\n                            <Color3LineComponent\r\n                                lockObject={this.props.lockObject}\r\n                                label=\"Color\"\r\n                                target={material.sheen}\r\n                                propertyName=\"color\"\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                                isLinear={true}\r\n                            />\r\n                            <TextureLinkLineComponent\r\n                                label=\"Sheen\"\r\n                                texture={material.sheen.texture}\r\n                                onTextureCreated={(texture) => (material.sheen.texture = texture)}\r\n                                onTextureRemoved={() => (material.sheen.texture = null)}\r\n                                material={material}\r\n                                onSelectionChangedObservable={this.props.onSelectionChangedObservable}\r\n                                onDebugSelectionChangeObservable={this._onDebugSelectionChangeObservable}\r\n                            />\r\n                            <TextureLinkLineComponent\r\n                                label=\"Roughness\"\r\n                                texture={material.sheen.textureRoughness}\r\n                                onTextureCreated={(texture) => (material.sheen.textureRoughness = texture)}\r\n                                onTextureRemoved={() => (material.sheen.textureRoughness = null)}\r\n                                material={material}\r\n                                onSelectionChangedObservable={this.props.onSelectionChangedObservable}\r\n                                onDebugSelectionChangeObservable={this._onDebugSelectionChangeObservable}\r\n                            />\r\n                            <CheckBoxLineComponent label=\"Use roughness\" target={material.sheen} propertyName=\"_useRoughness\" />\r\n                            {(material.sheen as any)._useRoughness && (\r\n                                <SliderLineComponent\r\n                                    lockObject={this.props.lockObject}\r\n                                    label=\"Roughness\"\r\n                                    target={material.sheen}\r\n                                    propertyName=\"roughness\"\r\n                                    minimum={0}\r\n                                    maximum={1}\r\n                                    step={0.01}\r\n                                    onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                                />\r\n                            )}\r\n                            <CheckBoxLineComponent\r\n                                label=\"Use roughness from main texture\"\r\n                                target={material.sheen}\r\n                                propertyName=\"useRoughnessFromMainTexture\"\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            />\r\n                            <CheckBoxLineComponent\r\n                                label=\"Albedo scaling\"\r\n                                target={material.sheen}\r\n                                propertyName=\"albedoScaling\"\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </LineContainerComponent>\r\n                <LineContainerComponent title=\"SUBSURFACE\" selection={this.props.globalState}>\r\n                    <TextureLinkLineComponent\r\n                        label=\"Thickness\"\r\n                        texture={material.subSurface.thicknessTexture}\r\n                        onTextureCreated={(texture) => (material.subSurface.thicknessTexture = texture)}\r\n                        onTextureRemoved={() => (material.subSurface.thicknessTexture = null)}\r\n                        material={material}\r\n                        onSelectionChangedObservable={this.props.onSelectionChangedObservable}\r\n                        onDebugSelectionChangeObservable={this._onDebugSelectionChangeObservable}\r\n                    />\r\n                    <SliderLineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Min Thickness\"\r\n                        target={material.subSurface}\r\n                        propertyName=\"minimumThickness\"\r\n                        minimum={0}\r\n                        maximum={10}\r\n                        step={0.1}\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <SliderLineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Max Thickness\"\r\n                        target={material.subSurface}\r\n                        propertyName=\"maximumThickness\"\r\n                        minimum={0}\r\n                        maximum={10}\r\n                        step={0.1}\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <CheckBoxLineComponent\r\n                        label=\"Mask From Thickness\"\r\n                        target={material.subSurface}\r\n                        propertyName=\"useMaskFromThicknessTexture\"\r\n                        onValueChanged={() => this.forceUpdate()}\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <CheckBoxLineComponent\r\n                        label=\"glTF-Style Textures\"\r\n                        target={material.subSurface}\r\n                        propertyName=\"useGltfStyleTextures\"\r\n                        onValueChanged={() => this.forceUpdate()}\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <CheckBoxLineComponent\r\n                        label=\"Use Thickness as Depth\"\r\n                        target={material.subSurface}\r\n                        propertyName=\"useThicknessAsDepth\"\r\n                        onValueChanged={() => this.forceUpdate()}\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <Color3LineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Tint Color\"\r\n                        target={material.subSurface}\r\n                        propertyName=\"tintColor\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        isLinear={true}\r\n                    />\r\n\r\n                    <CheckBoxLineComponent\r\n                        label=\"Scattering Enabled\"\r\n                        target={material.subSurface}\r\n                        propertyName=\"isScatteringEnabled\"\r\n                        onValueChanged={() => this.forceUpdate()}\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    {(material.subSurface as any).isScatteringEnabled && material.getScene().prePassRenderer && material.getScene().subSurfaceConfiguration && (\r\n                        <div className=\"fragment\">\r\n                            <SliderLineComponent\r\n                                lockObject={this.props.lockObject}\r\n                                label=\"Meters per unit\"\r\n                                target={material.getScene().subSurfaceConfiguration!}\r\n                                propertyName=\"metersPerUnit\"\r\n                                minimum={0.01}\r\n                                maximum={2}\r\n                                step={0.01}\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    <CheckBoxLineComponent\r\n                        label=\"Refraction Enabled\"\r\n                        target={material.subSurface}\r\n                        propertyName=\"isRefractionEnabled\"\r\n                        onValueChanged={() => this.forceUpdate()}\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    {material.subSurface.isRefractionEnabled && (\r\n                        <div className=\"fragment\">\r\n                            <SliderLineComponent\r\n                                lockObject={this.props.lockObject}\r\n                                label=\"Intensity\"\r\n                                target={material.subSurface}\r\n                                propertyName=\"refractionIntensity\"\r\n                                minimum={0}\r\n                                maximum={1}\r\n                                step={0.01}\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            />\r\n                            <TextureLinkLineComponent\r\n                                label=\"Refraction Intensity\"\r\n                                texture={material.subSurface.refractionIntensityTexture}\r\n                                onTextureCreated={(texture) => (material.subSurface.refractionIntensityTexture = texture)}\r\n                                onTextureRemoved={() => (material.subSurface.refractionIntensityTexture = null)}\r\n                                material={material}\r\n                                onSelectionChangedObservable={this.props.onSelectionChangedObservable}\r\n                                onDebugSelectionChangeObservable={this._onDebugSelectionChangeObservable}\r\n                            />\r\n                            <TextureLinkLineComponent\r\n                                label=\"Refraction\"\r\n                                texture={material.subSurface.refractionTexture}\r\n                                onTextureCreated={(texture) => (material.subSurface.refractionTexture = texture)}\r\n                                onTextureRemoved={() => (material.subSurface.refractionTexture = null)}\r\n                                material={material}\r\n                                onSelectionChangedObservable={this.props.onSelectionChangedObservable}\r\n                                onDebugSelectionChangeObservable={this._onDebugSelectionChangeObservable}\r\n                            />\r\n                            <SliderLineComponent\r\n                                lockObject={this.props.lockObject}\r\n                                label=\"Volume Index of Refraction\"\r\n                                target={material.subSurface}\r\n                                propertyName=\"volumeIndexOfRefraction\"\r\n                                minimum={1}\r\n                                maximum={3}\r\n                                step={0.01}\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            />\r\n                            <SliderLineComponent\r\n                                lockObject={this.props.lockObject}\r\n                                label=\"Tint at Distance\"\r\n                                target={material.subSurface}\r\n                                propertyName=\"tintColorAtDistance\"\r\n                                minimum={0}\r\n                                maximum={10}\r\n                                step={0.1}\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            />\r\n                            <CheckBoxLineComponent\r\n                                label=\"Link refraction with transparency\"\r\n                                target={material.subSurface}\r\n                                propertyName=\"linkRefractionWithTransparency\"\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            />\r\n                            <CheckBoxLineComponent\r\n                                label=\"Use albedo to tint surface transparency\"\r\n                                target={material.subSurface}\r\n                                propertyName=\"useAlbedoToTintRefraction\"\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            />\r\n                        </div>\r\n                    )}\r\n\r\n                    <CheckBoxLineComponent\r\n                        label=\"Dispersion Enabled\"\r\n                        target={material.subSurface}\r\n                        propertyName=\"isDispersionEnabled\"\r\n                        onValueChanged={() => this.forceUpdate()}\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    {material.subSurface.isDispersionEnabled && (\r\n                        <div className=\"fragment\">\r\n                            <SliderLineComponent\r\n                                lockObject={this.props.lockObject}\r\n                                label=\"Intensity\"\r\n                                target={material.subSurface}\r\n                                propertyName=\"dispersion\"\r\n                                minimum={0}\r\n                                maximum={5}\r\n                                step={0.01}\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    <CheckBoxLineComponent\r\n                        label=\"Translucency Enabled\"\r\n                        target={material.subSurface}\r\n                        propertyName=\"isTranslucencyEnabled\"\r\n                        onValueChanged={() => this.forceUpdate()}\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    {material.subSurface.isTranslucencyEnabled && (\r\n                        <div className=\"fragment\">\r\n                            <SliderLineComponent\r\n                                lockObject={this.props.lockObject}\r\n                                label=\"Intensity\"\r\n                                target={material.subSurface}\r\n                                propertyName=\"translucencyIntensity\"\r\n                                minimum={0}\r\n                                maximum={1}\r\n                                step={0.01}\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            />\r\n                            <TextureLinkLineComponent\r\n                                label=\"Intensity\"\r\n                                texture={material.subSurface.translucencyIntensityTexture}\r\n                                onTextureCreated={(texture) => (material.subSurface.translucencyIntensityTexture = texture)}\r\n                                onTextureRemoved={() => (material.subSurface.translucencyIntensityTexture = null)}\r\n                                material={material}\r\n                                onSelectionChangedObservable={this.props.onSelectionChangedObservable}\r\n                                onDebugSelectionChangeObservable={this._onDebugSelectionChangeObservable}\r\n                            />\r\n                            <Color3LineComponent\r\n                                lockObject={this.props.lockObject}\r\n                                label=\"Diffusion Distance\"\r\n                                target={material.subSurface}\r\n                                propertyName=\"diffusionDistance\"\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                                isLinear={true}\r\n                            />\r\n                            <CheckBoxLineComponent\r\n                                label=\"Use albedo to tint surface translucency\"\r\n                                target={material.subSurface}\r\n                                propertyName=\"useAlbedoToTintTranslucency\"\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            />\r\n                            <Color3LineComponent\r\n                                lockObject={this.props.lockObject}\r\n                                label=\"Translucency Tint\"\r\n                                target={material.subSurface}\r\n                                propertyName=\"translucencyColor\"\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                                isLinear={true}\r\n                            />\r\n                            <TextureLinkLineComponent\r\n                                label=\"Translucency Tint\"\r\n                                texture={material.subSurface.translucencyColorTexture}\r\n                                onTextureCreated={(texture) => (material.subSurface.translucencyColorTexture = texture)}\r\n                                onTextureRemoved={() => (material.subSurface.translucencyColorTexture = null)}\r\n                                material={material}\r\n                                onSelectionChangedObservable={this.props.onSelectionChangedObservable}\r\n                                onDebugSelectionChangeObservable={this._onDebugSelectionChangeObservable}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </LineContainerComponent>\r\n                <LineContainerComponent title=\"LEVELS\" closed={true} selection={this.props.globalState}>\r\n                    <SliderLineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Environment\"\r\n                        target={material}\r\n                        propertyName=\"environmentIntensity\"\r\n                        minimum={0}\r\n                        maximum={1}\r\n                        step={0.01}\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <SliderLineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Specular\"\r\n                        target={material}\r\n                        propertyName=\"specularIntensity\"\r\n                        minimum={0}\r\n                        maximum={1}\r\n                        step={0.01}\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <SliderLineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Emissive\"\r\n                        target={material}\r\n                        propertyName=\"emissiveIntensity\"\r\n                        minimum={0}\r\n                        maximum={1}\r\n                        step={0.01}\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <SliderLineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Direct\"\r\n                        target={material}\r\n                        propertyName=\"directIntensity\"\r\n                        minimum={0}\r\n                        maximum={1}\r\n                        step={0.01}\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    {material.bumpTexture && (\r\n                        <SliderLineComponent\r\n                            lockObject={this.props.lockObject}\r\n                            label=\"Bump strength\"\r\n                            target={material.bumpTexture}\r\n                            propertyName=\"level\"\r\n                            minimum={0}\r\n                            maximum={2}\r\n                            step={0.01}\r\n                            onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        />\r\n                    )}\r\n                    {material.ambientTexture && (\r\n                        <SliderLineComponent\r\n                            lockObject={this.props.lockObject}\r\n                            label=\"Ambient strength\"\r\n                            target={material}\r\n                            propertyName=\"ambientTextureStrength\"\r\n                            minimum={0}\r\n                            maximum={1}\r\n                            step={0.01}\r\n                            onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        />\r\n                    )}\r\n                    {material.reflectionTexture && (\r\n                        <SliderLineComponent\r\n                            lockObject={this.props.lockObject}\r\n                            label=\"Reflection strength\"\r\n                            target={material.reflectionTexture}\r\n                            propertyName=\"level\"\r\n                            minimum={0}\r\n                            maximum={1}\r\n                            step={0.01}\r\n                            onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        />\r\n                    )}\r\n                    {material.clearCoat.texture && (\r\n                        <SliderLineComponent\r\n                            lockObject={this.props.lockObject}\r\n                            label=\"Clear coat\"\r\n                            target={material.clearCoat.texture}\r\n                            propertyName=\"level\"\r\n                            minimum={0}\r\n                            maximum={1}\r\n                            step={0.01}\r\n                            onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        />\r\n                    )}\r\n                    {material.clearCoat.bumpTexture && (\r\n                        <SliderLineComponent\r\n                            lockObject={this.props.lockObject}\r\n                            label=\"Clear coat bump\"\r\n                            target={material.clearCoat.bumpTexture}\r\n                            propertyName=\"level\"\r\n                            minimum={0}\r\n                            maximum={2}\r\n                            step={0.01}\r\n                            onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        />\r\n                    )}\r\n                    {material.clearCoat.tintTexture && false /* level is not used for the clear coat tint texture */ && (\r\n                        <SliderLineComponent\r\n                            lockObject={this.props.lockObject}\r\n                            label=\"Clear coat tint\"\r\n                            target={material.clearCoat.tintTexture}\r\n                            propertyName=\"level\"\r\n                            minimum={0}\r\n                            maximum={1}\r\n                            step={0.01}\r\n                            onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        />\r\n                    )}\r\n                    {material.anisotropy.texture && (\r\n                        <SliderLineComponent\r\n                            lockObject={this.props.lockObject}\r\n                            label=\"Anisotropic\"\r\n                            target={material.anisotropy.texture}\r\n                            propertyName=\"level\"\r\n                            minimum={0}\r\n                            maximum={1}\r\n                            step={0.01}\r\n                            onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        />\r\n                    )}\r\n                    {material.sheen.texture && (\r\n                        <SliderLineComponent\r\n                            lockObject={this.props.lockObject}\r\n                            label=\"Sheen\"\r\n                            target={material.sheen.texture}\r\n                            propertyName=\"level\"\r\n                            minimum={0}\r\n                            maximum={1}\r\n                            step={0.01}\r\n                            onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        />\r\n                    )}\r\n                    {material.subSurface.thicknessTexture && (\r\n                        <SliderLineComponent\r\n                            lockObject={this.props.lockObject}\r\n                            label=\"Thickness\"\r\n                            target={material.subSurface.thicknessTexture}\r\n                            propertyName=\"level\"\r\n                            minimum={0}\r\n                            maximum={1}\r\n                            step={0.01}\r\n                            onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        />\r\n                    )}\r\n                    {material.subSurface.refractionTexture && (\r\n                        <SliderLineComponent\r\n                            lockObject={this.props.lockObject}\r\n                            label=\"Refraction\"\r\n                            target={material.subSurface.refractionTexture}\r\n                            propertyName=\"level\"\r\n                            minimum={0}\r\n                            maximum={1}\r\n                            step={0.01}\r\n                            onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        />\r\n                    )}\r\n                    {material.detailMap.isEnabled && (\r\n                        <>\r\n                            <SliderLineComponent\r\n                                lockObject={this.props.lockObject}\r\n                                label=\"Detailmap diffuse\"\r\n                                target={material.detailMap}\r\n                                propertyName=\"diffuseBlendLevel\"\r\n                                minimum={0}\r\n                                maximum={1}\r\n                                step={0.01}\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            />\r\n                            <SliderLineComponent\r\n                                lockObject={this.props.lockObject}\r\n                                label=\"Detailmap bump\"\r\n                                target={material.detailMap}\r\n                                propertyName=\"bumpLevel\"\r\n                                minimum={0}\r\n                                maximum={1}\r\n                                step={0.01}\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            />\r\n                            <SliderLineComponent\r\n                                lockObject={this.props.lockObject}\r\n                                label=\"Detailmap roughness\"\r\n                                target={material.detailMap}\r\n                                propertyName=\"roughnessBlendLevel\"\r\n                                minimum={0}\r\n                                maximum={1}\r\n                                step={0.01}\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            />\r\n                        </>\r\n                    )}\r\n                </LineContainerComponent>\r\n                <LineContainerComponent title=\"RENDERING\" closed={true} selection={this.props.globalState}>\r\n                    <CheckBoxLineComponent\r\n                        label=\"Alpha from albedo\"\r\n                        target={material}\r\n                        propertyName=\"useAlphaFromAlbedoTexture\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <CheckBoxLineComponent\r\n                        label=\"Ambient in grayscale\"\r\n                        target={material}\r\n                        propertyName=\"useAmbientInGrayScale\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <CheckBoxLineComponent\r\n                        label=\"Radiance over alpha\"\r\n                        target={material}\r\n                        propertyName=\"useRadianceOverAlpha\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <CheckBoxLineComponent\r\n                        label=\"Micro-surface from ref. map alpha\"\r\n                        target={material}\r\n                        propertyName=\"useMicroSurfaceFromReflectivityMapAlpha\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <CheckBoxLineComponent\r\n                        label=\"Specular over alpha\"\r\n                        target={material}\r\n                        propertyName=\"useSpecularOverAlpha\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <CheckBoxLineComponent\r\n                        label=\"Specular anti-aliasing\"\r\n                        target={material}\r\n                        propertyName=\"enableSpecularAntiAliasing\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <CheckBoxLineComponent\r\n                        label=\"Realtime Filtering\"\r\n                        target={material}\r\n                        propertyName=\"realTimeFiltering\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <OptionsLine\r\n                        allowNullValue={true}\r\n                        label=\"Realtime Filtering quality\"\r\n                        options={realTimeFilteringQualityOptions}\r\n                        target={material}\r\n                        propertyName=\"realTimeFilteringQuality\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                </LineContainerComponent>\r\n                <LineContainerComponent title=\"NORMAL MAP\" closed={true} selection={this.props.globalState}>\r\n                    <CheckBoxLineComponent\r\n                        label=\"Invert X axis\"\r\n                        target={material}\r\n                        propertyName=\"invertNormalMapX\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <CheckBoxLineComponent\r\n                        label=\"Invert Y axis\"\r\n                        target={material}\r\n                        propertyName=\"invertNormalMapY\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                </LineContainerComponent>\r\n                <LineContainerComponent title=\"ADVANCED\" closed={true} selection={this.props.globalState}>\r\n                    <CheckBoxLineComponent\r\n                        label=\"Energy Conservation\"\r\n                        target={material.brdf}\r\n                        propertyName=\"useEnergyConservation\"\r\n                        onValueChanged={() => this.forceUpdate()}\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <CheckBoxLineComponent\r\n                        label=\"Spherical Harmonics\"\r\n                        target={material.brdf}\r\n                        propertyName=\"useSphericalHarmonics\"\r\n                        onValueChanged={() => this.forceUpdate()}\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <CheckBoxLineComponent\r\n                        label=\"Radiance occlusion\"\r\n                        target={material}\r\n                        propertyName=\"useRadianceOcclusion\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <CheckBoxLineComponent\r\n                        label=\"Horizon occlusion \"\r\n                        target={material}\r\n                        propertyName=\"useHorizonOcclusion\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <CheckBoxLineComponent label=\"Unlit\" target={material} propertyName=\"unlit\" onPropertyChangedObservable={this.props.onPropertyChangedObservable} />\r\n                </LineContainerComponent>\r\n                <LineContainerComponent title=\"DEBUG\" closed={true} selection={this.props.globalState}>\r\n                    <OptionsLine label=\"Debug mode\" options={debugMode} target={material} propertyName=\"debugMode\" />\r\n                    <SliderLineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Split position\"\r\n                        target={material}\r\n                        propertyName=\"debugLimit\"\r\n                        minimum={-1}\r\n                        maximum={1}\r\n                        step={0.01}\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <SliderLineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Output factor\"\r\n                        target={material}\r\n                        propertyName=\"debugFactor\"\r\n                        minimum={0}\r\n                        maximum={5}\r\n                        step={0.01}\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                </LineContainerComponent>\r\n            </>\r\n        );\r\n    }\r\n}\r\n"]}