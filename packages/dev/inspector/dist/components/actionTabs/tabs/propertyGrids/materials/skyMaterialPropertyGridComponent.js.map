{"version":3,"file":"skyMaterialPropertyGridComponent.js","sourceRoot":"","sources":["../../../../../../src/components/actionTabs/tabs/propertyGrids/materials/skyMaterialPropertyGridComponent.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\n\r\nimport type { Observable } from \"core/Misc/observable\";\r\nimport type { SkyMaterial } from \"materials/sky/skyMaterial\";\r\n\r\nimport type { PropertyChangedEvent } from \"../../../../propertyChangedEvent\";\r\nimport { LineContainerComponent } from \"shared-ui-components/lines/lineContainerComponent\";\r\nimport { CheckBoxLineComponent } from \"shared-ui-components/lines/checkBoxLineComponent\";\r\nimport { SliderLineComponent } from \"shared-ui-components/lines/sliderLineComponent\";\r\nimport { CommonMaterialPropertyGridComponent } from \"./commonMaterialPropertyGridComponent\";\r\nimport type { LockObject } from \"shared-ui-components/tabs/propertyGrids/lockObject\";\r\nimport type { GlobalState } from \"../../../../globalState\";\r\nimport { Vector3LineComponent } from \"shared-ui-components/lines/vector3LineComponent\";\r\n\r\ninterface ISkyMaterialPropertyGridComponentProps {\r\n    globalState: GlobalState;\r\n    material: SkyMaterial;\r\n    lockObject: LockObject;\r\n    onSelectionChangedObservable?: Observable<any>;\r\n    onPropertyChangedObservable?: Observable<PropertyChangedEvent>;\r\n}\r\n\r\n/**\r\n * Property grid component for the SkyMaterial\r\n */\r\nexport class SkyMaterialPropertyGridComponent extends React.Component<ISkyMaterialPropertyGridComponentProps> {\r\n    constructor(props: ISkyMaterialPropertyGridComponentProps) {\r\n        super(props);\r\n    }\r\n\r\n    renderSky() {\r\n        const material = this.props.material;\r\n\r\n        const sliderProps = [\r\n            {\r\n                label: \"Azimuth\",\r\n                property: \"azimuth\",\r\n                minimum: 0,\r\n                maximum: Math.PI * 2,\r\n                step: 0.001,\r\n            },\r\n            {\r\n                label: \"Inclination\",\r\n                property: \"inclination\",\r\n                minimum: 0,\r\n                maximum: Math.PI / 2,\r\n                step: 0.001,\r\n            },\r\n            {\r\n                label: \"Turbidity\",\r\n                property: \"turbidity\",\r\n                minimum: 0,\r\n                maximum: 100,\r\n                step: 0.1,\r\n            },\r\n            {\r\n                label: \"Luminance\",\r\n                property: \"luminance\",\r\n                minimum: 0,\r\n                maximum: 1,\r\n                step: 0.001,\r\n            },\r\n            {\r\n                label: \"Rayleigh\",\r\n                property: \"rayleigh\",\r\n                minimum: 0,\r\n                maximum: 4,\r\n                step: 0.001,\r\n            },\r\n            {\r\n                label: \"mieDirectionalG\",\r\n                property: \"mieDirectionalG\",\r\n                minimum: 0,\r\n                maximum: 1,\r\n                step: 0.001,\r\n            },\r\n            {\r\n                label: \"mieCoefficient\",\r\n                property: \"mieCoefficient\",\r\n                minimum: 0,\r\n                maximum: 1,\r\n                step: 0.001,\r\n            },\r\n            {\r\n                label: \"Distance\",\r\n                property: \"distance\",\r\n                minimum: 0,\r\n                maximum: 1000,\r\n                step: 0.1,\r\n            },\r\n        ];\r\n\r\n        const vector3Props = [\r\n            {\r\n                label: \"Sun pos\",\r\n                property: \"sunPosition\",\r\n            },\r\n            {\r\n                label: \"Camera offset\",\r\n                property: \"cameraOffset\",\r\n            },\r\n        ];\r\n\r\n        return (\r\n            <LineContainerComponent title=\"SKY\" selection={this.props.globalState}>\r\n                {sliderProps.map((prop) => (\r\n                    <SliderLineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label={prop.label}\r\n                        target={material}\r\n                        propertyName={prop.property}\r\n                        minimum={prop.minimum}\r\n                        maximum={prop.maximum}\r\n                        step={prop.step}\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                ))}\r\n                <CheckBoxLineComponent label=\"Use sun pos\" target={material} propertyName=\"useSunPosition\" onPropertyChangedObservable={this.props.onPropertyChangedObservable} />\r\n                {vector3Props.map((prop) => (\r\n                    <Vector3LineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label={prop.label}\r\n                        target={material}\r\n                        propertyName={prop.property}\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                ))}\r\n            </LineContainerComponent>\r\n        );\r\n    }\r\n\r\n    override render() {\r\n        const material = this.props.material;\r\n\r\n        return (\r\n            <>\r\n                <CommonMaterialPropertyGridComponent\r\n                    globalState={this.props.globalState}\r\n                    lockObject={this.props.lockObject}\r\n                    material={material}\r\n                    onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                />\r\n                {this.renderSky()}\r\n            </>\r\n        );\r\n    }\r\n}\r\n"]}