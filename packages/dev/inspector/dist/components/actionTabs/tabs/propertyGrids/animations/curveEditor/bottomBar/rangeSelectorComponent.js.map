{"version":3,"file":"rangeSelectorComponent.js","sourceRoot":"","sources":["../../../../../../../../src/components/actionTabs/tabs/propertyGrids/animations/curveEditor/bottomBar/rangeSelectorComponent.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { TargetedAnimation } from \"core/Animations/animationGroup\";\r\nimport * as React from \"react\";\r\nimport type { GlobalState } from \"../../../../../../globalState\";\r\nimport type { Context } from \"../context\";\r\nimport type { Animation } from \"core/Animations/animation\";\r\n\r\nimport handleIcon from \"../assets/scrollbarHandleIcon.svg\";\r\n\r\ninterface IRangeSelectorComponentProps {\r\n    globalState: GlobalState;\r\n    context: Context;\r\n}\r\n\r\ninterface IRangeSelectorComponentState {}\r\n\r\nexport class RangeSelectorComponent extends React.Component<IRangeSelectorComponentProps, IRangeSelectorComponentState> {\r\n    private _rangeHost: React.RefObject<HTMLDivElement>;\r\n    private _rangeScrollbarHost: React.RefObject<HTMLDivElement>;\r\n    private _viewWidth = 748;\r\n    private _pointerIsDown: boolean;\r\n    private _minFrame: number;\r\n    private _maxFrame: number;\r\n\r\n    private _leftHandleIsActive: boolean;\r\n    private _bothHandleIsActive: boolean;\r\n    private _currentOffset: number;\r\n    private _currentFrom: number;\r\n    private _currentTo: number;\r\n\r\n    constructor(props: IRangeSelectorComponentProps) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n\r\n        this._rangeHost = React.createRef();\r\n        this._rangeScrollbarHost = React.createRef();\r\n\r\n        this.props.context.onHostWindowResized.add(() => {\r\n            this._computeSizes();\r\n        });\r\n\r\n        this.props.context.onFrameSet.add(() => {\r\n            this.forceUpdate();\r\n        });\r\n\r\n        this.props.context.onAnimationsLoaded.add(() => {\r\n            this.forceUpdate();\r\n        });\r\n\r\n        this._updateLimits();\r\n    }\r\n\r\n    private _computeSizes() {\r\n        if (!this._rangeHost.current) {\r\n            return;\r\n        }\r\n\r\n        this._viewWidth = this._rangeHost.current.clientWidth - 4;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    private _onPointerDown(evt: React.PointerEvent<HTMLDivElement>) {\r\n        this._bothHandleIsActive = false;\r\n\r\n        if ((evt.nativeEvent.target as HTMLDivElement).id === \"left-handle\") {\r\n            this._leftHandleIsActive = true;\r\n        } else if ((evt.nativeEvent.target as HTMLDivElement).id === \"right-handle\") {\r\n            this._leftHandleIsActive = false;\r\n        } else {\r\n            this._bothHandleIsActive = true;\r\n            this._currentOffset = evt.nativeEvent.clientX;\r\n            this._currentFrom = this.props.context.fromKey;\r\n            this._currentTo = this.props.context.toKey;\r\n        }\r\n\r\n        this._pointerIsDown = true;\r\n        evt.currentTarget.setPointerCapture(evt.pointerId);\r\n    }\r\n\r\n    private _onPointerMove(evt: React.PointerEvent<HTMLDivElement>) {\r\n        if (!this._pointerIsDown) {\r\n            return;\r\n        }\r\n\r\n        if (!this.props.context.animations || !this.props.context.animations.length) {\r\n            return;\r\n        }\r\n\r\n        this._updateLimits();\r\n        let left = evt.nativeEvent.offsetX;\r\n\r\n        if (this._bothHandleIsActive) {\r\n            left = evt.nativeEvent.clientX - this._currentOffset;\r\n        }\r\n\r\n        let offset = (left / this._viewWidth) * (this._maxFrame - this._minFrame);\r\n        const newValue = Math.min(this._maxFrame, Math.max(this._minFrame, Math.round(this._minFrame + offset)));\r\n\r\n        if (this._bothHandleIsActive) {\r\n            if (this._currentTo + offset > this._maxFrame) {\r\n                offset = this._maxFrame - this._currentTo;\r\n            }\r\n            if (this._currentFrom + offset < this._minFrame) {\r\n                offset = this._minFrame - this._currentFrom;\r\n            }\r\n\r\n            this.props.context.fromKey = Math.min(this._maxFrame, Math.max(this._minFrame, (this._currentFrom + offset) | 0));\r\n            this.props.context.toKey = Math.min(this._maxFrame, Math.max(this._minFrame, (this._currentTo + offset) | 0));\r\n        } else if (this._leftHandleIsActive) {\r\n            this.props.context.fromKey = newValue;\r\n\r\n            this.props.context.fromKey = Math.min(this.props.context.toKey - 1, this.props.context.fromKey);\r\n        } else {\r\n            this.props.context.toKey = newValue;\r\n            this.props.context.toKey = Math.max(this.props.context.fromKey + 1, this.props.context.toKey);\r\n        }\r\n\r\n        this.props.context.onRangeUpdated.notifyObservers();\r\n        this.props.context.stop();\r\n\r\n        this.forceUpdate();\r\n    }\r\n\r\n    private _updateLimits() {\r\n        if (!this.props.context.animations || !this.props.context.animations.length) {\r\n            return;\r\n        }\r\n\r\n        let minFrame = Number.MAX_VALUE;\r\n        let maxFrame = -Number.MAX_VALUE;\r\n\r\n        for (const animation of this.props.context.animations) {\r\n            const keys = this.props.context.useTargetAnimations ? (animation as TargetedAnimation).animation.getKeys() : (animation as Animation).getKeys();\r\n\r\n            minFrame = Math.min(minFrame, keys[0].frame);\r\n            maxFrame = Math.max(maxFrame, keys[keys.length - 1].frame);\r\n        }\r\n\r\n        this._minFrame = minFrame;\r\n        this._maxFrame = maxFrame;\r\n    }\r\n\r\n    private _onPointerUp(evt: React.PointerEvent<HTMLDivElement>) {\r\n        this._pointerIsDown = false;\r\n        evt.currentTarget.releasePointerCapture(evt.pointerId);\r\n    }\r\n\r\n    public override render() {\r\n        this._updateLimits();\r\n\r\n        const ratio = this._maxFrame - this._minFrame;\r\n\r\n        if (this.props.context.toKey > this._maxFrame) {\r\n            this.props.context.toKey = this._maxFrame;\r\n        }\r\n\r\n        return (\r\n            <div\r\n                id=\"range-selector\"\r\n                ref={this._rangeHost}\r\n                onPointerDown={(evt) => this._onPointerDown(evt)}\r\n                onPointerMove={(evt) => this._onPointerMove(evt)}\r\n                onPointerUp={(evt) => this._onPointerUp(evt)}\r\n            >\r\n                <div\r\n                    id=\"range-scrollbar\"\r\n                    ref={this._rangeScrollbarHost}\r\n                    style={{\r\n                        left: `${2 + ((this.props.context.fromKey - this._minFrame) / ratio) * this._viewWidth}px`,\r\n                        right: `${2 + ((this._maxFrame - this.props.context.toKey) / ratio) * this._viewWidth}px`,\r\n                    }}\r\n                >\r\n                    <div id=\"left-handle\" className=\"handle\">\r\n                        <img src={handleIcon} />\r\n                    </div>\r\n                    <div id=\"from-key\">{this.props.context.fromKey | 0}</div>\r\n                    <div id=\"to-key\">{this.props.context.toKey | 0}</div>\r\n                    <div id=\"right-handle\" className=\"handle\">\r\n                        <img src={handleIcon} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]}