{"version":3,"file":"editAnimationComponent.js","sourceRoot":"","sources":["../../../../../../../../src/components/actionTabs/tabs/propertyGrids/animations/curveEditor/sideBar/editAnimationComponent.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport type { GlobalState } from \"../../../../../../globalState\";\r\nimport type { Context } from \"../context\";\r\nimport { Animation } from \"core/Animations/animation\";\r\nimport type { Nullable } from \"core/types\";\r\nimport type { Observer } from \"core/Misc/observable\";\r\n\r\ninterface IEditAnimationComponentProps {\r\n    globalState: GlobalState;\r\n    context: Context;\r\n}\r\n\r\ninterface IEditAnimationComponentState {\r\n    isVisible: boolean;\r\n    animation: Nullable<Animation>;\r\n}\r\n\r\nexport class EditAnimationComponent extends React.Component<IEditAnimationComponentProps, IEditAnimationComponentState> {\r\n    private _root: React.RefObject<HTMLDivElement>;\r\n    private _displayName: React.RefObject<HTMLInputElement>;\r\n    private _property: React.RefObject<HTMLInputElement>;\r\n    private _loopModeElement: React.RefObject<HTMLSelectElement>;\r\n    private _onEditAnimationRequiredObserver: Nullable<Observer<Animation>>;\r\n\r\n    constructor(props: IEditAnimationComponentProps) {\r\n        super(props);\r\n\r\n        this.state = { isVisible: false, animation: null };\r\n\r\n        this._root = React.createRef();\r\n        this._displayName = React.createRef();\r\n        this._property = React.createRef();\r\n        this._loopModeElement = React.createRef();\r\n\r\n        this._onEditAnimationRequiredObserver = this.props.context.onEditAnimationRequired.add((animation) => {\r\n            this.setState({\r\n                isVisible: true,\r\n                animation: animation,\r\n            });\r\n        });\r\n    }\r\n\r\n    override componentWillUnmount() {\r\n        if (this._onEditAnimationRequiredObserver) {\r\n            this.props.context.onEditAnimationRequired.remove(this._onEditAnimationRequiredObserver);\r\n        }\r\n    }\r\n\r\n    public close() {\r\n        this.setState({ isVisible: false });\r\n        this.props.context.onEditAnimationUIClosed.notifyObservers();\r\n    }\r\n\r\n    public validate() {\r\n        const context = this.props.context;\r\n        const document = this._displayName.current!.ownerDocument;\r\n        const displayName = this._displayName.current!.value;\r\n        const property = this._property.current!.value;\r\n        const loopModeValue = this._loopModeElement.current!.value;\r\n\r\n        if (!displayName) {\r\n            document.defaultView!.alert(\"Please define a display name\");\r\n            return;\r\n        }\r\n\r\n        if (!property) {\r\n            document.defaultView!.alert(\"Please define a property\");\r\n            return;\r\n        }\r\n\r\n        const animation = this.state.animation!;\r\n\r\n        animation.name = displayName;\r\n\r\n        if (animation.targetProperty !== property) {\r\n            animation.targetProperty = property;\r\n            animation.targetPropertyPath = property.split(\".\");\r\n            context.stop();\r\n        }\r\n\r\n        switch (loopModeValue) {\r\n            case \"Cycle\": {\r\n                animation.loopMode = Animation.ANIMATIONLOOPMODE_CYCLE;\r\n                break;\r\n            }\r\n            case \"Relative\": {\r\n                animation.loopMode = Animation.ANIMATIONLOOPMODE_RELATIVE;\r\n                break;\r\n            }\r\n            case \"Relative from current\": {\r\n                animation.loopMode = Animation.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT;\r\n                break;\r\n            }\r\n            case \"Constant\": {\r\n                animation.loopMode = Animation.ANIMATIONLOOPMODE_CONSTANT;\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.close();\r\n    }\r\n\r\n    public override render() {\r\n        if (!this.state.isVisible) {\r\n            return null;\r\n        }\r\n\r\n        const loopModes = [\"Relative\", \"Cycle\", \"Constant\", \"\", \"Yoyo\", \"Relative from current\"];\r\n\r\n        return (\r\n            <div id=\"edit-animation-pane\" ref={this._root}>\r\n                <div id=\"edit-animation-display-name-label\">Display Name</div>\r\n                <div id=\"edit-animation-property-label\">Property</div>\r\n                <div id=\"edit-animation-loop-mode-label\">Loop Mode</div>\r\n                <input type=\"text\" id=\"edit-animation-name\" ref={this._displayName} className=\"input-text\" defaultValue={this.state.animation!.name || \"\"} />\r\n                <input type=\"text\" id=\"edit-animation-property\" ref={this._property} className=\"input-text\" defaultValue={this.state.animation!.targetProperty} />\r\n                <select id=\"edit-animation-loop-mode\" className=\"option\" ref={this._loopModeElement} defaultValue={loopModes[this.state.animation!.loopMode ?? 1]}>\r\n                    {loopModes\r\n                        .filter((value) => value !== \"\")\r\n                        .map((loopMode, i) => {\r\n                            return (\r\n                                <option key={loopMode + i} value={loopMode} title={loopMode}>\r\n                                    {loopMode}\r\n                                </option>\r\n                            );\r\n                        })}\r\n                </select>\r\n                <div id=\"edit-animation\">\r\n                    <button className=\"simple-button\" id=\"edit-animation-ok\" type=\"button\" onClick={() => this.validate()}>\r\n                        OK\r\n                    </button>\r\n                    <button className=\"simple-button\" id=\"edit-animation-cancel\" type=\"button\" onClick={() => this.close()}>\r\n                        Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]}