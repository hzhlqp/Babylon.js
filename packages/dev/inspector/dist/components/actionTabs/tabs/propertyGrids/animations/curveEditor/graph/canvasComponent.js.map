{"version":3,"file":"canvasComponent.js","sourceRoot":"","sources":["../../../../../../../../src/components/actionTabs/tabs/propertyGrids/animations/curveEditor/graph/canvasComponent.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAG/B,OAAO,EAAE,iBAAiB,EAAE,MAAM,qBAAqB,CAAC;AACxD,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAClD,OAAO,EAAE,iBAAiB,EAAE,MAAM,qBAAqB,CAAC;AACxD,OAAO,EAAE,sBAAsB,EAAE,MAAM,0BAA0B,CAAC;AAIlE,OAAO,qBAAqB,CAAC;AAS7B,MAAM,OAAO,eAAgB,SAAQ,KAAK,CAAC,SAAuD;IAE9F,YAAY,KAA4B;QACpC,KAAK,CAAC,KAAK,CAAC,CAAC;QAEb,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAEhB,IAAI,CAAC,iCAAiC,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,wBAAwB,CAAC,GAAG,CAAC,GAAG,EAAE;YAC1F,IAAI,CAAC,WAAW,EAAE,CAAC;QACvB,CAAC,CAAC,CAAC;IACP,CAAC;IAEQ,oBAAoB;QACzB,IAAI,IAAI,CAAC,iCAAiC,EAAE;YACxC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,wBAAwB,CAAC,MAAM,CAAC,IAAI,CAAC,iCAAiC,CAAC,CAAC;SAC9F;IACL,CAAC;IAEe,MAAM;QAClB,OAAO,CACH,eAAK,EAAE,EAAC,aAAa,aACjB,KAAC,iBAAiB,IAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,GAAI,EACvF,KAAC,cAAc,IAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,GAAI,EACpF,KAAC,iBAAiB,IAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,GAAI,EACvF,KAAC,sBAAsB,IAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,GAAI,EAC3F,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,IAAI,cAAK,EAAE,EAAC,YAAY,GAAG,IACxE,CACT,CAAC;IACN,CAAC;CACJ","sourcesContent":["import * as React from \"react\";\r\nimport type { GlobalState } from \"../../../../../../globalState\";\r\nimport type { Context, IActiveAnimationChangedOptions } from \"../context\";\r\nimport { FrameBarComponent } from \"./frameBarComponent\";\r\nimport { GraphComponent } from \"./graphComponent\";\r\nimport { PlayHeadComponent } from \"./playHeadComponent\";\r\nimport { RangeFrameBarComponent } from \"./rangeFrameBarComponent\";\r\nimport type { Nullable } from \"core/types\";\r\nimport type { Observer } from \"core/Misc/observable\";\r\n\r\nimport \"../scss/canvas.scss\";\r\n\r\ninterface ICanvasComponentProps {\r\n    globalState: GlobalState;\r\n    context: Context;\r\n}\r\n\r\ninterface ICanvasComponentState {}\r\n\r\nexport class CanvasComponent extends React.Component<ICanvasComponentProps, ICanvasComponentState> {\r\n    private _onActiveAnimationChangedObserver: Nullable<Observer<IActiveAnimationChangedOptions>>;\r\n    constructor(props: ICanvasComponentProps) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n\r\n        this._onActiveAnimationChangedObserver = this.props.context.onActiveAnimationChanged.add(() => {\r\n            this.forceUpdate();\r\n        });\r\n    }\r\n\r\n    override componentWillUnmount() {\r\n        if (this._onActiveAnimationChangedObserver) {\r\n            this.props.context.onActiveAnimationChanged.remove(this._onActiveAnimationChangedObserver);\r\n        }\r\n    }\r\n\r\n    public override render() {\r\n        return (\r\n            <div id=\"canvas-zone\">\r\n                <FrameBarComponent globalState={this.props.globalState} context={this.props.context} />\r\n                <GraphComponent globalState={this.props.globalState} context={this.props.context} />\r\n                <PlayHeadComponent context={this.props.context} globalState={this.props.globalState} />\r\n                <RangeFrameBarComponent context={this.props.context} globalState={this.props.globalState} />\r\n                {this.props.context.activeAnimations.length > 0 && <div id=\"angle-mode\" />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]}