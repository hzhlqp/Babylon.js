{"version":3,"file":"pushButtonComponent.js","sourceRoot":"","sources":["../../../../../../../../src/components/actionTabs/tabs/propertyGrids/animations/curveEditor/controls/pushButtonComponent.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAmB/B,MAAM,OAAO,mBAAoB,SAAQ,KAAK,CAAC,SAA+D;IAC1G,YAAY,KAAgC;QACxC,KAAK,CAAC,KAAK,CAAC,CAAC;QAEb,IAAI,CAAC,KAAK,GAAG,EAAE,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;IACrD,CAAC;IAEe,MAAM;QAClB,OAAO,CACH,cACI,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,EACzB,SAAS,EAAE,aAAa,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAC5H,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,EACjB,OAAO,EAAE,GAAG,EAAE;gBACV,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;gBACzC,IAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;YACtD,CAAC,YAED,cAAK,SAAS,EAAC,mBAAmB,EAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,GAAI,GACzD,CACT,CAAC;IACN,CAAC;CACJ","sourcesContent":["import * as React from \"react\";\r\nimport type { GlobalState } from \"../../../../../../globalState\";\r\nimport type { Context } from \"../context\";\r\n\r\ninterface IPushButtonComponentProps {\r\n    globalState: GlobalState;\r\n    context: Context;\r\n    icon: string;\r\n    id?: string;\r\n    className?: string;\r\n    isPushed?: boolean;\r\n    onClick: (state: boolean) => void;\r\n    tooltip?: string;\r\n}\r\n\r\ninterface IPushButtonComponentState {\r\n    isPushed: boolean;\r\n}\r\n\r\nexport class PushButtonComponent extends React.Component<IPushButtonComponentProps, IPushButtonComponentState> {\r\n    constructor(props: IPushButtonComponentProps) {\r\n        super(props);\r\n\r\n        this.state = { isPushed: !!this.props.isPushed };\r\n    }\r\n\r\n    public override render() {\r\n        return (\r\n            <div\r\n                title={this.props.tooltip}\r\n                className={\"push-button\" + (this.state.isPushed ? \" active\" : \"\") + (this.props.className ? \" \" + this.props.className : \"\")}\r\n                id={this.props.id}\r\n                onClick={() => {\r\n                    this.props.onClick(!this.state.isPushed);\r\n                    this.setState({ isPushed: !this.state.isPushed });\r\n                }}\r\n            >\r\n                <img className=\"push-button-image\" src={this.props.icon} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]}