{"version":3,"file":"pbrMetallicRoughnessMaterialPropertyGridComponent.js","sourceRoot":"","sources":["../../../../../../src/components/actionTabs/tabs/propertyGrids/materials/pbrMetallicRoughnessMaterialPropertyGridComponent.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\n\r\nimport { Observable } from \"core/Misc/observable\";\r\nimport type { PBRMetallicRoughnessMaterial } from \"core/Materials/PBR/pbrMetallicRoughnessMaterial\";\r\n\r\nimport type { PropertyChangedEvent } from \"../../../../propertyChangedEvent\";\r\nimport { LineContainerComponent } from \"shared-ui-components/lines/lineContainerComponent\";\r\nimport { Color3LineComponent } from \"shared-ui-components/lines/color3LineComponent\";\r\nimport { SliderLineComponent } from \"shared-ui-components/lines/sliderLineComponent\";\r\nimport { CommonMaterialPropertyGridComponent } from \"./commonMaterialPropertyGridComponent\";\r\nimport { TextureLinkLineComponent } from \"../../../lines/textureLinkLineComponent\";\r\nimport type { LockObject } from \"shared-ui-components/tabs/propertyGrids/lockObject\";\r\nimport type { GlobalState } from \"../../../../globalState\";\r\nimport { CheckBoxLineComponent } from \"shared-ui-components/lines/checkBoxLineComponent\";\r\n\r\ninterface IPBRMetallicRoughnessMaterialPropertyGridComponentProps {\r\n    globalState: GlobalState;\r\n    material: PBRMetallicRoughnessMaterial;\r\n    lockObject: LockObject;\r\n    onSelectionChangedObservable?: Observable<any>;\r\n    onPropertyChangedObservable?: Observable<PropertyChangedEvent>;\r\n}\r\n\r\nexport class PBRMetallicRoughnessMaterialPropertyGridComponent extends React.Component<IPBRMetallicRoughnessMaterialPropertyGridComponentProps> {\r\n    private _onDebugSelectionChangeObservable = new Observable<TextureLinkLineComponent>();\r\n\r\n    constructor(props: IPBRMetallicRoughnessMaterialPropertyGridComponentProps) {\r\n        super(props);\r\n    }\r\n\r\n    renderTextures() {\r\n        const material = this.props.material;\r\n        const onDebugSelectionChangeObservable = this._onDebugSelectionChangeObservable;\r\n\r\n        return (\r\n            <LineContainerComponent title=\"TEXTURES\" selection={this.props.globalState}>\r\n                <TextureLinkLineComponent\r\n                    label=\"Base\"\r\n                    texture={material.baseTexture}\r\n                    propertyName=\"baseTexture\"\r\n                    material={material}\r\n                    onSelectionChangedObservable={this.props.onSelectionChangedObservable}\r\n                    onDebugSelectionChangeObservable={onDebugSelectionChangeObservable}\r\n                />\r\n                <TextureLinkLineComponent\r\n                    label=\"Metallic roughness\"\r\n                    texture={material.metallicRoughnessTexture}\r\n                    propertyName=\"metallicRoughnessTexture\"\r\n                    material={material}\r\n                    onSelectionChangedObservable={this.props.onSelectionChangedObservable}\r\n                    onDebugSelectionChangeObservable={onDebugSelectionChangeObservable}\r\n                />\r\n                <TextureLinkLineComponent\r\n                    label=\"Normal\"\r\n                    texture={material.normalTexture}\r\n                    propertyName=\"normalTexture\"\r\n                    material={material}\r\n                    onSelectionChangedObservable={this.props.onSelectionChangedObservable}\r\n                    onDebugSelectionChangeObservable={onDebugSelectionChangeObservable}\r\n                />\r\n                <TextureLinkLineComponent\r\n                    label=\"Environment\"\r\n                    texture={material.environmentTexture}\r\n                    propertyName=\"environmentTexture\"\r\n                    material={material}\r\n                    onSelectionChangedObservable={this.props.onSelectionChangedObservable}\r\n                    onDebugSelectionChangeObservable={onDebugSelectionChangeObservable}\r\n                />\r\n                <TextureLinkLineComponent\r\n                    label=\"Emissive\"\r\n                    texture={material.emissiveTexture}\r\n                    propertyName=\"emissiveTexture\"\r\n                    material={material}\r\n                    onSelectionChangedObservable={this.props.onSelectionChangedObservable}\r\n                    onDebugSelectionChangeObservable={onDebugSelectionChangeObservable}\r\n                />\r\n                <TextureLinkLineComponent\r\n                    label=\"Lightmap\"\r\n                    texture={material.lightmapTexture}\r\n                    propertyName=\"lightmapTexture\"\r\n                    material={material}\r\n                    onSelectionChangedObservable={this.props.onSelectionChangedObservable}\r\n                    onDebugSelectionChangeObservable={onDebugSelectionChangeObservable}\r\n                />\r\n            </LineContainerComponent>\r\n        );\r\n    }\r\n\r\n    override render() {\r\n        const material = this.props.material;\r\n\r\n        return (\r\n            <>\r\n                <CommonMaterialPropertyGridComponent\r\n                    globalState={this.props.globalState}\r\n                    lockObject={this.props.lockObject}\r\n                    material={material}\r\n                    onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                />\r\n                {this.renderTextures()}\r\n                <LineContainerComponent title=\"LIGHTING & COLORS\" selection={this.props.globalState}>\r\n                    <Color3LineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Base\"\r\n                        target={material}\r\n                        propertyName=\"baseColor\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        isLinear={true}\r\n                    />\r\n                    <Color3LineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Emissive\"\r\n                        target={material}\r\n                        propertyName=\"emissiveColor\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        isLinear={true}\r\n                    />\r\n                </LineContainerComponent>\r\n                <LineContainerComponent title=\"LEVELS\" closed={true} selection={this.props.globalState}>\r\n                    <SliderLineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Metallic\"\r\n                        target={material}\r\n                        propertyName=\"metallic\"\r\n                        minimum={0}\r\n                        maximum={1}\r\n                        step={0.01}\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <SliderLineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Roughness\"\r\n                        target={material}\r\n                        propertyName=\"roughness\"\r\n                        minimum={0}\r\n                        maximum={1}\r\n                        step={0.01}\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                </LineContainerComponent>\r\n                <LineContainerComponent title=\"NORMAL MAP\" closed={true} selection={this.props.globalState}>\r\n                    <CheckBoxLineComponent\r\n                        label=\"Invert X axis\"\r\n                        target={material}\r\n                        propertyName=\"invertNormalMapX\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <CheckBoxLineComponent\r\n                        label=\"Invert Y axis\"\r\n                        target={material}\r\n                        propertyName=\"invertNormalMapY\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                </LineContainerComponent>\r\n            </>\r\n        );\r\n    }\r\n}\r\n"]}