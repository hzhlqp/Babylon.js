{"version":3,"file":"commonMaterialPropertyGridComponent.js","sourceRoot":"","sources":["../../../../../../src/components/actionTabs/tabs/propertyGrids/materials/commonMaterialPropertyGridComponent.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\n\r\nimport type { Observable } from \"core/Misc/observable\";\r\nimport { Material } from \"core/Materials/material\";\r\nimport { PBRMaterial } from \"core/Materials/PBR/pbrMaterial\";\r\nimport { Constants } from \"core/Engines/constants\";\r\nimport { Engine } from \"core/Engines/engine\";\r\n\r\nimport type { PropertyChangedEvent } from \"../../../../propertyChangedEvent\";\r\nimport { CheckBoxLineComponent } from \"shared-ui-components/lines/checkBoxLineComponent\";\r\nimport { SliderLineComponent } from \"shared-ui-components/lines/sliderLineComponent\";\r\nimport { LineContainerComponent } from \"shared-ui-components/lines/lineContainerComponent\";\r\nimport { TextLineComponent } from \"shared-ui-components/lines/textLineComponent\";\r\nimport { OptionsLine, Null_Value } from \"shared-ui-components/lines/optionsLineComponent\";\r\nimport type { LockObject } from \"shared-ui-components/tabs/propertyGrids/lockObject\";\r\nimport type { GlobalState } from \"../../../../globalState\";\r\nimport { CustomPropertyGridComponent } from \"../customPropertyGridComponent\";\r\nimport { ButtonLineComponent } from \"shared-ui-components/lines/buttonLineComponent\";\r\nimport { TextInputLineComponent } from \"shared-ui-components/lines/textInputLineComponent\";\r\nimport { AnimationGridComponent } from \"../animations/animationPropertyGridComponent\";\r\nimport { HexLineComponent } from \"shared-ui-components/lines/hexLineComponent\";\r\nimport { FloatLineComponent } from \"shared-ui-components/lines/floatLineComponent\";\r\n\r\ninterface ICommonMaterialPropertyGridComponentProps {\r\n    globalState: GlobalState;\r\n    material: Material;\r\n    lockObject: LockObject;\r\n    onPropertyChangedObservable?: Observable<PropertyChangedEvent>;\r\n}\r\n\r\nexport class CommonMaterialPropertyGridComponent extends React.Component<ICommonMaterialPropertyGridComponentProps> {\r\n    constructor(props: ICommonMaterialPropertyGridComponentProps) {\r\n        super(props);\r\n    }\r\n\r\n    override render() {\r\n        const material = this.props.material;\r\n\r\n        material.depthFunction = material.depthFunction ?? 0;\r\n\r\n        const orientationOptions = [\r\n            { label: \"<None>\", value: Number.MAX_SAFE_INTEGER },\r\n            { label: \"Clockwise\", value: Material.ClockWiseSideOrientation },\r\n            { label: \"Counterclockwise\", value: Material.CounterClockWiseSideOrientation },\r\n        ];\r\n\r\n        const transparencyModeOptions = [\r\n            { label: \"<Not Defined>\", value: Null_Value },\r\n            { label: \"Opaque\", value: PBRMaterial.PBRMATERIAL_OPAQUE },\r\n            { label: \"Alpha test\", value: PBRMaterial.PBRMATERIAL_ALPHATEST },\r\n            { label: \"Alpha blend\", value: PBRMaterial.PBRMATERIAL_ALPHABLEND },\r\n            { label: \"Alpha blend and test\", value: PBRMaterial.PBRMATERIAL_ALPHATESTANDBLEND },\r\n        ];\r\n\r\n        const alphaModeOptions = [\r\n            { label: \"Combine\", value: Constants.ALPHA_COMBINE },\r\n            { label: \"One one\", value: Constants.ALPHA_ONEONE },\r\n            { label: \"Add\", value: Constants.ALPHA_ADD },\r\n            { label: \"Subtract\", value: Constants.ALPHA_SUBTRACT },\r\n            { label: \"Multiply\", value: Constants.ALPHA_MULTIPLY },\r\n            { label: \"Maximized\", value: Constants.ALPHA_MAXIMIZED },\r\n            { label: \"Pre-multiplied\", value: Constants.ALPHA_PREMULTIPLIED },\r\n        ];\r\n\r\n        const depthfunctionOptions = [\r\n            { label: \"<Engine Default>\", value: 0 },\r\n            { label: \"Never\", value: Engine.NEVER },\r\n            { label: \"Always\", value: Engine.ALWAYS },\r\n            { label: \"Equal\", value: Engine.EQUAL },\r\n            { label: \"Less\", value: Engine.LESS },\r\n            { label: \"Less or equal\", value: Engine.LEQUAL },\r\n            { label: \"Greater\", value: Engine.GREATER },\r\n            { label: \"Greater or equal\", value: Engine.GEQUAL },\r\n            { label: \"Not equal\", value: Engine.NOTEQUAL },\r\n        ];\r\n\r\n        const stencilFunctionOptions = [\r\n            { label: \"Never\", value: Constants.NEVER },\r\n            { label: \"Always\", value: Constants.ALWAYS },\r\n            { label: \"Equal\", value: Constants.EQUAL },\r\n            { label: \"Less\", value: Constants.LESS },\r\n            { label: \"Less or equal\", value: Constants.LEQUAL },\r\n            { label: \"Greater\", value: Constants.GREATER },\r\n            { label: \"Greater or equal\", value: Constants.GEQUAL },\r\n            { label: \"Not equal\", value: Constants.NOTEQUAL },\r\n        ];\r\n\r\n        const stencilOperationOptions = [\r\n            { label: \"Keep\", value: Constants.KEEP },\r\n            { label: \"Zero\", value: Constants.ZERO },\r\n            { label: \"Replace\", value: Constants.REPLACE },\r\n            { label: \"Incr\", value: Constants.INCR },\r\n            { label: \"Decr\", value: Constants.DECR },\r\n            { label: \"Invert\", value: Constants.INVERT },\r\n            { label: \"Incr wrap\", value: Constants.INCR_WRAP },\r\n            { label: \"Decr wrap\", value: Constants.DECR_WRAP },\r\n        ];\r\n\r\n        return (\r\n            <div>\r\n                <CustomPropertyGridComponent\r\n                    globalState={this.props.globalState}\r\n                    target={material}\r\n                    lockObject={this.props.lockObject}\r\n                    onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                />\r\n                <LineContainerComponent title=\"GENERAL\" selection={this.props.globalState}>\r\n                    <TextLineComponent label=\"ID\" value={material.id} />\r\n                    <TextInputLineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Name\"\r\n                        target={material}\r\n                        propertyName=\"name\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <TextLineComponent label=\"Unique ID\" value={material.uniqueId.toString()} />\r\n                    <TextLineComponent label=\"Class\" value={material.getClassName()} />\r\n                    <CheckBoxLineComponent\r\n                        label=\"Backface culling\"\r\n                        target={material}\r\n                        propertyName=\"backFaceCulling\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <OptionsLine\r\n                        label=\"Orientation\"\r\n                        options={orientationOptions}\r\n                        target={material}\r\n                        propertyName=\"sideOrientation\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        allowNullValue={true}\r\n                        onSelect={(value) => this.setState({ mode: value })}\r\n                    />\r\n                    <CheckBoxLineComponent\r\n                        label=\"Disable lighting\"\r\n                        target={material}\r\n                        propertyName=\"disableLighting\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <CheckBoxLineComponent\r\n                        label=\"Disable color write\"\r\n                        target={material}\r\n                        propertyName=\"disableColorWrite\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <CheckBoxLineComponent\r\n                        label=\"Disable depth write\"\r\n                        target={material}\r\n                        propertyName=\"disableDepthWrite\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <OptionsLine\r\n                        label=\"Depth function\"\r\n                        options={depthfunctionOptions}\r\n                        target={material}\r\n                        propertyName=\"depthFunction\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        onSelect={(value) => this.setState({ depthFunction: value })}\r\n                    />\r\n                    <CheckBoxLineComponent\r\n                        label=\"Need depth pre-pass\"\r\n                        target={material}\r\n                        propertyName=\"needDepthPrePass\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <CheckBoxLineComponent label=\"Wireframe\" target={material} propertyName=\"wireframe\" onPropertyChangedObservable={this.props.onPropertyChangedObservable} />\r\n                    <CheckBoxLineComponent label=\"Point cloud\" target={material} propertyName=\"pointsCloud\" onPropertyChangedObservable={this.props.onPropertyChangedObservable} />\r\n                    <SliderLineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Point size\"\r\n                        target={material}\r\n                        propertyName=\"pointSize\"\r\n                        minimum={0}\r\n                        maximum={100}\r\n                        step={0.1}\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <SliderLineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Z-offset Factor\"\r\n                        target={material}\r\n                        propertyName=\"zOffset\"\r\n                        minimum={-10}\r\n                        maximum={10}\r\n                        step={0.1}\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <SliderLineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Z-offset Units\"\r\n                        target={material}\r\n                        propertyName=\"zOffsetUnits\"\r\n                        minimum={-10}\r\n                        maximum={10}\r\n                        step={0.1}\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <ButtonLineComponent\r\n                        label=\"Dispose\"\r\n                        onClick={() => {\r\n                            material.dispose();\r\n                            this.props.globalState.onSelectionChangedObservable.notifyObservers(null);\r\n                        }}\r\n                    />\r\n                </LineContainerComponent>\r\n                <LineContainerComponent title=\"TRANSPARENCY\" selection={this.props.globalState}>\r\n                    <SliderLineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Alpha\"\r\n                        target={material}\r\n                        propertyName=\"alpha\"\r\n                        minimum={0}\r\n                        maximum={1}\r\n                        step={0.01}\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    {(material as any).transparencyMode !== undefined && (\r\n                        <OptionsLine\r\n                            allowNullValue={true}\r\n                            label=\"Transparency mode\"\r\n                            options={transparencyModeOptions}\r\n                            target={material}\r\n                            propertyName=\"transparencyMode\"\r\n                            onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            onSelect={(value) => this.setState({ transparencyMode: value })}\r\n                        />\r\n                    )}\r\n                    <OptionsLine\r\n                        label=\"Alpha mode\"\r\n                        options={alphaModeOptions}\r\n                        target={material}\r\n                        propertyName=\"alphaMode\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        onSelect={(value) => this.setState({ alphaMode: value })}\r\n                    />\r\n                    {(material as any).diffuseTexture && (\r\n                        <CheckBoxLineComponent\r\n                            label=\"Diffuse texture has alpha\"\r\n                            target={(material as any).diffuseTexture}\r\n                            propertyName=\"hasAlpha\"\r\n                            onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        />\r\n                    )}\r\n                    {(material as any).useAlphaFromDiffuseTexture !== undefined && (\r\n                        <CheckBoxLineComponent\r\n                            label=\"Use alpha from diffuse texture\"\r\n                            target={material}\r\n                            propertyName=\"useAlphaFromDiffuseTexture\"\r\n                            onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        />\r\n                    )}\r\n                    {(material as any).albedoTexture && (\r\n                        <CheckBoxLineComponent\r\n                            label=\"Albedo texture has alpha\"\r\n                            target={(material as any).albedoTexture}\r\n                            propertyName=\"hasAlpha\"\r\n                            onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        />\r\n                    )}\r\n                    {(material as any).useAlphaFromAlbedoTexture !== undefined && (\r\n                        <CheckBoxLineComponent\r\n                            label=\"Use alpha from albedo texture\"\r\n                            target={material}\r\n                            propertyName=\"useAlphaFromAlbedoTexture\"\r\n                            onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        />\r\n                    )}\r\n                    <CheckBoxLineComponent\r\n                        label=\"Separate culling pass\"\r\n                        target={material}\r\n                        propertyName=\"separateCullingPass\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                </LineContainerComponent>\r\n                {material.stencil && (\r\n                    <>\r\n                        <LineContainerComponent title=\"STENCIL\" selection={this.props.globalState}>\r\n                            <CheckBoxLineComponent\r\n                                label=\"Enabled\"\r\n                                target={material.stencil}\r\n                                propertyName=\"enabled\"\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            />\r\n                            <HexLineComponent\r\n                                isInteger\r\n                                lockObject={this.props.lockObject}\r\n                                label=\"Mask\"\r\n                                target={material.stencil}\r\n                                propertyName=\"mask\"\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            />\r\n                            <OptionsLine\r\n                                label=\"Function\"\r\n                                options={stencilFunctionOptions}\r\n                                target={material.stencil}\r\n                                propertyName=\"func\"\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                                onSelect={(value) => this.setState({ stencilFunction: value })}\r\n                            />\r\n                            <FloatLineComponent\r\n                                isInteger\r\n                                lockObject={this.props.lockObject}\r\n                                label=\"Function reference\"\r\n                                target={material.stencil}\r\n                                propertyName=\"funcRef\"\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            />\r\n                            <HexLineComponent\r\n                                isInteger\r\n                                lockObject={this.props.lockObject}\r\n                                label=\"Function mask\"\r\n                                target={material.stencil}\r\n                                propertyName=\"funcMask\"\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            />\r\n                            <OptionsLine\r\n                                label=\"Op stencil fail\"\r\n                                options={stencilOperationOptions}\r\n                                target={material.stencil}\r\n                                propertyName=\"opStencilFail\"\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                                onSelect={(value) => this.setState({ opStencilFail: value })}\r\n                            />\r\n                            <OptionsLine\r\n                                label=\"Op depth fail\"\r\n                                options={stencilOperationOptions}\r\n                                target={material.stencil}\r\n                                propertyName=\"opDepthFail\"\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                                onSelect={(value) => this.setState({ opDepthFail: value })}\r\n                            />\r\n                            <OptionsLine\r\n                                label=\"Op stencil+depth pass\"\r\n                                options={stencilOperationOptions}\r\n                                target={material.stencil}\r\n                                propertyName=\"opStencilDepthPass\"\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                                onSelect={(value) => this.setState({ opStencilDepthPass: value })}\r\n                            />\r\n                        </LineContainerComponent>\r\n                    </>\r\n                )}\r\n                <AnimationGridComponent globalState={this.props.globalState} animatable={material} scene={material.getScene()} lockObject={this.props.lockObject} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]}