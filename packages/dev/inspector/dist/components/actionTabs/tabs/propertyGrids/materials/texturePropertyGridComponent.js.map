{"version":3,"file":"texturePropertyGridComponent.js","sourceRoot":"","sources":["../../../../../../src/components/actionTabs/tabs/propertyGrids/materials/texturePropertyGridComponent.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\n\r\nimport type { Nullable } from \"core/types\";\r\nimport { Tools } from \"core/Misc/tools\";\r\nimport type { Observable } from \"core/Misc/observable\";\r\nimport type { BaseTexture } from \"core/Materials/Textures/baseTexture\";\r\nimport { Texture } from \"core/Materials/Textures/texture\";\r\nimport { RenderTargetTexture } from \"core/Materials/Textures/renderTargetTexture\";\r\nimport { MultiRenderTarget } from \"core/Materials/Textures/multiRenderTarget\";\r\nimport type { CubeTexture } from \"core/Materials/Textures/cubeTexture\";\r\nimport { Constants } from \"core/Engines/constants\";\r\n\r\nimport type { PropertyChangedEvent } from \"../../../../propertyChangedEvent\";\r\nimport { LineContainerComponent } from \"shared-ui-components/lines/lineContainerComponent\";\r\nimport { SliderLineComponent } from \"shared-ui-components/lines/sliderLineComponent\";\r\nimport { TextLineComponent } from \"shared-ui-components/lines/textLineComponent\";\r\nimport { CheckBoxLineComponent } from \"shared-ui-components/lines/checkBoxLineComponent\";\r\nimport { TextureLineComponent } from \"../../../lines/textureLineComponent\";\r\nimport { FloatLineComponent } from \"shared-ui-components/lines/floatLineComponent\";\r\nimport { OptionsLine } from \"shared-ui-components/lines/optionsLineComponent\";\r\nimport { FileButtonLine } from \"shared-ui-components/lines/fileButtonLineComponent\";\r\nimport type { LockObject } from \"shared-ui-components/tabs/propertyGrids/lockObject\";\r\nimport { ValueLineComponent } from \"shared-ui-components/lines/valueLineComponent\";\r\nimport type { GlobalState } from \"../../../../../components/globalState\";\r\n\r\nimport { AdvancedDynamicTextureInstrumentation } from \"gui/2D/adtInstrumentation\";\r\nimport { AdvancedDynamicTexture } from \"gui/2D/advancedDynamicTexture\";\r\nimport { CustomPropertyGridComponent } from \"../customPropertyGridComponent\";\r\nimport { ButtonLineComponent } from \"shared-ui-components/lines/buttonLineComponent\";\r\nimport { TextInputLineComponent } from \"shared-ui-components/lines/textInputLineComponent\";\r\nimport { AnimationGridComponent } from \"../animations/animationPropertyGridComponent\";\r\n\r\nimport { PopupComponent } from \"../../../../popupComponent\";\r\nimport { TextureEditorComponent } from \"./textures/textureEditorComponent\";\r\nimport { EditAdvancedDynamicTexture } from \"../../../../sceneExplorer/entities/gui/guiTools\";\r\n\r\ninterface ITexturePropertyGridComponentProps {\r\n    texture: BaseTexture;\r\n    lockObject: LockObject;\r\n    globalState: GlobalState;\r\n    onPropertyChangedObservable?: Observable<PropertyChangedEvent>;\r\n}\r\n\r\ninterface ITexturePropertyGridComponentState {\r\n    isTextureEditorOpen: boolean;\r\n    textureEditing: Nullable<BaseTexture>;\r\n}\r\n\r\nconst textureFormat = [\r\n    { label: \"Alpha\", normalizable: 0, value: Constants.TEXTUREFORMAT_ALPHA },\r\n    { label: \"Luminance\", normalizable: 0, value: Constants.TEXTUREFORMAT_LUMINANCE },\r\n    { label: \"Luminance/Alpha\", normalizable: 0, value: Constants.TEXTUREFORMAT_LUMINANCE_ALPHA },\r\n    { label: \"RGB\", normalizable: 1, value: Constants.TEXTUREFORMAT_RGB },\r\n    { label: \"RGBA\", normalizable: 1, value: Constants.TEXTUREFORMAT_RGBA },\r\n    { label: \"R (red)\", normalizable: 1, value: Constants.TEXTUREFORMAT_RED },\r\n    { label: \"RG (red/green)\", normalizable: 1, value: Constants.TEXTUREFORMAT_RG },\r\n    { label: \"R (red) integer\", normalizable: 0, value: Constants.TEXTUREFORMAT_RED_INTEGER },\r\n    { label: \"RG (red/green) integer\", normalizable: 0, value: Constants.TEXTUREFORMAT_RG_INTEGER },\r\n    { label: \"RGB integer\", normalizable: 0, value: Constants.TEXTUREFORMAT_RGB_INTEGER },\r\n    { label: \"RGBA integer\", normalizable: 0, value: Constants.TEXTUREFORMAT_RGBA_INTEGER },\r\n    { label: \"BGRA\", normalizable: 1, value: Constants.TEXTUREFORMAT_BGRA },\r\n    { label: \"Depth24/Stencil8\", normalizable: 0, hideType: true, value: Constants.TEXTUREFORMAT_DEPTH24_STENCIL8 },\r\n    { label: \"Depth32 float\", normalizable: 0, hideType: true, value: Constants.TEXTUREFORMAT_DEPTH32_FLOAT },\r\n    { label: \"Depth16\", normalizable: 0, value: Constants.TEXTUREFORMAT_DEPTH16 },\r\n    { label: \"Depth24\", normalizable: 0, value: Constants.TEXTUREFORMAT_DEPTH24 },\r\n    { label: \"Depth24Unorm/Stencil8\", normalizable: 0, hideType: true, value: Constants.TEXTUREFORMAT_DEPTH24UNORM_STENCIL8 },\r\n    { label: \"Depth32Float/Stencil8\", normalizable: 0, hideType: true, value: Constants.TEXTUREFORMAT_DEPTH32FLOAT_STENCIL8 },\r\n    { label: \"RGBA BPTC UNorm\", normalizable: 0, compressed: true, value: Constants.TEXTUREFORMAT_COMPRESSED_RGBA_BPTC_UNORM },\r\n    { label: \"RGB BPTC UFloat\", normalizable: 0, compressed: true, value: Constants.TEXTUREFORMAT_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT },\r\n    { label: \"RGB BPTC SFloat\", normalizable: 0, compressed: true, value: Constants.TEXTUREFORMAT_COMPRESSED_RGB_BPTC_SIGNED_FLOAT },\r\n    { label: \"RGBA S3TC DXT5\", normalizable: 0, compressed: true, value: Constants.TEXTUREFORMAT_COMPRESSED_RGBA_S3TC_DXT5 },\r\n    { label: \"RGBA S3TC DXT3\", normalizable: 0, compressed: true, value: Constants.TEXTUREFORMAT_COMPRESSED_RGBA_S3TC_DXT3 },\r\n    { label: \"RGBA S3TC DXT1\", normalizable: 0, compressed: true, value: Constants.TEXTUREFORMAT_COMPRESSED_RGBA_S3TC_DXT1 },\r\n    { label: \"RGB S3TC DXT1\", normalizable: 0, compressed: true, value: Constants.TEXTUREFORMAT_COMPRESSED_RGB_S3TC_DXT1 },\r\n    { label: \"RGBA ASTC 4x4\", normalizable: 0, compressed: true, value: Constants.TEXTUREFORMAT_COMPRESSED_RGBA_ASTC_4x4 },\r\n];\r\n\r\nconst textureType = [\r\n    { label: \"unsigned byte\", normalizable: 1, value: Constants.TEXTURETYPE_UNSIGNED_BYTE },\r\n    { label: \"32-bit float\", normalizable: 0, value: Constants.TEXTURETYPE_FLOAT },\r\n    { label: \"16-bit float\", normalizable: 0, value: Constants.TEXTURETYPE_HALF_FLOAT },\r\n    { label: \"signed byte\", normalizable: 1, value: Constants.TEXTURETYPE_BYTE },\r\n    { label: \"signed short\", normalizable: 0, value: Constants.TEXTURETYPE_SHORT },\r\n    { label: \"unsigned short\", normalizable: 0, value: Constants.TEXTURETYPE_UNSIGNED_SHORT },\r\n    { label: \"signed int\", normalizable: 0, value: Constants.TEXTURETYPE_INT },\r\n    { label: \"unsigned int\", normalizable: 0, value: Constants.TEXTURETYPE_UNSIGNED_INTEGER },\r\n    { label: \"unsigned 4/4/4/4 short\", normalizable: 0, value: Constants.TEXTURETYPE_UNSIGNED_SHORT_4_4_4_4 },\r\n    { label: \"unsigned 5/5/5/1 short\", normalizable: 0, value: Constants.TEXTURETYPE_UNSIGNED_SHORT_5_5_5_1 },\r\n    { label: \"unsigned 5/6/5 short\", normalizable: 0, value: Constants.TEXTURETYPE_UNSIGNED_SHORT_5_6_5 },\r\n    { label: \"unsigned 2/10/10/10 int\", normalizable: 0, value: Constants.TEXTURETYPE_UNSIGNED_INT_2_10_10_10_REV },\r\n    { label: \"unsigned 24/8 int\", normalizable: 0, value: Constants.TEXTURETYPE_UNSIGNED_INT_24_8 },\r\n    { label: \"unsigned 10f/11f/11f int\", normalizable: 0, value: Constants.TEXTURETYPE_UNSIGNED_INT_10F_11F_11F_REV },\r\n    { label: \"unsigned 5/9/9/9 int\", normalizable: 0, value: Constants.TEXTURETYPE_UNSIGNED_INT_5_9_9_9_REV },\r\n    { label: \"32-bits with only 8-bit used (stencil)\", normalizable: 0, value: Constants.TEXTURETYPE_FLOAT_32_UNSIGNED_INT_24_8_REV },\r\n];\r\n\r\nexport class TexturePropertyGridComponent extends React.Component<ITexturePropertyGridComponentProps, ITexturePropertyGridComponentState> {\r\n    private _adtInstrumentation: Nullable<AdvancedDynamicTextureInstrumentation>;\r\n    private _popoutWindowRef: React.RefObject<PopupComponent>;\r\n    private _textureLineRef: React.RefObject<TextureLineComponent>;\r\n\r\n    private _textureInspectorSize = { width: 1024, height: 490 };\r\n\r\n    constructor(props: ITexturePropertyGridComponentProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isTextureEditorOpen: false,\r\n            textureEditing: null,\r\n        };\r\n        const texture = this.props.texture;\r\n\r\n        this._textureLineRef = React.createRef();\r\n        this._popoutWindowRef = React.createRef();\r\n\r\n        if (!texture || !(texture as any).rootContainer) {\r\n            return;\r\n        }\r\n\r\n        const adt = texture as AdvancedDynamicTexture;\r\n\r\n        this._adtInstrumentation = new AdvancedDynamicTextureInstrumentation(adt);\r\n        this._adtInstrumentation!.captureRenderTime = true;\r\n        this._adtInstrumentation!.captureLayoutTime = true;\r\n\r\n        this.onOpenTextureEditor.bind(this);\r\n        this.onCloseTextureEditor.bind(this);\r\n        this.openTextureEditor.bind(this);\r\n    }\r\n\r\n    override componentWillUnmount() {\r\n        if (this._adtInstrumentation) {\r\n            this._adtInstrumentation.dispose();\r\n            this._adtInstrumentation = null;\r\n        }\r\n    }\r\n\r\n    updateTexture(file: File) {\r\n        const texture = this.props.texture;\r\n        Tools.ReadFile(\r\n            file,\r\n            (data) => {\r\n                const blob = new Blob([data], { type: \"octet/stream\" });\r\n\r\n                const reader = new FileReader();\r\n                reader.readAsDataURL(blob);\r\n                reader.onloadend = () => {\r\n                    const base64data = reader.result as string;\r\n\r\n                    if (texture.isCube) {\r\n                        let extension: string | undefined = undefined;\r\n                        if (file.name.toLowerCase().indexOf(\".dds\") > 0) {\r\n                            extension = \".dds\";\r\n                        } else if (file.name.toLowerCase().indexOf(\".env\") > 0) {\r\n                            extension = \".env\";\r\n                        }\r\n\r\n                        (texture as CubeTexture).updateURL(base64data, extension, () => this.forceRefresh());\r\n                    } else {\r\n                        (texture as Texture).updateURL(base64data, null, () => this.forceRefresh());\r\n                    }\r\n                };\r\n            },\r\n            undefined,\r\n            true\r\n        );\r\n    }\r\n\r\n    openTextureEditor() {\r\n        if (this.state.isTextureEditorOpen) {\r\n            this.onCloseTextureEditor(() => this.openTextureEditor());\r\n            return;\r\n        }\r\n        this.setState({\r\n            isTextureEditorOpen: true,\r\n            textureEditing: this.props.texture,\r\n        });\r\n    }\r\n\r\n    onOpenTextureEditor() {}\r\n\r\n    onCloseTextureEditor(callback?: { (): void }) {\r\n        this.setState(\r\n            {\r\n                isTextureEditorOpen: false,\r\n                textureEditing: null,\r\n            },\r\n            callback\r\n        );\r\n    }\r\n\r\n    forceRefresh() {\r\n        this.forceUpdate();\r\n        (this._textureLineRef.current as TextureLineComponent).updatePreview();\r\n    }\r\n\r\n    findTextureFormat(format: number) {\r\n        for (let i = 0; i < textureFormat.length; ++i) {\r\n            if (textureFormat[i].value === format) {\r\n                return textureFormat[i];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    findTextureType(type: number) {\r\n        for (let i = 0; i < textureType.length; ++i) {\r\n            if (textureType[i].value === type) {\r\n                return textureType[i];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    override render() {\r\n        const texture = this.props.texture;\r\n        const textureAsRTT = texture as RenderTargetTexture;\r\n\r\n        const samplingMode = [\r\n            { label: \"Nearest\", value: Texture.NEAREST_NEAREST }, // 1\r\n            { label: \"Linear\", value: Texture.LINEAR_LINEAR }, // 2\r\n\r\n            { label: \"Linear & linear mip\", value: Texture.LINEAR_LINEAR_MIPLINEAR }, // 3\r\n            { label: \"Linear & nearest mip\", value: Texture.LINEAR_LINEAR_MIPNEAREST }, // 11\r\n\r\n            { label: \"Nearest & linear mip\", value: Texture.NEAREST_NEAREST_MIPLINEAR }, // 8\r\n            { label: \"Nearest & nearest mip\", value: Texture.NEAREST_NEAREST_MIPNEAREST }, // 4\r\n\r\n            { label: \"Nearest/Linear\", value: Texture.NEAREST_LINEAR }, // 7\r\n            { label: \"Nearest/Linear & linear mip\", value: Texture.NEAREST_LINEAR_MIPLINEAR }, // 6\r\n            { label: \"Nearest/Linear & nearest mip\", value: Texture.NEAREST_LINEAR_MIPNEAREST }, // 5\r\n\r\n            { label: \"Linear/Nearest\", value: Texture.LINEAR_NEAREST }, // 12\r\n            { label: \"Linear/Nearest & linear mip\", value: Texture.LINEAR_NEAREST_MIPLINEAR }, // 10\r\n            { label: \"Linear/Nearest & nearest mip\", value: Texture.LINEAR_NEAREST_MIPNEAREST }, // 9\r\n        ];\r\n\r\n        const coordinatesMode = [\r\n            { label: \"Explicit\", value: Texture.EXPLICIT_MODE },\r\n            { label: \"Cubic\", value: Texture.CUBIC_MODE },\r\n            { label: \"Inverse cubic\", value: Texture.INVCUBIC_MODE },\r\n            { label: \"Equirectangular\", value: Texture.EQUIRECTANGULAR_MODE },\r\n            { label: \"Fixed equirectangular\", value: Texture.FIXED_EQUIRECTANGULAR_MODE },\r\n            { label: \"Fixed equirectangular mirrored\", value: Texture.FIXED_EQUIRECTANGULAR_MIRRORED_MODE },\r\n            { label: \"Planar\", value: Texture.PLANAR_MODE },\r\n            { label: \"Projection\", value: Texture.PROJECTION_MODE },\r\n            { label: \"Skybox\", value: Texture.SKYBOX_MODE },\r\n            { label: \"Spherical\", value: Texture.SPHERICAL_MODE },\r\n        ];\r\n\r\n        const format = texture._texture?.format ?? -2; // -2 is an invalid value so that findTextureFormat will return null when texture is null/undefined. It can't be -1 because -1 means RGBA, so it is -2 :)\r\n        const type = texture._texture?.type ?? -2; // same than above, -1 means ubyte\r\n\r\n        const oformat = this.findTextureFormat(format === -1 ? Constants.TEXTUREFORMAT_RGBA : format);\r\n        const otype = this.findTextureType(type === -1 ? Constants.TEXTURETYPE_UNSIGNED_BYTE : type);\r\n        const textureClass = texture instanceof MultiRenderTarget ? \"MultiRenderTarget\" : texture instanceof RenderTargetTexture ? \"RenderTargetTexture\" : texture.getClassName();\r\n        const count = texture instanceof MultiRenderTarget ? texture.count : -1;\r\n        const oformatDepthStencil =\r\n            texture.isRenderTarget && textureAsRTT.renderTarget?._depthStencilTexture ? this.findTextureFormat(textureAsRTT.renderTarget._depthStencilTexture.format) : null;\r\n\r\n        let extension = \"\";\r\n        const url = (texture as Texture).url;\r\n        const textureUrl = !url || url.substring(0, 4) === \"data\" || url.substring(0, 4) === \"blob\" ? \"\" : url;\r\n\r\n        if (textureUrl) {\r\n            for (let index = textureUrl.length - 1; index >= 0; index--) {\r\n                if (textureUrl[index] === \".\") {\r\n                    break;\r\n                }\r\n                extension = textureUrl[index] + extension;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <LineContainerComponent title=\"PREVIEW\" selection={this.props.globalState}>\r\n                    <TextureLineComponent ref={this._textureLineRef} texture={texture} width={256} height={256} globalState={this.props.globalState} />\r\n                    <FileButtonLine label=\"Load texture from file\" onClick={(file) => this.updateTexture(file)} accept=\".jpg, .png, .tga, .dds, .env, .exr\" />\r\n                    <ButtonLineComponent\r\n                        label=\"Edit\"\r\n                        onClick={() => {\r\n                            if (this.props.texture instanceof AdvancedDynamicTexture) {\r\n                                EditAdvancedDynamicTexture(this.props.texture as AdvancedDynamicTexture);\r\n                            } else {\r\n                                this.openTextureEditor();\r\n                            }\r\n                        }}\r\n                    />\r\n                    <TextInputLineComponent\r\n                        label=\"URL\"\r\n                        value={textureUrl}\r\n                        lockObject={this.props.lockObject}\r\n                        onChange={(url) => {\r\n                            (texture as Texture).updateURL(url);\r\n                            this.forceRefresh();\r\n                        }}\r\n                    />\r\n                </LineContainerComponent>\r\n                {this.state.isTextureEditorOpen && (\r\n                    <PopupComponent\r\n                        id=\"texture-editor\"\r\n                        title=\"Texture Inspector\"\r\n                        size={this._textureInspectorSize}\r\n                        onOpen={this.onOpenTextureEditor}\r\n                        onClose={() => this.onCloseTextureEditor}\r\n                        ref={this._popoutWindowRef}\r\n                    >\r\n                        <TextureEditorComponent texture={this.props.texture} url={textureUrl} window={this._popoutWindowRef} onUpdate={() => this.forceRefresh()} />\r\n                    </PopupComponent>\r\n                )}\r\n                <CustomPropertyGridComponent\r\n                    globalState={this.props.globalState}\r\n                    target={texture}\r\n                    lockObject={this.props.lockObject}\r\n                    onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                />\r\n                <LineContainerComponent title=\"GENERAL\" selection={this.props.globalState}>\r\n                    <TextLineComponent label=\"Width\" value={texture.getSize().width.toString()} />\r\n                    <TextLineComponent label=\"Height\" value={texture.getSize().height.toString()} />\r\n                    {texture.is2DArray && <TextLineComponent label=\"Layers\" value={texture._texture?.depth.toString() ?? \"?\"} />}\r\n                    {texture.is3D && <TextLineComponent label=\"Depth\" value={texture._texture?.depth.toString() ?? \"?\"} />}\r\n                    {texture.isRenderTarget && (\r\n                        <ButtonLineComponent\r\n                            label=\"Scale up\"\r\n                            onClick={() => {\r\n                                const scene = texture.getScene()!;\r\n                                texture.scale(2);\r\n                                setTimeout(() => {\r\n                                    this.props.globalState.onSelectionChangedObservable.notifyObservers(scene.getTextureByUniqueId(texture.uniqueId));\r\n                                });\r\n                            }}\r\n                        />\r\n                    )}\r\n                    {texture.isRenderTarget && (\r\n                        <ButtonLineComponent\r\n                            label=\"Scale down\"\r\n                            onClick={() => {\r\n                                const scene = texture.getScene()!;\r\n                                texture.scale(0.5);\r\n                                setTimeout(() => {\r\n                                    this.props.globalState.onSelectionChangedObservable.notifyObservers(scene.getTextureByUniqueId(texture.uniqueId));\r\n                                });\r\n                            }}\r\n                        />\r\n                    )}\r\n                    <TextLineComponent label=\"Format\" value={oformat?.label ?? \"unknown\"} />\r\n                    {!oformat?.hideType && !oformat?.compressed && <TextLineComponent label=\"Type\" value={otype?.label ?? \"unknown\"} />}\r\n                    {!!oformat?.normalizable && !oformat?.compressed && !!otype?.normalizable && <TextLineComponent label=\"Normalized\" value={otype.normalizable ? \"Yes\" : \"No\"} />}\r\n                    <TextLineComponent label=\"Is compressed\" value={oformat?.compressed ? \"Yes\" : \"No\"} />\r\n                    <TextLineComponent label=\"Use sRGB buffers\" value={texture._texture?._useSRGBBuffer ? \"Yes\" : \"No\"} />\r\n                    <TextLineComponent label=\"Is Gamma space\" value={texture.gammaSpace ? \"Yes\" : \"No\"} />\r\n                    {extension && <TextLineComponent label=\"File format\" value={extension} />}\r\n                    <TextLineComponent label=\"Unique ID\" value={texture.uniqueId.toString()} />\r\n                    <TextLineComponent label=\"Internal Unique ID\" value={(texture._texture?.uniqueId ?? \"N/A\").toString()} />\r\n                    <TextLineComponent label=\"Class\" value={textureClass} />\r\n                    {count >= 0 && <TextLineComponent label=\"Number of textures\" value={count.toString()} />}\r\n                    <TextLineComponent label=\"Has alpha\" value={texture.hasAlpha ? \"Yes\" : \"No\"} />\r\n                    <CheckBoxLineComponent\r\n                        label=\"Get alpha from RGB\"\r\n                        target={texture}\r\n                        propertyName=\"getAlphaFromRGB\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <TextLineComponent label=\"Is 3D\" value={texture.is3D ? \"Yes\" : \"No\"} />\r\n                    <TextLineComponent label=\"Is 2D array\" value={texture.is2DArray ? \"Yes\" : \"No\"} />\r\n                    <TextLineComponent label=\"Is cube\" value={texture.isCube ? \"Yes\" : \"No\"} />\r\n                    <TextLineComponent label=\"Is render target\" value={texture.isRenderTarget ? \"Yes\" : \"No\"} />\r\n                    {texture.isRenderTarget && <TextLineComponent label=\"Depth/stencil texture format\" value={oformatDepthStencil?.label ?? \"no\"} />}\r\n                    {texture instanceof Texture && <TextLineComponent label=\"Stored as inverted on Y\" value={texture.invertY ? \"Yes\" : \"No\"} />}\r\n                    <TextLineComponent label=\"Has mipmaps\" value={!texture.noMipmap ? \"Yes\" : \"No\"} />\r\n                    <SliderLineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"UV set\"\r\n                        target={texture}\r\n                        propertyName=\"coordinatesIndex\"\r\n                        minimum={0}\r\n                        maximum={3}\r\n                        step={1}\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        decimalCount={0}\r\n                    />\r\n                    <OptionsLine\r\n                        label=\"Mode\"\r\n                        options={coordinatesMode}\r\n                        target={texture}\r\n                        propertyName=\"coordinatesMode\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        onSelect={(value) => (texture.coordinatesMode = value as number)}\r\n                    />\r\n                    <SliderLineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Level\"\r\n                        target={texture}\r\n                        propertyName=\"level\"\r\n                        minimum={0}\r\n                        maximum={2}\r\n                        step={0.01}\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    {texture.updateSamplingMode && (\r\n                        <OptionsLine\r\n                            label=\"Sampling\"\r\n                            options={samplingMode}\r\n                            target={texture}\r\n                            noDirectUpdate={true}\r\n                            propertyName=\"samplingMode\"\r\n                            onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            onSelect={(value) => texture.updateSamplingMode(value as number)}\r\n                        />\r\n                    )}\r\n                </LineContainerComponent>\r\n                {texture.getScene() && (\r\n                    <AnimationGridComponent globalState={this.props.globalState} animatable={texture} scene={texture.getScene()!} lockObject={this.props.lockObject} />\r\n                )}\r\n                {(texture as any).rootContainer && this._adtInstrumentation && (\r\n                    <LineContainerComponent title=\"ADVANCED TEXTURE PROPERTIES\" selection={this.props.globalState}>\r\n                        <ValueLineComponent label=\"Last layout time\" value={this._adtInstrumentation!.renderTimeCounter.current} units=\"ms\" />\r\n                        <ValueLineComponent label=\"Last render time\" value={this._adtInstrumentation!.layoutTimeCounter.current} units=\"ms\" />\r\n                        <SliderLineComponent\r\n                            lockObject={this.props.lockObject}\r\n                            label=\"Render scale\"\r\n                            minimum={0.1}\r\n                            maximum={5}\r\n                            step={0.1}\r\n                            target={texture}\r\n                            propertyName=\"renderScale\"\r\n                            onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        />\r\n                        <CheckBoxLineComponent\r\n                            label=\"Premultiply alpha\"\r\n                            target={texture}\r\n                            propertyName=\"premulAlpha\"\r\n                            onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        />\r\n                        <FloatLineComponent\r\n                            lockObject={this.props.lockObject}\r\n                            label=\"Ideal width\"\r\n                            target={texture}\r\n                            propertyName=\"idealWidth\"\r\n                            onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        />\r\n                        <FloatLineComponent\r\n                            lockObject={this.props.lockObject}\r\n                            label=\"Ideal height\"\r\n                            target={texture}\r\n                            propertyName=\"idealHeight\"\r\n                            onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        />\r\n                        <CheckBoxLineComponent\r\n                            label=\"Use smallest ideal\"\r\n                            target={texture}\r\n                            propertyName=\"useSmallestIdeal\"\r\n                            onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        />\r\n                        <CheckBoxLineComponent\r\n                            label=\"Render at ideal size\"\r\n                            target={texture}\r\n                            propertyName=\"renderAtIdealSize\"\r\n                            onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        />\r\n                        <CheckBoxLineComponent\r\n                            label=\"Invalidate Rect optimization\"\r\n                            target={texture}\r\n                            propertyName=\"useInvalidateRectOptimization\"\r\n                            onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        />\r\n                    </LineContainerComponent>\r\n                )}\r\n                <LineContainerComponent title=\"TRANSFORM\" selection={this.props.globalState}>\r\n                    {!texture.isCube && (\r\n                        <div>\r\n                            <FloatLineComponent\r\n                                lockObject={this.props.lockObject}\r\n                                label=\"U offset\"\r\n                                target={texture}\r\n                                propertyName=\"uOffset\"\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            />\r\n                            <FloatLineComponent\r\n                                lockObject={this.props.lockObject}\r\n                                label=\"V offset\"\r\n                                target={texture}\r\n                                propertyName=\"vOffset\"\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            />\r\n                            <FloatLineComponent\r\n                                lockObject={this.props.lockObject}\r\n                                label=\"U scale\"\r\n                                target={texture}\r\n                                propertyName=\"uScale\"\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            />\r\n                            <FloatLineComponent\r\n                                lockObject={this.props.lockObject}\r\n                                label=\"V scale\"\r\n                                target={texture}\r\n                                propertyName=\"vScale\"\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            />\r\n                            <FloatLineComponent\r\n                                lockObject={this.props.lockObject}\r\n                                label=\"U angle\"\r\n                                useEuler={this.props.globalState.onlyUseEulers}\r\n                                target={texture}\r\n                                propertyName=\"uAng\"\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            />\r\n                            <FloatLineComponent\r\n                                lockObject={this.props.lockObject}\r\n                                label=\"V angle\"\r\n                                useEuler={this.props.globalState.onlyUseEulers}\r\n                                target={texture}\r\n                                propertyName=\"vAng\"\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            />\r\n                            <FloatLineComponent\r\n                                lockObject={this.props.lockObject}\r\n                                label=\"W angle\"\r\n                                useEuler={this.props.globalState.onlyUseEulers}\r\n                                target={texture}\r\n                                propertyName=\"wAng\"\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            />\r\n                            <CheckBoxLineComponent\r\n                                label=\"Clamp U\"\r\n                                isSelected={() => texture.wrapU === Texture.CLAMP_ADDRESSMODE}\r\n                                onSelect={(value) => (texture.wrapU = value ? Texture.CLAMP_ADDRESSMODE : Texture.WRAP_ADDRESSMODE)}\r\n                            />\r\n                            <CheckBoxLineComponent\r\n                                label=\"Clamp V\"\r\n                                isSelected={() => texture.wrapV === Texture.CLAMP_ADDRESSMODE}\r\n                                onSelect={(value) => (texture.wrapV = value ? Texture.CLAMP_ADDRESSMODE : Texture.WRAP_ADDRESSMODE)}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {texture.isCube && (\r\n                        <div>\r\n                            <SliderLineComponent\r\n                                lockObject={this.props.lockObject}\r\n                                label=\"Rotation Y\"\r\n                                useEuler={this.props.globalState.onlyUseEulers}\r\n                                minimum={0}\r\n                                maximum={2 * Math.PI}\r\n                                step={0.1}\r\n                                target={texture}\r\n                                propertyName=\"rotationY\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </LineContainerComponent>\r\n            </>\r\n        );\r\n    }\r\n}\r\n"]}