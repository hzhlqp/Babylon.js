{"version":3,"file":"addAnimationComponent.js","sourceRoot":"","sources":["../../../../../../../../src/components/actionTabs/tabs/propertyGrids/animations/curveEditor/sideBar/addAnimationComponent.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport type { GlobalState } from \"../../../../../../globalState\";\r\nimport type { Context } from \"../context\";\r\nimport { Animation } from \"core/Animations/animation\";\r\nimport { Quaternion, Vector2, Vector3 } from \"core/Maths/math.vector\";\r\nimport type { IAnimationKey } from \"core/Animations/animationKey\";\r\nimport { Color3, Color4 } from \"core/Maths/math.color\";\r\nimport type { TargetedAnimation } from \"core/Animations/animationGroup\";\r\n\r\ninterface IAddAnimationComponentProps {\r\n    globalState: GlobalState;\r\n    context: Context;\r\n}\r\n\r\ninterface IAddAnimationComponentState {\r\n    customPropertyMode: boolean;\r\n}\r\n\r\nexport class AddAnimationComponent extends React.Component<IAddAnimationComponentProps, IAddAnimationComponentState> {\r\n    private _root: React.RefObject<HTMLDivElement>;\r\n    private _displayName: React.RefObject<HTMLInputElement>;\r\n    private _property: React.RefObject<HTMLInputElement>;\r\n    private _typeElement: React.RefObject<HTMLSelectElement>;\r\n    private _propertylement: React.RefObject<HTMLSelectElement>;\r\n    private _loopModeElement: React.RefObject<HTMLSelectElement>;\r\n\r\n    constructor(props: IAddAnimationComponentProps) {\r\n        super(props);\r\n\r\n        this.state = { customPropertyMode: false };\r\n\r\n        this._root = React.createRef();\r\n        this._displayName = React.createRef();\r\n        this._property = React.createRef();\r\n        this._typeElement = React.createRef();\r\n        this._loopModeElement = React.createRef();\r\n        this._propertylement = React.createRef();\r\n    }\r\n\r\n    public createNew() {\r\n        const context = this.props.context;\r\n        const document = this._displayName.current!.ownerDocument;\r\n        const displayName = this._displayName.current!.value;\r\n        const property = this._property.current ? this._property.current.value : this._propertylement.current!.value;\r\n        const type = this._typeElement.current ? this._typeElement.current.value : this.getInferredType();\r\n        const loopModeValue = this._loopModeElement.current!.value;\r\n\r\n        if (!displayName) {\r\n            document.defaultView!.alert(\"Please define a display name\");\r\n            return;\r\n        }\r\n\r\n        if (!property) {\r\n            document.defaultView!.alert(\"Please define a property\");\r\n            return;\r\n        }\r\n\r\n        const fps =\r\n            this.props.context.animations && this.props.context.animations.length\r\n                ? this.props.context.useTargetAnimations\r\n                    ? (this.props.context.animations[0] as TargetedAnimation).animation.framePerSecond\r\n                    : (this.props.context.animations[0] as Animation).framePerSecond\r\n                : 60;\r\n        let minFrame = this.props.context.referenceMinFrame;\r\n        let maxFrame = this.props.context.referenceMaxFrame;\r\n        if (this.props.context.animations) {\r\n            for (const anim of this.props.context.animations) {\r\n                const innerAnim = this.props.context.useTargetAnimations ? (anim as TargetedAnimation).animation : (anim as Animation);\r\n                minFrame = Math.min(minFrame, innerAnim.getKeys()[0].frame);\r\n                maxFrame = Math.max(maxFrame, innerAnim.getKeys()[innerAnim.getKeys().length - 1].frame);\r\n            }\r\n        }\r\n\r\n        let dataType = 0;\r\n        let loopMode = 0;\r\n        let defaultValue0: any;\r\n        let defaultValue1: any;\r\n        let defaultInTangent0: any;\r\n        let defaultOutTangent0: any;\r\n        let defaultInTangent1: any;\r\n        let defaultOutTangent1: any;\r\n\r\n        switch (type) {\r\n            case \"Float\": {\r\n                dataType = Animation.ANIMATIONTYPE_FLOAT;\r\n                defaultValue0 = 0;\r\n                defaultValue1 = 1;\r\n                defaultInTangent0 = 0;\r\n                defaultOutTangent0 = 0;\r\n                defaultInTangent1 = 0;\r\n                defaultOutTangent1 = 0;\r\n                break;\r\n            }\r\n            case \"Vector2\": {\r\n                dataType = Animation.ANIMATIONTYPE_VECTOR2;\r\n                defaultValue0 = Vector2.Zero();\r\n                defaultValue1 = new Vector2(1, 1);\r\n                defaultInTangent0 = new Vector2(0, 0);\r\n                defaultOutTangent0 = new Vector2(0, 0);\r\n                defaultInTangent1 = new Vector2(0, 0);\r\n                defaultOutTangent1 = new Vector2(0, 0);\r\n                break;\r\n            }\r\n            case \"Vector3\": {\r\n                dataType = Animation.ANIMATIONTYPE_VECTOR3;\r\n                defaultValue0 = Vector3.Zero();\r\n                defaultValue1 = new Vector3(1, 1, 1);\r\n                defaultInTangent0 = new Vector3(0, 0, 0);\r\n                defaultOutTangent0 = new Vector3(0, 0, 0);\r\n                defaultInTangent1 = new Vector3(0, 0, 0);\r\n                defaultOutTangent1 = new Vector3(0, 0, 0);\r\n                break;\r\n            }\r\n            case \"Quaternion\": {\r\n                dataType = Animation.ANIMATIONTYPE_QUATERNION;\r\n                defaultValue0 = Quaternion.Zero();\r\n                defaultValue1 = new Quaternion(1, 1, 1, 0);\r\n                defaultInTangent0 = new Quaternion(0, 0, 0, 0);\r\n                defaultOutTangent0 = new Quaternion(0, 0, 0, 0);\r\n                defaultInTangent1 = new Quaternion(0, 0, 0, 0);\r\n                defaultOutTangent1 = new Quaternion(0, 0, 0, 0);\r\n                break;\r\n            }\r\n            case \"Color3\": {\r\n                dataType = Animation.ANIMATIONTYPE_COLOR3;\r\n                defaultValue0 = Color3.Black();\r\n                defaultValue1 = Color3.White();\r\n                defaultInTangent0 = new Color3(0, 0, 0);\r\n                defaultOutTangent0 = new Color3(0, 0, 0);\r\n                defaultInTangent1 = new Color3(0, 0, 0);\r\n                defaultOutTangent1 = new Color3(0, 0, 0);\r\n                break;\r\n            }\r\n            case \"Color4\": {\r\n                dataType = Animation.ANIMATIONTYPE_COLOR4;\r\n                defaultValue0 = new Color4(0, 0, 0, 0);\r\n                defaultValue1 = new Color4(1, 1, 1, 1);\r\n                defaultInTangent0 = new Color4(0, 0, 0, 0);\r\n                defaultOutTangent0 = new Color4(0, 0, 0, 0);\r\n                defaultInTangent1 = new Color4(0, 0, 0, 0);\r\n                defaultOutTangent1 = new Color4(0, 0, 0, 0);\r\n                break;\r\n            }\r\n        }\r\n\r\n        switch (loopModeValue) {\r\n            case \"Cycle\": {\r\n                loopMode = Animation.ANIMATIONLOOPMODE_CYCLE;\r\n                break;\r\n            }\r\n            case \"Relative\": {\r\n                loopMode = Animation.ANIMATIONLOOPMODE_RELATIVE;\r\n                break;\r\n            }\r\n            case \"Relative from current\": {\r\n                loopMode = Animation.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT;\r\n                break;\r\n            }\r\n            case \"Constant\": {\r\n                loopMode = Animation.ANIMATIONLOOPMODE_CONSTANT;\r\n                break;\r\n            }\r\n        }\r\n\r\n        const animation = new Animation(displayName, property, fps, dataType, loopMode);\r\n        const keys: IAnimationKey[] = [];\r\n        keys.push({\r\n            frame: minFrame,\r\n            value: defaultValue0,\r\n            inTangent: defaultInTangent0,\r\n            outTangent: defaultOutTangent0,\r\n        });\r\n\r\n        keys.push({\r\n            frame: maxFrame,\r\n            value: defaultValue1,\r\n            inTangent: defaultInTangent1,\r\n            outTangent: defaultOutTangent1,\r\n        });\r\n\r\n        animation.setKeys(keys);\r\n\r\n        context.stop();\r\n\r\n        if (!context.animations || context.animations.length === 0) {\r\n            context.animations = [];\r\n            if (context.target) {\r\n                context.target.animations = context.animations as Animation[];\r\n            }\r\n        }\r\n\r\n        if (!context.useTargetAnimations) {\r\n            (context.animations as Animation[]).push(animation);\r\n        }\r\n        context.activeAnimations.push(animation);\r\n        context.prepare();\r\n        context.onActiveAnimationChanged.notifyObservers({});\r\n        context.onAnimationsLoaded.notifyObservers();\r\n    }\r\n\r\n    public getInferredType(activeProperty: string = \"\") {\r\n        const source = this.props.context.target as any;\r\n        if (this._propertylement.current) {\r\n            activeProperty = this._propertylement.current.value;\r\n        }\r\n        const value = source[activeProperty];\r\n\r\n        if (!isNaN(parseFloat(value))) {\r\n            return \"Float\";\r\n        }\r\n\r\n        return value.getClassName();\r\n    }\r\n\r\n    public override render() {\r\n        const types = [\"Float\", \"Vector2\", \"Vector3\", \"Quaternion\", \"Color3\", \"Color4\"];\r\n        const loopModes = [\"Cycle\", \"Relative\", \"Relative from current\", \"Constant\"];\r\n        const modes = [\"Custom\", \"List\"];\r\n        const properties: string[] = [];\r\n        let inferredType = \"\";\r\n\r\n        if (this.props.context.target) {\r\n            let target = this.props.context.target;\r\n            const source = target as any;\r\n\r\n            while (target !== null) {\r\n                const descriptors = Object.getOwnPropertyDescriptors(target);\r\n                for (const property in descriptors) {\r\n                    const descriptor = descriptors[property];\r\n                    if (property[0] === \"_\" || source[property] === null || source[property] === undefined) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (source[property].r === undefined && source[property].x === undefined && isNaN(parseFloat(source[property]))) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (properties.indexOf(property) !== -1) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (!descriptor.writable && !descriptor.set) {\r\n                        continue;\r\n                    }\r\n\r\n                    properties.push(property);\r\n                }\r\n\r\n                target = Object.getPrototypeOf(target);\r\n            }\r\n\r\n            properties.sort();\r\n            // Extract position, rotation, scaling\r\n            const main = [\"scaling\", \"rotation\", \"position\"];\r\n\r\n            for (const mainProperty of main) {\r\n                const index = properties.indexOf(mainProperty);\r\n                if (index === -1) {\r\n                    continue;\r\n                }\r\n                properties.splice(index, 1);\r\n                properties.splice(0, 0, mainProperty);\r\n            }\r\n\r\n            if (this._propertylement.current) {\r\n                inferredType = this.getInferredType();\r\n            } else {\r\n                inferredType = this.getInferredType(properties[0]);\r\n            }\r\n        }\r\n\r\n        const customPropertyMode = this.state.customPropertyMode || properties.length === 0;\r\n\r\n        return (\r\n            <div id=\"add-animation-pane\" ref={this._root}>\r\n                <div id=\"add-animation-display-name-label\">Display Name</div>\r\n                <div id=\"add-animation-mode-label\">Mode</div>\r\n                <div id=\"add-animation-property-label\">Property</div>\r\n                <div id=\"add-animation-type-label\">Type</div>\r\n                <div id=\"add-animation-loop-mode-label\">Loop Mode</div>\r\n                <input type=\"text\" id=\"add-animation-name\" ref={this._displayName} className=\"input-text\" defaultValue=\"\" />\r\n                <select\r\n                    id=\"add-animation-mode\"\r\n                    className=\"option\"\r\n                    value={this.state.customPropertyMode ? \"Custom\" : \"List\"}\r\n                    onChange={(evt) => {\r\n                        this.setState({ customPropertyMode: evt.currentTarget.value === \"Custom\" });\r\n                    }}\r\n                >\r\n                    {modes.map((mode, i) => {\r\n                        return (\r\n                            <option key={mode + i} value={mode} title={mode}>\r\n                                {mode}\r\n                            </option>\r\n                        );\r\n                    })}\r\n                </select>\r\n                {customPropertyMode && (\r\n                    <>\r\n                        <input type=\"text\" id=\"add-animation-property\" ref={this._property} className=\"input-text\" defaultValue=\"\" />\r\n                        <select id=\"add-animation-type\" className=\"option\" ref={this._typeElement}>\r\n                            {types.map((type, i) => {\r\n                                return (\r\n                                    <option key={type + i} value={type} title={type}>\r\n                                        {type}\r\n                                    </option>\r\n                                );\r\n                            })}\r\n                        </select>\r\n                    </>\r\n                )}\r\n                {!customPropertyMode && (\r\n                    <>\r\n                        <select\r\n                            id=\"add-animation-property\"\r\n                            className=\"option\"\r\n                            ref={this._propertylement}\r\n                            onClick={() => {\r\n                                this.forceUpdate();\r\n                            }}\r\n                        >\r\n                            {properties.map((property, i) => {\r\n                                return (\r\n                                    <option key={property + i} value={property} title={property}>\r\n                                        {property}\r\n                                    </option>\r\n                                );\r\n                            })}\r\n                        </select>\r\n                        <div id=\"add-animation-type\">{inferredType}</div>\r\n                    </>\r\n                )}\r\n\r\n                <select id=\"add-animation-loop-mode\" className=\"option\" ref={this._loopModeElement}>\r\n                    {loopModes.map((loopMode, i) => {\r\n                        return (\r\n                            <option key={loopMode + i} value={loopMode} title={loopMode}>\r\n                                {loopMode}\r\n                            </option>\r\n                        );\r\n                    })}\r\n                </select>\r\n                <button className=\"simple-button\" id=\"add-animation\" type=\"button\" onClick={() => this.createNew()}>\r\n                    Create\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]}