{"version":3,"file":"standardMaterialPropertyGridComponent.js","sourceRoot":"","sources":["../../../../../../src/components/actionTabs/tabs/propertyGrids/materials/standardMaterialPropertyGridComponent.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\n\r\nimport { Observable } from \"core/Misc/observable\";\r\nimport type { StandardMaterial } from \"core/Materials/standardMaterial\";\r\n\r\nimport type { PropertyChangedEvent } from \"../../../../propertyChangedEvent\";\r\nimport { LineContainerComponent } from \"shared-ui-components/lines/lineContainerComponent\";\r\nimport { Color3LineComponent } from \"shared-ui-components/lines/color3LineComponent\";\r\nimport { SliderLineComponent } from \"shared-ui-components/lines/sliderLineComponent\";\r\nimport { CommonMaterialPropertyGridComponent } from \"./commonMaterialPropertyGridComponent\";\r\nimport { TextureLinkLineComponent } from \"../../../lines/textureLinkLineComponent\";\r\nimport type { LockObject } from \"shared-ui-components/tabs/propertyGrids/lockObject\";\r\nimport type { GlobalState } from \"../../../../globalState\";\r\nimport { CheckBoxLineComponent } from \"shared-ui-components/lines/checkBoxLineComponent\";\r\n\r\nimport \"core/Materials/material.decalMap\";\r\n\r\ninterface IStandardMaterialPropertyGridComponentProps {\r\n    globalState: GlobalState;\r\n    material: StandardMaterial;\r\n    lockObject: LockObject;\r\n    onSelectionChangedObservable?: Observable<any>;\r\n    onPropertyChangedObservable?: Observable<PropertyChangedEvent>;\r\n}\r\n\r\nexport class StandardMaterialPropertyGridComponent extends React.Component<IStandardMaterialPropertyGridComponentProps> {\r\n    private _onDebugSelectionChangeObservable = new Observable<TextureLinkLineComponent>();\r\n\r\n    constructor(props: IStandardMaterialPropertyGridComponentProps) {\r\n        super(props);\r\n    }\r\n\r\n    renderTextures() {\r\n        const material = this.props.material;\r\n\r\n        const onDebugSelectionChangeObservable = this._onDebugSelectionChangeObservable;\r\n\r\n        return (\r\n            <LineContainerComponent title=\"TEXTURES\" selection={this.props.globalState}>\r\n                <TextureLinkLineComponent\r\n                    label=\"Diffuse\"\r\n                    texture={material.diffuseTexture}\r\n                    propertyName=\"diffuseTexture\"\r\n                    material={material}\r\n                    onSelectionChangedObservable={this.props.onSelectionChangedObservable}\r\n                    onDebugSelectionChangeObservable={onDebugSelectionChangeObservable}\r\n                />\r\n                <TextureLinkLineComponent\r\n                    label=\"Specular\"\r\n                    texture={material.specularTexture}\r\n                    propertyName=\"specularTexture\"\r\n                    material={material}\r\n                    onSelectionChangedObservable={this.props.onSelectionChangedObservable}\r\n                    onDebugSelectionChangeObservable={onDebugSelectionChangeObservable}\r\n                />\r\n                <TextureLinkLineComponent\r\n                    label=\"Reflection\"\r\n                    texture={material.reflectionTexture}\r\n                    propertyName=\"reflectionTexture\"\r\n                    material={material}\r\n                    onSelectionChangedObservable={this.props.onSelectionChangedObservable}\r\n                    onDebugSelectionChangeObservable={onDebugSelectionChangeObservable}\r\n                />\r\n                <TextureLinkLineComponent\r\n                    label=\"Refraction\"\r\n                    texture={material.refractionTexture}\r\n                    propertyName=\"refractionTexture\"\r\n                    material={material}\r\n                    onSelectionChangedObservable={this.props.onSelectionChangedObservable}\r\n                    onDebugSelectionChangeObservable={onDebugSelectionChangeObservable}\r\n                />\r\n                <TextureLinkLineComponent\r\n                    label=\"Emissive\"\r\n                    texture={material.emissiveTexture}\r\n                    propertyName=\"emissiveTexture\"\r\n                    material={material}\r\n                    onSelectionChangedObservable={this.props.onSelectionChangedObservable}\r\n                    onDebugSelectionChangeObservable={onDebugSelectionChangeObservable}\r\n                />\r\n                <TextureLinkLineComponent\r\n                    label=\"Bump\"\r\n                    texture={material.bumpTexture}\r\n                    propertyName=\"bumpTexture\"\r\n                    material={material}\r\n                    onSelectionChangedObservable={this.props.onSelectionChangedObservable}\r\n                    onDebugSelectionChangeObservable={onDebugSelectionChangeObservable}\r\n                />\r\n                <TextureLinkLineComponent\r\n                    label=\"Opacity\"\r\n                    texture={material.opacityTexture}\r\n                    propertyName=\"opacityTexture\"\r\n                    material={material}\r\n                    onSelectionChangedObservable={this.props.onSelectionChangedObservable}\r\n                    onDebugSelectionChangeObservable={onDebugSelectionChangeObservable}\r\n                />\r\n                <TextureLinkLineComponent\r\n                    label=\"Ambient\"\r\n                    texture={material.ambientTexture}\r\n                    propertyName=\"ambientTexture\"\r\n                    material={material}\r\n                    onSelectionChangedObservable={this.props.onSelectionChangedObservable}\r\n                    onDebugSelectionChangeObservable={onDebugSelectionChangeObservable}\r\n                />\r\n                <TextureLinkLineComponent\r\n                    label=\"Lightmap\"\r\n                    texture={material.lightmapTexture}\r\n                    propertyName=\"lightmapTexture\"\r\n                    material={material}\r\n                    onSelectionChangedObservable={this.props.onSelectionChangedObservable}\r\n                    onDebugSelectionChangeObservable={onDebugSelectionChangeObservable}\r\n                />\r\n                <TextureLinkLineComponent\r\n                    label=\"Detailmap\"\r\n                    texture={material.detailMap.texture}\r\n                    material={material}\r\n                    onTextureCreated={(texture) => (material.detailMap.texture = texture)}\r\n                    onTextureRemoved={() => (material.detailMap.texture = null)}\r\n                    onSelectionChangedObservable={this.props.onSelectionChangedObservable}\r\n                    onDebugSelectionChangeObservable={onDebugSelectionChangeObservable}\r\n                />\r\n                <CheckBoxLineComponent\r\n                    label=\"Use lightmap as shadowmap\"\r\n                    target={material}\r\n                    propertyName=\"useLightmapAsShadowmap\"\r\n                    onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                />\r\n                <CheckBoxLineComponent\r\n                    label=\"Use detailmap\"\r\n                    target={material.detailMap}\r\n                    propertyName=\"isEnabled\"\r\n                    onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                />\r\n                {material.decalMap && (\r\n                    <CheckBoxLineComponent\r\n                        label=\"Use decalmap\"\r\n                        target={material.decalMap}\r\n                        propertyName=\"isEnabled\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                )}\r\n            </LineContainerComponent>\r\n        );\r\n    }\r\n\r\n    override render() {\r\n        const material = this.props.material;\r\n\r\n        return (\r\n            <>\r\n                <CommonMaterialPropertyGridComponent\r\n                    globalState={this.props.globalState}\r\n                    lockObject={this.props.lockObject}\r\n                    material={material}\r\n                    onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                />\r\n                {this.renderTextures()}\r\n                <LineContainerComponent title=\"LIGHTING & COLORS\" selection={this.props.globalState}>\r\n                    <Color3LineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Diffuse\"\r\n                        target={material}\r\n                        propertyName=\"diffuseColor\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <Color3LineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Specular\"\r\n                        target={material}\r\n                        propertyName=\"specularColor\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <SliderLineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Specular power\"\r\n                        target={material}\r\n                        propertyName=\"specularPower\"\r\n                        minimum={0}\r\n                        maximum={128}\r\n                        step={0.1}\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <Color3LineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Emissive\"\r\n                        target={material}\r\n                        propertyName=\"emissiveColor\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <Color3LineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Ambient\"\r\n                        target={material}\r\n                        propertyName=\"ambientColor\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <CheckBoxLineComponent\r\n                        label=\"Use specular over alpha\"\r\n                        target={material}\r\n                        propertyName=\"useSpecularOverAlpha\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                </LineContainerComponent>\r\n                <LineContainerComponent title=\"LEVELS\" closed={true} selection={this.props.globalState}>\r\n                    {material.diffuseTexture && (\r\n                        <SliderLineComponent\r\n                            lockObject={this.props.lockObject}\r\n                            label=\"Diffuse level\"\r\n                            target={material.diffuseTexture}\r\n                            propertyName=\"level\"\r\n                            minimum={0}\r\n                            maximum={2}\r\n                            step={0.01}\r\n                            onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        />\r\n                    )}\r\n                    {material.specularTexture && (\r\n                        <SliderLineComponent\r\n                            lockObject={this.props.lockObject}\r\n                            label=\"Specular level\"\r\n                            target={material.specularTexture}\r\n                            propertyName=\"level\"\r\n                            minimum={0}\r\n                            maximum={2}\r\n                            step={0.01}\r\n                            onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        />\r\n                    )}\r\n                    {material.reflectionTexture && (\r\n                        <SliderLineComponent\r\n                            lockObject={this.props.lockObject}\r\n                            label=\"Reflection level\"\r\n                            target={material.reflectionTexture}\r\n                            propertyName=\"level\"\r\n                            minimum={0}\r\n                            maximum={2}\r\n                            step={0.01}\r\n                            onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        />\r\n                    )}\r\n                    {material.refractionTexture && (\r\n                        <SliderLineComponent\r\n                            lockObject={this.props.lockObject}\r\n                            label=\"Refraction level\"\r\n                            target={material.refractionTexture}\r\n                            propertyName=\"level\"\r\n                            minimum={0}\r\n                            maximum={2}\r\n                            step={0.01}\r\n                            onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        />\r\n                    )}\r\n                    {material.emissiveTexture && (\r\n                        <SliderLineComponent\r\n                            lockObject={this.props.lockObject}\r\n                            label=\"Emissive level\"\r\n                            target={material.emissiveTexture}\r\n                            propertyName=\"level\"\r\n                            minimum={0}\r\n                            maximum={2}\r\n                            step={0.01}\r\n                            onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        />\r\n                    )}\r\n                    {material.bumpTexture && (\r\n                        <SliderLineComponent\r\n                            lockObject={this.props.lockObject}\r\n                            label=\"Bump level\"\r\n                            target={material.bumpTexture}\r\n                            propertyName=\"level\"\r\n                            minimum={0}\r\n                            maximum={2}\r\n                            step={0.01}\r\n                            onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        />\r\n                    )}\r\n                    {material.opacityTexture && (\r\n                        <SliderLineComponent\r\n                            lockObject={this.props.lockObject}\r\n                            label=\"Opacity level\"\r\n                            target={material.opacityTexture}\r\n                            propertyName=\"level\"\r\n                            minimum={0}\r\n                            maximum={2}\r\n                            step={0.01}\r\n                            onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        />\r\n                    )}\r\n                    {material.ambientTexture && (\r\n                        <SliderLineComponent\r\n                            lockObject={this.props.lockObject}\r\n                            label=\"Ambient level\"\r\n                            target={material.ambientTexture}\r\n                            propertyName=\"level\"\r\n                            minimum={0}\r\n                            maximum={2}\r\n                            step={0.01}\r\n                            onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        />\r\n                    )}\r\n                    {material.lightmapTexture && (\r\n                        <SliderLineComponent\r\n                            lockObject={this.props.lockObject}\r\n                            label=\"Lightmap level\"\r\n                            target={material.lightmapTexture}\r\n                            propertyName=\"level\"\r\n                            minimum={0}\r\n                            maximum={2}\r\n                            step={0.01}\r\n                            onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        />\r\n                    )}\r\n                    {material.detailMap.isEnabled && (\r\n                        <>\r\n                            <SliderLineComponent\r\n                                lockObject={this.props.lockObject}\r\n                                label=\"Detailmap diffuse\"\r\n                                target={material.detailMap}\r\n                                propertyName=\"diffuseBlendLevel\"\r\n                                minimum={0}\r\n                                maximum={1}\r\n                                step={0.01}\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            />\r\n                            <SliderLineComponent\r\n                                lockObject={this.props.lockObject}\r\n                                label=\"Detailmap bump\"\r\n                                target={material.detailMap}\r\n                                propertyName=\"bumpLevel\"\r\n                                minimum={0}\r\n                                maximum={1}\r\n                                step={0.01}\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            />\r\n                        </>\r\n                    )}\r\n                </LineContainerComponent>\r\n                <LineContainerComponent title=\"NORMAL MAP\" closed={true} selection={this.props.globalState}>\r\n                    <CheckBoxLineComponent\r\n                        label=\"Invert X axis\"\r\n                        target={material}\r\n                        propertyName=\"invertNormalMapX\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <CheckBoxLineComponent\r\n                        label=\"Invert Y axis\"\r\n                        target={material}\r\n                        propertyName=\"invertNormalMapY\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                </LineContainerComponent>\r\n            </>\r\n        );\r\n    }\r\n}\r\n"]}