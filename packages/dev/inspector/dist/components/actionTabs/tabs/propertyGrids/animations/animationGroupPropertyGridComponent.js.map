{"version":3,"file":"animationGroupPropertyGridComponent.js","sourceRoot":"","sources":["../../../../../../src/components/actionTabs/tabs/propertyGrids/animations/animationGroupPropertyGridComponent.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\n\r\nimport type { Nullable } from \"core/types\";\r\nimport type { Observable, Observer } from \"core/Misc/observable\";\r\nimport type { AnimationGroup } from \"core/Animations/animationGroup\";\r\nimport type { Scene } from \"core/scene\";\r\n\r\nimport type { PropertyChangedEvent } from \"../../../../propertyChangedEvent\";\r\nimport { ButtonLineComponent } from \"shared-ui-components/lines/buttonLineComponent\";\r\nimport { LineContainerComponent } from \"shared-ui-components/lines/lineContainerComponent\";\r\nimport { TextLineComponent } from \"shared-ui-components/lines/textLineComponent\";\r\nimport { SliderLineComponent } from \"shared-ui-components/lines/sliderLineComponent\";\r\nimport type { LockObject } from \"shared-ui-components/tabs/propertyGrids/lockObject\";\r\nimport type { GlobalState } from \"../../../../globalState\";\r\nimport { TextInputLineComponent } from \"shared-ui-components/lines/textInputLineComponent\";\r\nimport { Context } from \"./curveEditor/context\";\r\nimport { AnimationCurveEditorComponent } from \"./curveEditor/animationCurveEditorComponent\";\r\nimport { FloatLineComponent } from \"shared-ui-components/lines/floatLineComponent\";\r\nimport { CheckBoxLineComponent } from \"shared-ui-components/lines/checkBoxLineComponent\";\r\n\r\ninterface IAnimationGroupGridComponentProps {\r\n    globalState: GlobalState;\r\n    animationGroup: AnimationGroup;\r\n    scene: Scene;\r\n    lockObject: LockObject;\r\n    onPropertyChangedObservable?: Observable<PropertyChangedEvent>;\r\n}\r\n\r\nexport class AnimationGroupGridComponent extends React.Component<IAnimationGroupGridComponentProps, { playButtonText: string; currentFrame: number }> {\r\n    private _onAnimationGroupPlayObserver: Nullable<Observer<AnimationGroup>>;\r\n    private _onAnimationGroupPauseObserver: Nullable<Observer<AnimationGroup>>;\r\n    private _onBeforeRenderObserver: Nullable<Observer<Scene>>;\r\n    private _timelineRef: React.RefObject<SliderLineComponent>;\r\n    private _animationCurveEditorContext: Context;\r\n\r\n    constructor(props: IAnimationGroupGridComponentProps) {\r\n        super(props);\r\n\r\n        const animationGroup = this.props.animationGroup;\r\n        this.state = { playButtonText: animationGroup.isPlaying ? \"Pause\" : \"Play\", currentFrame: 0 };\r\n\r\n        this._timelineRef = React.createRef();\r\n    }\r\n\r\n    override componentDidMount(): void {\r\n        this.connect(this.props.animationGroup);\r\n\r\n        this._onBeforeRenderObserver = this.props.scene.onBeforeRenderObservable.add(() => {\r\n            this.updateCurrentFrame(this.props.animationGroup);\r\n        });\r\n    }\r\n\r\n    disconnect(animationGroup: AnimationGroup) {\r\n        if (this._onAnimationGroupPlayObserver) {\r\n            animationGroup.onAnimationGroupPlayObservable.remove(this._onAnimationGroupPlayObserver);\r\n            this._onAnimationGroupPlayObserver = null;\r\n        }\r\n\r\n        if (this._onAnimationGroupPauseObserver) {\r\n            animationGroup.onAnimationGroupPauseObservable.remove(this._onAnimationGroupPauseObserver);\r\n            this._onAnimationGroupPauseObserver = null;\r\n        }\r\n    }\r\n\r\n    connect(animationGroup: AnimationGroup) {\r\n        this._onAnimationGroupPlayObserver = animationGroup.onAnimationGroupPlayObservable.add(() => {\r\n            this.forceUpdate();\r\n        });\r\n\r\n        this._onAnimationGroupPauseObserver = animationGroup.onAnimationGroupPauseObservable.add(() => {\r\n            this.forceUpdate();\r\n        });\r\n\r\n        this.updateCurrentFrame(animationGroup);\r\n    }\r\n\r\n    updateCurrentFrame(animationGroup: AnimationGroup) {\r\n        const targetedAnimations = animationGroup.targetedAnimations;\r\n        if (targetedAnimations.length > 0) {\r\n            const runtimeAnimation = targetedAnimations[0].animation.runtimeAnimations.find((rA) => rA.target === targetedAnimations[0].target);\r\n            if (runtimeAnimation) {\r\n                this.setState({ currentFrame: runtimeAnimation.currentFrame });\r\n            } else {\r\n                this.setState({ currentFrame: 0 });\r\n            }\r\n        }\r\n    }\r\n\r\n    override shouldComponentUpdate(nextProps: IAnimationGroupGridComponentProps): boolean {\r\n        if (this.props.animationGroup !== nextProps.animationGroup) {\r\n            this.disconnect(this.props.animationGroup);\r\n            this.connect(nextProps.animationGroup);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    override componentWillUnmount() {\r\n        this.disconnect(this.props.animationGroup);\r\n\r\n        if (this._onBeforeRenderObserver) {\r\n            this.props.scene.onBeforeRenderObservable.remove(this._onBeforeRenderObserver);\r\n            this._onBeforeRenderObserver = null;\r\n        }\r\n    }\r\n\r\n    playOrPause() {\r\n        const animationGroup = this.props.animationGroup;\r\n\r\n        if (animationGroup.isPlaying) {\r\n            this.setState({ playButtonText: \"Play\" });\r\n            animationGroup.pause();\r\n        } else {\r\n            this.setState({ playButtonText: \"Pause\" });\r\n            animationGroup.play(true);\r\n        }\r\n    }\r\n\r\n    onCurrentFrameChange(value: number) {\r\n        const animationGroup = this.props.animationGroup;\r\n\r\n        if (!animationGroup.isPlaying) {\r\n            animationGroup.play(true);\r\n            animationGroup.goToFrame(value);\r\n            animationGroup.pause();\r\n        } else {\r\n            animationGroup.goToFrame(value);\r\n        }\r\n\r\n        this.setState({ currentFrame: value });\r\n    }\r\n\r\n    override render() {\r\n        const animationGroup = this.props.animationGroup;\r\n\r\n        const playButtonText = animationGroup.isPlaying ? \"Pause\" : \"Play\";\r\n\r\n        if (!this._animationCurveEditorContext) {\r\n            this._animationCurveEditorContext = new Context();\r\n            this._animationCurveEditorContext.title = animationGroup.name || \"\";\r\n            this._animationCurveEditorContext.animations = animationGroup.targetedAnimations;\r\n            this._animationCurveEditorContext.scene = this.props.scene;\r\n            this._animationCurveEditorContext.useTargetAnimations = true;\r\n            this._animationCurveEditorContext.rootAnimationGroup = animationGroup;\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <LineContainerComponent title=\"GENERAL\">\r\n                    <TextLineComponent label=\"Class\" value={animationGroup.getClassName()} />\r\n                    <TextInputLineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Name\"\r\n                        target={animationGroup}\r\n                        propertyName=\"name\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                </LineContainerComponent>\r\n                <LineContainerComponent title=\"CONTROLS\">\r\n                    <ButtonLineComponent label={playButtonText} onClick={() => this.playOrPause()} />\r\n                    <ButtonLineComponent label=\"Stop\" onClick={() => this.props.animationGroup.stop()} />\r\n                    <SliderLineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Speed ratio\"\r\n                        minimum={0}\r\n                        maximum={10}\r\n                        step={0.1}\r\n                        target={animationGroup}\r\n                        propertyName=\"speedRatio\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <SliderLineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        ref={this._timelineRef}\r\n                        label=\"Current frame\"\r\n                        minimum={animationGroup.from}\r\n                        maximum={animationGroup.to}\r\n                        step={(animationGroup.to - animationGroup.from) / 1000.0}\r\n                        directValue={this.state.currentFrame}\r\n                        onInput={(value) => this.onCurrentFrameChange(value)}\r\n                    />\r\n                    <CheckBoxLineComponent\r\n                        label=\"Blending\"\r\n                        target={animationGroup}\r\n                        propertyName=\"enableBlending\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <SliderLineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Blending speed\"\r\n                        minimum={0}\r\n                        maximum={1}\r\n                        step={0.01}\r\n                        target={animationGroup}\r\n                        propertyName=\"blendingSpeed\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <CheckBoxLineComponent\r\n                        label=\"Is additive\"\r\n                        target={animationGroup}\r\n                        propertyName=\"isAdditive\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <FloatLineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Weight\"\r\n                        target={animationGroup}\r\n                        propertyName=\"weight\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <FloatLineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Play order\"\r\n                        target={animationGroup}\r\n                        propertyName=\"playOrder\"\r\n                        isInteger={true}\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                </LineContainerComponent>\r\n                <LineContainerComponent title=\"INFOS\">\r\n                    <TextLineComponent label=\"Animation count\" value={animationGroup.targetedAnimations.length.toString()} />\r\n                    <AnimationCurveEditorComponent globalState={this.props.globalState} context={this._animationCurveEditorContext} />\r\n                    <TextLineComponent label=\"From\" value={animationGroup.from.toFixed(2)} />\r\n                    <TextLineComponent label=\"To\" value={animationGroup.to.toFixed(2)} />\r\n                    <TextLineComponent label=\"Unique ID\" value={animationGroup.uniqueId.toString()} />\r\n                </LineContainerComponent>\r\n            </>\r\n        );\r\n    }\r\n}\r\n"]}