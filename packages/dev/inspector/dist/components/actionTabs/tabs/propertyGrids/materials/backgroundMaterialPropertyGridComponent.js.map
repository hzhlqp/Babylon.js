{"version":3,"file":"backgroundMaterialPropertyGridComponent.js","sourceRoot":"","sources":["../../../../../../src/components/actionTabs/tabs/propertyGrids/materials/backgroundMaterialPropertyGridComponent.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\n\r\nimport { Observable } from \"core/Misc/observable\";\r\nimport type { BackgroundMaterial } from \"core/Materials/Background/backgroundMaterial\";\r\n\r\nimport type { PropertyChangedEvent } from \"../../../../propertyChangedEvent\";\r\nimport { LineContainerComponent } from \"shared-ui-components/lines/lineContainerComponent\";\r\nimport { Color3LineComponent } from \"shared-ui-components/lines/color3LineComponent\";\r\nimport { CheckBoxLineComponent } from \"shared-ui-components/lines/checkBoxLineComponent\";\r\nimport { SliderLineComponent } from \"shared-ui-components/lines/sliderLineComponent\";\r\nimport { CommonMaterialPropertyGridComponent } from \"./commonMaterialPropertyGridComponent\";\r\nimport { TextureLinkLineComponent } from \"../../../lines/textureLinkLineComponent\";\r\nimport type { LockObject } from \"shared-ui-components/tabs/propertyGrids/lockObject\";\r\nimport type { GlobalState } from \"../../../../globalState\";\r\n\r\ninterface IBackgroundMaterialPropertyGridComponentProps {\r\n    globalState: GlobalState;\r\n    material: BackgroundMaterial;\r\n    lockObject: LockObject;\r\n    onSelectionChangedObservable?: Observable<any>;\r\n    onPropertyChangedObservable?: Observable<PropertyChangedEvent>;\r\n}\r\n\r\nexport class BackgroundMaterialPropertyGridComponent extends React.Component<IBackgroundMaterialPropertyGridComponentProps> {\r\n    private _onDebugSelectionChangeObservable = new Observable<TextureLinkLineComponent>();\r\n\r\n    constructor(props: IBackgroundMaterialPropertyGridComponentProps) {\r\n        super(props);\r\n    }\r\n\r\n    renderTextures() {\r\n        const material = this.props.material;\r\n\r\n        const onDebugSelectionChangeObservable = this._onDebugSelectionChangeObservable;\r\n\r\n        return (\r\n            <LineContainerComponent title=\"TEXTURES\" selection={this.props.globalState}>\r\n                <TextureLinkLineComponent\r\n                    label=\"Diffuse\"\r\n                    texture={material.diffuseTexture}\r\n                    material={material}\r\n                    onSelectionChangedObservable={this.props.onSelectionChangedObservable}\r\n                    onDebugSelectionChangeObservable={onDebugSelectionChangeObservable}\r\n                />\r\n                <TextureLinkLineComponent\r\n                    label=\"Reflection\"\r\n                    texture={material.reflectionTexture}\r\n                    material={material}\r\n                    onSelectionChangedObservable={this.props.onSelectionChangedObservable}\r\n                    onDebugSelectionChangeObservable={onDebugSelectionChangeObservable}\r\n                />\r\n                {material.reflectionTexture && (\r\n                    <SliderLineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Reflection blur\"\r\n                        target={material}\r\n                        propertyName=\"reflectionBlur\"\r\n                        minimum={0}\r\n                        maximum={1}\r\n                        step={0.01}\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                )}\r\n            </LineContainerComponent>\r\n        );\r\n    }\r\n\r\n    override render() {\r\n        const material = this.props.material;\r\n\r\n        return (\r\n            <>\r\n                <CommonMaterialPropertyGridComponent\r\n                    globalState={this.props.globalState}\r\n                    lockObject={this.props.lockObject}\r\n                    material={material}\r\n                    onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                />\r\n                <LineContainerComponent title=\"LIGHTING & COLORS\" selection={this.props.globalState}>\r\n                    <Color3LineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Primary\"\r\n                        target={material}\r\n                        propertyName=\"primaryColor\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <SliderLineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Shadow level\"\r\n                        target={material}\r\n                        propertyName=\"primaryColorShadowLevel\"\r\n                        minimum={0}\r\n                        maximum={1}\r\n                        step={0.01}\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <SliderLineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Highlight level\"\r\n                        target={material}\r\n                        propertyName=\"primaryColorHighlightLevel\"\r\n                        minimum={0}\r\n                        maximum={1}\r\n                        step={0.01}\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                </LineContainerComponent>\r\n                {this.renderTextures()}\r\n                <LineContainerComponent title=\"RENDERING\" closed={true} selection={this.props.globalState}>\r\n                    <CheckBoxLineComponent\r\n                        label=\"Ground Projection\"\r\n                        target={material}\r\n                        propertyName=\"enableGroundProjection\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    {material.enableGroundProjection && (\r\n                        <div className=\"fragment\">\r\n                            <SliderLineComponent\r\n                                lockObject={this.props.lockObject}\r\n                                label=\"Ground radius\"\r\n                                target={material}\r\n                                propertyName=\"projectedGroundRadius\"\r\n                                minimum={0}\r\n                                maximum={10000}\r\n                                step={10}\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            />\r\n                            <SliderLineComponent\r\n                                lockObject={this.props.lockObject}\r\n                                label=\"Ground height\"\r\n                                target={material}\r\n                                propertyName=\"projectedGroundHeight\"\r\n                                minimum={1}\r\n                                maximum={1000}\r\n                                step={10}\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    <CheckBoxLineComponent label=\"Enable noise\" target={material} propertyName=\"enableNoise\" onPropertyChangedObservable={this.props.onPropertyChangedObservable} />\r\n                    <CheckBoxLineComponent\r\n                        label=\"Opacity fresnel\"\r\n                        target={material}\r\n                        propertyName=\"opacityFresnel\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <CheckBoxLineComponent\r\n                        label=\"Reflection fresnel\"\r\n                        target={material}\r\n                        propertyName=\"reflectionFresnel\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <SliderLineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Reflection amount\"\r\n                        target={material}\r\n                        propertyName=\"reflectionAmount\"\r\n                        minimum={0}\r\n                        maximum={1}\r\n                        step={0.01}\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                </LineContainerComponent>\r\n            </>\r\n        );\r\n    }\r\n}\r\n"]}