{"version":3,"file":"mediaPlayerComponent.js","sourceRoot":"","sources":["../../../../../../../../src/components/actionTabs/tabs/propertyGrids/animations/curveEditor/bottomBar/mediaPlayerComponent.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport type { GlobalState } from \"../../../../../../globalState\";\r\nimport type { Context } from \"../context\";\r\nimport { ControlButtonComponent } from \"../controls/controlButtonComponent\";\r\n\r\nimport firstKeyIcon from \"../assets/animationLastKeyIcon.svg\";\r\nimport firstKeyHoverIcon from \"../assets/animationLastKeyHoverIcon.svg\";\r\n\r\nimport revKeyIcon from \"../assets/animationPlayRevIcon.svg\";\r\nimport revKeyHoverIcon from \"../assets/animationPlayRevHoverIcon.svg\";\r\n\r\nimport fwdKeyIcon from \"../assets/animationPlayFwdIcon.svg\";\r\nimport fwdKeyHoverIcon from \"../assets/animationPlayFwdHoverIcon.svg\";\r\n\r\nimport nextKeyIcon from \"../assets/animationNextKeyIcon.svg\";\r\nimport nextKeyHoverIcon from \"../assets/animationNextKeyHoverIcon.svg\";\r\n\r\nimport startKeyIcon from \"../assets/animationStartIcon.svg\";\r\nimport startKeyHoverIcon from \"../assets/animationStartHoverIcon.svg\";\r\n\r\nimport endKeyIcon from \"../assets/animationEndIcon.svg\";\r\nimport endKeyHoverIcon from \"../assets/animationEndHoverIcon.svg\";\r\n\r\nimport stopIcon from \"../assets/animationStopIcon.svg\";\r\nimport stopHoverIcon from \"../assets/animationStopHoverIcon.svg\";\r\n\r\nimport nextFrameIcon from \"../assets/animationNextFrameIcon.svg\";\r\nimport nextFrameHoverIcon from \"../assets/animationNextFrameHoverIcon.svg\";\r\n\r\nimport lastFrameIcon from \"../assets/animationLastFrameIcon.svg\";\r\nimport lastFrameHoverIcon from \"../assets/animationLastFrameHoverIcon.svg\";\r\n\r\ninterface IMediaPlayerComponentProps {\r\n    globalState: GlobalState;\r\n    context: Context;\r\n}\r\n\r\ninterface IMediaPlayerComponentState {}\r\n\r\nexport class MediaPlayerComponent extends React.Component<IMediaPlayerComponentProps, IMediaPlayerComponentState> {\r\n    private _isMounted = false;\r\n\r\n    constructor(props: IMediaPlayerComponentProps) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n\r\n        this.props.context.onAnimationStateChanged.add(() => {\r\n            if (!this._isMounted) {\r\n                return;\r\n            }\r\n            this.forceUpdate();\r\n        });\r\n    }\r\n\r\n    override componentDidMount() {\r\n        this._isMounted = true;\r\n    }\r\n\r\n    override componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    private _onFirstKey() {\r\n        this.props.context.onMoveToFrameRequired.notifyObservers(this.props.context.fromKey);\r\n    }\r\n\r\n    private _onPrevKey() {\r\n        const prevKey = this.props.context.getPrevKey();\r\n\r\n        if (prevKey !== null) {\r\n            this.props.context.onMoveToFrameRequired.notifyObservers(prevKey);\r\n        }\r\n    }\r\n\r\n    private _onRewind() {\r\n        this.props.context.play(false);\r\n        this.forceUpdate();\r\n    }\r\n\r\n    private _onForward() {\r\n        this.props.context.play(true);\r\n        this.forceUpdate();\r\n    }\r\n\r\n    private _onPrevFrame() {\r\n        this.props.context.onMoveToFrameRequired.notifyObservers(Math.max(0, this.props.context.activeFrame - 1));\r\n    }\r\n\r\n    private _onNextFrame() {\r\n        this.props.context.onMoveToFrameRequired.notifyObservers(this.props.context.activeFrame + 1);\r\n    }\r\n\r\n    private _onNextKey() {\r\n        const nextKey = this.props.context.getNextKey();\r\n\r\n        if (nextKey !== null) {\r\n            this.props.context.onMoveToFrameRequired.notifyObservers(nextKey);\r\n        }\r\n    }\r\n\r\n    private _onEndKey() {\r\n        this.props.context.onMoveToFrameRequired.notifyObservers(this.props.context.toKey);\r\n    }\r\n\r\n    private _onStop() {\r\n        this.props.context.stop();\r\n        this.forceUpdate();\r\n    }\r\n\r\n    public override render() {\r\n        return (\r\n            <div id=\"media-player\">\r\n                <ControlButtonComponent\r\n                    tooltip=\"Rewind to the first frame of the selected timeline\"\r\n                    id=\"start-key\"\r\n                    context={this.props.context}\r\n                    globalState={this.props.globalState}\r\n                    icon={startKeyIcon}\r\n                    hoverIcon={startKeyHoverIcon}\r\n                    onClick={() => this._onFirstKey()}\r\n                />\r\n                <ControlButtonComponent\r\n                    tooltip=\"Rewind to the previous frame\"\r\n                    id=\"prev-frame\"\r\n                    context={this.props.context}\r\n                    globalState={this.props.globalState}\r\n                    icon={lastFrameIcon}\r\n                    hoverIcon={lastFrameHoverIcon}\r\n                    onClick={() => this._onPrevFrame()}\r\n                />\r\n                <ControlButtonComponent\r\n                    tooltip=\"Rewind to the previous key frame\"\r\n                    id=\"first-key\"\r\n                    context={this.props.context}\r\n                    globalState={this.props.globalState}\r\n                    icon={firstKeyIcon}\r\n                    hoverIcon={firstKeyHoverIcon}\r\n                    onClick={() => this._onPrevKey()}\r\n                />\r\n                {((this.props.context.isPlaying && this.props.context.forwardAnimation) || !this.props.context.isPlaying) && (\r\n                    <ControlButtonComponent\r\n                        tooltip=\"Play backwards\"\r\n                        id=\"rev-key\"\r\n                        context={this.props.context}\r\n                        globalState={this.props.globalState}\r\n                        icon={revKeyIcon}\r\n                        hoverIcon={revKeyHoverIcon}\r\n                        onClick={() => this._onRewind()}\r\n                    />\r\n                )}\r\n                {this.props.context.isPlaying && !this.props.context.forwardAnimation && (\r\n                    <ControlButtonComponent\r\n                        tooltip=\"Stop\"\r\n                        id=\"stop-key\"\r\n                        context={this.props.context}\r\n                        globalState={this.props.globalState}\r\n                        icon={stopIcon}\r\n                        hoverIcon={stopHoverIcon}\r\n                        onClick={() => this._onStop()}\r\n                    />\r\n                )}\r\n                {((this.props.context.isPlaying && !this.props.context.forwardAnimation) || !this.props.context.isPlaying) && (\r\n                    <ControlButtonComponent\r\n                        tooltip=\"Play forwards\"\r\n                        id=\"fwd-key\"\r\n                        context={this.props.context}\r\n                        globalState={this.props.globalState}\r\n                        icon={fwdKeyIcon}\r\n                        hoverIcon={fwdKeyHoverIcon}\r\n                        onClick={() => this._onForward()}\r\n                    />\r\n                )}\r\n                {this.props.context.isPlaying && this.props.context.forwardAnimation && (\r\n                    <ControlButtonComponent\r\n                        tooltip=\"Stop\"\r\n                        id=\"stop-key\"\r\n                        context={this.props.context}\r\n                        globalState={this.props.globalState}\r\n                        icon={stopIcon}\r\n                        hoverIcon={stopHoverIcon}\r\n                        onClick={() => this._onStop()}\r\n                    />\r\n                )}\r\n                <ControlButtonComponent\r\n                    tooltip=\"Advance to the next key frame\"\r\n                    id=\"next-key\"\r\n                    context={this.props.context}\r\n                    globalState={this.props.globalState}\r\n                    icon={nextKeyIcon}\r\n                    hoverIcon={nextKeyHoverIcon}\r\n                    onClick={() => this._onNextKey()}\r\n                />\r\n                <ControlButtonComponent\r\n                    tooltip=\"Advance to the next frame\"\r\n                    id=\"next-frame\"\r\n                    context={this.props.context}\r\n                    globalState={this.props.globalState}\r\n                    icon={nextFrameIcon}\r\n                    hoverIcon={nextFrameHoverIcon}\r\n                    onClick={() => this._onNextFrame()}\r\n                />\r\n                <ControlButtonComponent\r\n                    tooltip=\"Advance to the last frame of the selected timeline\"\r\n                    id=\"end-key\"\r\n                    context={this.props.context}\r\n                    globalState={this.props.globalState}\r\n                    icon={endKeyIcon}\r\n                    hoverIcon={endKeyHoverIcon}\r\n                    onClick={() => this._onEndKey()}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]}