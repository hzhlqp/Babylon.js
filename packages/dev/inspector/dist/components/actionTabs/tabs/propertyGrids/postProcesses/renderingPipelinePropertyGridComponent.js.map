{"version":3,"file":"renderingPipelinePropertyGridComponent.js","sourceRoot":"","sources":["../../../../../../src/components/actionTabs/tabs/propertyGrids/postProcesses/renderingPipelinePropertyGridComponent.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAO/B,OAAO,EAAE,4CAA4C,EAAE,MAAM,gDAAgD,CAAC;AAU9G,MAAM,OAAO,sCAAuC,SAAQ,KAAK,CAAC,SAAuD;IACrH,YAAY,KAAmD;QAC3D,KAAK,CAAC,KAAK,CAAC,CAAC;IACjB,CAAC;IAEQ,MAAM;QACX,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC;QAEjD,OAAO,CACH,KAAC,4CAA4C,IACzC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,EACnC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,EACjC,cAAc,EAAE,cAAc,EAC9B,2BAA2B,EAAE,IAAI,CAAC,KAAK,CAAC,2BAA2B,GACrE,CACL,CAAC;IACN,CAAC;CACJ","sourcesContent":["import * as React from \"react\";\r\n\r\nimport type { Observable } from \"core/Misc/observable\";\r\nimport type { PostProcessRenderPipeline } from \"core/PostProcesses/RenderPipeline/postProcessRenderPipeline\";\r\n\r\nimport type { PropertyChangedEvent } from \"../../../../propertyChangedEvent\";\r\nimport type { LockObject } from \"shared-ui-components/tabs/propertyGrids/lockObject\";\r\nimport { CommonRenderingPipelinePropertyGridComponent } from \"./commonRenderingPipelinePropertyGridComponent\";\r\nimport type { GlobalState } from \"../../../../globalState\";\r\n\r\ninterface IRenderingPipelinePropertyGridComponentProps {\r\n    globalState: GlobalState;\r\n    renderPipeline: PostProcessRenderPipeline;\r\n    lockObject: LockObject;\r\n    onPropertyChangedObservable?: Observable<PropertyChangedEvent>;\r\n}\r\n\r\nexport class RenderingPipelinePropertyGridComponent extends React.Component<IRenderingPipelinePropertyGridComponentProps> {\r\n    constructor(props: IRenderingPipelinePropertyGridComponentProps) {\r\n        super(props);\r\n    }\r\n\r\n    override render() {\r\n        const renderPipeline = this.props.renderPipeline;\r\n\r\n        return (\r\n            <CommonRenderingPipelinePropertyGridComponent\r\n                globalState={this.props.globalState}\r\n                lockObject={this.props.lockObject}\r\n                renderPipeline={renderPipeline}\r\n                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n            />\r\n        );\r\n    }\r\n}\r\n"]}