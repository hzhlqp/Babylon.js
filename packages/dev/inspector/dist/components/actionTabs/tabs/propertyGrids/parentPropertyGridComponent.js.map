{"version":3,"file":"parentPropertyGridComponent.js","sourceRoot":"","sources":["../../../../../src/components/actionTabs/tabs/propertyGrids/parentPropertyGridComponent.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\n\r\nimport type { Observable } from \"core/Misc/observable\";\r\n\r\nimport type { PropertyChangedEvent } from \"../../../propertyChangedEvent\";\r\nimport type { LockObject } from \"shared-ui-components/tabs/propertyGrids/lockObject\";\r\nimport type { GlobalState } from \"../../../globalState\";\r\nimport type { Node } from \"core/node\";\r\nimport { TextLineComponent } from \"shared-ui-components/lines/textLineComponent\";\r\nimport { OptionsLine } from \"shared-ui-components/lines/optionsLineComponent\";\r\nimport type { TransformNode } from \"core/Meshes/transformNode\";\r\n\r\ninterface IParentPropertyGridComponentProps {\r\n    globalState: GlobalState;\r\n    lockObject: LockObject;\r\n    node: Node;\r\n    onPropertyChangedObservable?: Observable<PropertyChangedEvent>;\r\n}\r\n\r\nexport class ParentPropertyGridComponent extends React.Component<IParentPropertyGridComponentProps> {\r\n    constructor(props: IParentPropertyGridComponentProps) {\r\n        super(props);\r\n    }\r\n\r\n    private _getNameForSortingAndDisplay(node: any) {\r\n        return typeof node.name === \"string\" ? node.name : \"no name\";\r\n    }\r\n\r\n    override render() {\r\n        const node = this.props.node;\r\n        const scene = node.getScene();\r\n\r\n        const sortedNodes = scene\r\n            .getNodes()\r\n            .filter((n) => n !== node)\r\n            .sort((a, b) => {\r\n                return this._getNameForSortingAndDisplay(a).localeCompare(this._getNameForSortingAndDisplay(b));\r\n            });\r\n\r\n        const nodeOptions = sortedNodes.map((m, i) => {\r\n            return {\r\n                label: this._getNameForSortingAndDisplay(m),\r\n                value: i,\r\n            };\r\n        });\r\n\r\n        nodeOptions.splice(0, 0, { label: \"None\", value: -1 });\r\n\r\n        return (\r\n            <>\r\n                {node.parent && (\r\n                    <TextLineComponent\r\n                        label=\"Link to parent\"\r\n                        value={node.parent.name}\r\n                        onLink={() => this.props.globalState.onSelectionChangedObservable.notifyObservers(node.parent)}\r\n                    />\r\n                )}\r\n                <OptionsLine\r\n                    label=\"Parent\"\r\n                    options={nodeOptions}\r\n                    target={node}\r\n                    propertyName=\"parent\"\r\n                    noDirectUpdate={true}\r\n                    onSelect={(value) => {\r\n                        const nodeAsTransform = node as TransformNode;\r\n                        if (typeof value !== \"number\" || value < 0) {\r\n                            if (nodeAsTransform.setParent) {\r\n                                nodeAsTransform.setParent(null);\r\n                            } else {\r\n                                node.parent = null;\r\n                            }\r\n                        } else {\r\n                            const newParent = sortedNodes[value as number];\r\n                            if (nodeAsTransform.setParent) {\r\n                                nodeAsTransform.setParent(newParent);\r\n                            } else {\r\n                                node.parent = newParent;\r\n                            }\r\n                        }\r\n\r\n                        this.props.globalState.onSelectionRenamedObservable.notifyObservers();\r\n                    }}\r\n                    extractValue={() => (node.parent ? sortedNodes.indexOf(node.parent) : -1)}\r\n                    onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n"]}