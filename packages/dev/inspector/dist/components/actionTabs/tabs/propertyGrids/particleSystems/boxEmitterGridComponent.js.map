{"version":3,"file":"boxEmitterGridComponent.js","sourceRoot":"","sources":["../../../../../../src/components/actionTabs/tabs/propertyGrids/particleSystems/boxEmitterGridComponent.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAM/B,OAAO,EAAE,oBAAoB,EAAE,MAAM,iDAAiD,CAAC;AAUvF,MAAM,OAAO,uBAAwB,SAAQ,KAAK,CAAC,SAAwC;IACvF,YAAY,KAAoC;QAC5C,KAAK,CAAC,KAAK,CAAC,CAAC;IACjB,CAAC;IAEQ,MAAM;QACX,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;QACnC,OAAO,CACH,8BACI,KAAC,oBAAoB,IACjB,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,EACjC,KAAK,EAAC,aAAa,EACnB,MAAM,EAAE,OAAO,EACf,YAAY,EAAC,YAAY,EACzB,2BAA2B,EAAE,IAAI,CAAC,KAAK,CAAC,2BAA2B,GACrE,EACF,KAAC,oBAAoB,IACjB,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,EACjC,KAAK,EAAC,aAAa,EACnB,MAAM,EAAE,OAAO,EACf,YAAY,EAAC,YAAY,EACzB,2BAA2B,EAAE,IAAI,CAAC,KAAK,CAAC,2BAA2B,GACrE,EACF,KAAC,oBAAoB,IACjB,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,EACjC,KAAK,EAAC,cAAc,EACpB,MAAM,EAAE,OAAO,EACf,YAAY,EAAC,YAAY,EACzB,2BAA2B,EAAE,IAAI,CAAC,KAAK,CAAC,2BAA2B,GACrE,EACF,KAAC,oBAAoB,IACjB,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,EACjC,KAAK,EAAC,cAAc,EACpB,MAAM,EAAE,OAAO,EACf,YAAY,EAAC,YAAY,EACzB,2BAA2B,EAAE,IAAI,CAAC,KAAK,CAAC,2BAA2B,GACrE,IACH,CACN,CAAC;IACN,CAAC;CACJ","sourcesContent":["import * as React from \"react\";\r\n\r\nimport type { Observable } from \"core/Misc/observable\";\r\nimport type { GlobalState } from \"../../../../globalState\";\r\nimport type { PropertyChangedEvent } from \"../../../../propertyChangedEvent\";\r\nimport type { BoxParticleEmitter } from \"core/Particles/EmitterTypes/boxParticleEmitter\";\r\nimport { Vector3LineComponent } from \"shared-ui-components/lines/vector3LineComponent\";\r\nimport type { LockObject } from \"shared-ui-components/tabs/propertyGrids/lockObject\";\r\n\r\ninterface IBoxEmitterGridComponentProps {\r\n    globalState: GlobalState;\r\n    emitter: BoxParticleEmitter;\r\n    onPropertyChangedObservable?: Observable<PropertyChangedEvent>;\r\n    lockObject: LockObject;\r\n}\r\n\r\nexport class BoxEmitterGridComponent extends React.Component<IBoxEmitterGridComponentProps> {\r\n    constructor(props: IBoxEmitterGridComponentProps) {\r\n        super(props);\r\n    }\r\n\r\n    override render() {\r\n        const emitter = this.props.emitter;\r\n        return (\r\n            <>\r\n                <Vector3LineComponent\r\n                    lockObject={this.props.lockObject}\r\n                    label=\"Direction 1\"\r\n                    target={emitter}\r\n                    propertyName=\"direction1\"\r\n                    onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                />\r\n                <Vector3LineComponent\r\n                    lockObject={this.props.lockObject}\r\n                    label=\"Direction 2\"\r\n                    target={emitter}\r\n                    propertyName=\"direction2\"\r\n                    onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                />\r\n                <Vector3LineComponent\r\n                    lockObject={this.props.lockObject}\r\n                    label=\"Min emit box\"\r\n                    target={emitter}\r\n                    propertyName=\"minEmitBox\"\r\n                    onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                />\r\n                <Vector3LineComponent\r\n                    lockObject={this.props.lockObject}\r\n                    label=\"Max emit box\"\r\n                    target={emitter}\r\n                    propertyName=\"maxEmitBox\"\r\n                    onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n"]}