{"version":3,"file":"contrast.js","sourceRoot":"","sources":["../../../../../../../../src/components/actionTabs/tabs/propertyGrids/materials/textures/defaultTools/contrast.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport type { IToolData, IToolParameters, IToolType, IToolGUIProps } from \"../textureEditorComponent\";\r\n\r\nclass ContrastTool implements IToolType {\r\n    getParameters: () => IToolParameters;\r\n    contrast: number = 1.0;\r\n    exposure: number = 1.0;\r\n    constructor(getParameters: () => IToolParameters) {\r\n        this.getParameters = getParameters;\r\n    }\r\n    setExposure(exposure: number) {\r\n        this.exposure = exposure;\r\n        const { scene3D, updateTexture } = this.getParameters();\r\n        scene3D.imageProcessingConfiguration.isEnabled = true;\r\n        scene3D.imageProcessingConfiguration.exposure = this.computeExposure(this.exposure);\r\n        updateTexture();\r\n    }\r\n    setContrast(contrast: number) {\r\n        this.contrast = contrast;\r\n        const { scene3D, updateTexture } = this.getParameters();\r\n        scene3D.imageProcessingConfiguration.isEnabled = true;\r\n        scene3D.imageProcessingConfiguration.contrast = this.computeContrast(contrast);\r\n        updateTexture();\r\n    }\r\n    /**\r\n     * Maps slider values to post processing values using an exponential regression\r\n     * @param sliderValue\r\n     * @returns exposure value\r\n     */\r\n    computeExposure(sliderValue: number) {\r\n        if (sliderValue <= 0) {\r\n            return 1 - -sliderValue / 100;\r\n        } else {\r\n            return Math.pow(1.05698, sliderValue) + 0.0000392163 * sliderValue;\r\n        }\r\n    }\r\n    /**\r\n     * Maps slider values to post processing values using an exponential regression\r\n     * @param sliderValue\r\n     * @returns contrast value\r\n     */\r\n    computeContrast(sliderValue: number) {\r\n        if (sliderValue <= 0) {\r\n            return 1 - -sliderValue / 100;\r\n        } else {\r\n            return Math.pow(1.05698, sliderValue) + 0.0000392163 * sliderValue;\r\n        }\r\n    }\r\n    setup() {\r\n        this.contrast = 0;\r\n        this.exposure = 0;\r\n        this.setExposure(this.exposure);\r\n        this.setContrast(this.contrast);\r\n    }\r\n    cleanup() {}\r\n    onReset() {\r\n        this.setExposure(0);\r\n        this.setContrast(0);\r\n    }\r\n}\r\n\r\nclass Settings extends React.Component<IToolGUIProps> {\r\n    override render() {\r\n        const instance = this.props.instance as ContrastTool;\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <label className=\"tool-slider-input\">\r\n                        <span>Contrast: {instance.contrast}</span>\r\n                        <input\r\n                            id=\"contrast-slider\"\r\n                            type=\"range\"\r\n                            min={-100}\r\n                            max={100}\r\n                            value={instance.contrast}\r\n                            onChange={(evt) => {\r\n                                instance.setContrast(evt.target.valueAsNumber);\r\n                                this.forceUpdate();\r\n                            }}\r\n                        />\r\n                    </label>\r\n                </div>\r\n                <div>\r\n                    <label className=\"tool-slider-input\">\r\n                        <span>Exposure: {instance.exposure}</span>\r\n                        <input\r\n                            type=\"range\"\r\n                            min={-100}\r\n                            max={100}\r\n                            value={instance.exposure}\r\n                            onChange={(evt) => {\r\n                                instance.setExposure(evt.target.valueAsNumber);\r\n                                this.forceUpdate();\r\n                            }}\r\n                        />\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport const Contrast: IToolData = {\r\n    name: \"Contrast/Exposure\",\r\n    type: ContrastTool,\r\n    is3D: true,\r\n    settingsComponent: Settings,\r\n    icon: `PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSI0MCIgaGVpZ2h0PSI0MCIgdmlld0JveD0iMCAwIDQwIDQwIj48cmVjdCB3aWR0aD0i\r\n    NDAiIGhlaWdodD0iNDAiIHN0eWxlPSJmaWxsOm5vbmUiLz48cGF0aCBkPSJNMTcuNTUsMjYuNTVsOC41OS0zLjIxQTYuODYsNi44NiwwLDAsMSwyNCwyNS43NWwtMy4x\r\n    OSwxLjE5QTcsNywwLDAsMSwxNy41NSwyNi41NVpNMjAsMTEuNUE4LjUsOC41LDAsMSwwLDI4LjUsMjAsOC41MSw4LjUxLDAsMCwwLDIwLDExLjVNMjAsMTBBMTAsMTAs\r\n    MCwxLDEsMTAsMjAsMTAsMTAsMCwwLDEsMjAsMTBabS0yLjQ1LDUuMzQsNS0xLjg2QTcsNywwLDAsMCwxOS40NCwxM2wtMS44OS43MVptMCwzLjIsNy44OC0yLjk0YTYu\r\n    ODgsNi44OCwwLDAsMC0xLjE5LTEuMTZsLTYuNjksMi41Wm0wLDMuMiw5LjIzLTMuNDRhNy42OCw3LjY4LDAsMCwwLS41Mi0xLjQxbC04LjcxLDMuMjVabTAsMS42djEu\r\n    Nmw5LjI4LTMuNDZBNi42Nyw2LjY3LDAsMCwwLDI3LDE5LjgyWiIgc3R5bGU9ImZpbGw6I2ZmZiIvPjwvc3ZnPg==`,\r\n};\r\n"]}