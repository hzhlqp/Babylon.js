{"version":3,"file":"physicsBodyGridComponent.js","sourceRoot":"","sources":["../../../../../../../src/components/actionTabs/tabs/propertyGrids/meshes/physics/physicsBodyGridComponent.tsx"],"names":[],"mappings":";AAIA,OAAO,EAAE,sBAAsB,EAAE,MAAM,mDAAmD,CAAC;AAC3F,OAAO,EAAE,iBAAiB,EAAE,MAAM,8CAA8C,CAAC;AAGjF,OAAO,EAAE,kCAAkC,EAAE,MAAM,sCAAsC,CAAC;AAC1F,OAAO,EAAE,4BAA4B,EAAE,MAAM,gCAAgC,CAAC;AAC9E,OAAO,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACjC,OAAO,EAAE,kBAAkB,EAAE,MAAM,+CAA+C,CAAC;AAwBnF;;;;GAIG;AACH,MAAM,UAAU,wBAAwB,CAAC,KAAqC;IAC1E,MAAM,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC,oBAAoB,EAAE,MAAM,IAAI,CAAC,CAAC;IAClE,MAAM,CAAC,gBAAgB,EAAE,mBAAmB,CAAC,GAAG,QAAQ,CAAuB,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC;IAEhG,MAAM,wBAAwB,GAAG,CAAC,KAAa,EAAE,EAAE;QAC/C,mBAAmB,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;IAC7C,CAAC,CAAC;IAEF,OAAO,CACH,MAAC,sBAAsB,IAAC,KAAK,EAAC,SAAS,EAAC,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,CAAC,WAAW,aAC7E,YAAY,GAAG,CAAC,IAAI,CACjB,KAAC,kBAAkB,IACf,KAAK,EAAC,mBAAmB,EACzB,UAAU,EAAE,KAAK,CAAC,UAAU,EAC5B,MAAM,EAAE,gBAAgB,EACxB,YAAY,EAAC,UAAU,EACvB,QAAQ,EAAE,wBAAwB,EAClC,GAAG,EAAE,CAAC,EACN,GAAG,EAAE,YAAY,GAAG,CAAC,EACrB,SAAS,EAAE,IAAI,GACjB,CACL,EACD,KAAC,kCAAkC,IAC/B,UAAU,EAAE,KAAK,CAAC,UAAU,EAC5B,2BAA2B,EAAE,KAAK,CAAC,2BAA2B,EAC9D,IAAI,EAAE,KAAK,CAAC,IAAI,EAChB,WAAW,EAAE,KAAK,CAAC,WAAW,EAC9B,aAAa,EAAE,gBAAgB,CAAC,QAAQ,GAC1C,EACF,KAAC,4BAA4B,IACzB,UAAU,EAAE,KAAK,CAAC,UAAU,EAC5B,2BAA2B,EAAE,KAAK,CAAC,2BAA2B,EAC9D,IAAI,EAAE,KAAK,CAAC,IAAI,EAChB,WAAW,EAAE,KAAK,CAAC,WAAW,GAChC,EACF,KAAC,iBAAiB,IAAC,KAAK,EAAC,aAAa,EAAC,KAAK,EAAE,iCAAiC,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,GAAI,EAC1G,KAAC,iBAAiB,IAAC,KAAK,EAAC,YAAY,EAAC,KAAK,EAAE,gCAAgC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,GAAI,IACpF,CAC5B,CAAC;AACN,CAAC;AAED,SAAS,iCAAiC,CAAC,IAAwB;IAC/D,QAAQ,IAAI,EAAE;QACV;YACI,OAAO,SAAS,CAAC;QACrB;YACI,OAAO,QAAQ,CAAC;QACpB;YACI,OAAO,UAAU,CAAC;QACtB;YACI,OAAO,SAAS,CAAC;KACxB;AACL,CAAC;AAED,SAAS,gCAAgC,CAAC,IAAuB;IAC7D,QAAQ,IAAI,EAAE;QACV;YACI,OAAO,KAAK,CAAC;QACjB;YACI,OAAO,QAAQ,CAAC;QACpB;YACI,OAAO,UAAU,CAAC;QACtB;YACI,OAAO,SAAS,CAAC;QACrB;YACI,OAAO,WAAW,CAAC;QACvB;YACI,OAAO,aAAa,CAAC;QACzB;YACI,OAAO,MAAM,CAAC;QAClB;YACI,OAAO,aAAa,CAAC;QACzB;YACI,OAAO,SAAS,CAAC;KACxB;AACL,CAAC","sourcesContent":["import type { Observable } from \"core/Misc/observable\";\r\nimport { PhysicsMotionType, PhysicsShapeType } from \"core/Physics/v2/IPhysicsEnginePlugin\";\r\nimport type { PhysicsBody } from \"core/Physics/v2/physicsBody\";\r\nimport type { GlobalState } from \"inspector/components/globalState\";\r\nimport { LineContainerComponent } from \"shared-ui-components/lines/lineContainerComponent\";\r\nimport { TextLineComponent } from \"shared-ui-components/lines/textLineComponent\";\r\nimport type { PropertyChangedEvent } from \"shared-ui-components/propertyChangedEvent\";\r\nimport type { LockObject } from \"shared-ui-components/tabs/propertyGrids/lockObject\";\r\nimport { PhysicsMassPropertiesGridComponent } from \"./physicsMassPropertiesGridComponent\";\r\nimport { PhysicsMaterialGridComponent } from \"./physicsMaterialGridComponent\";\r\nimport { useState } from \"react\";\r\nimport { FloatLineComponent } from \"shared-ui-components/lines/floatLineComponent\";\r\n\r\n/**\r\n * Properties of the physics body grid component.\r\n */\r\nexport interface IPhysicsBodyGridComponentProps {\r\n    /**\r\n     * Lock object\r\n     */\r\n    lockObject: LockObject;\r\n    /**\r\n     * Callback raised on the property changed event\r\n     */\r\n    onPropertyChangedObservable?: Observable<PropertyChangedEvent>;\r\n    /**\r\n     * Physics body to edit\r\n     */\r\n    body: PhysicsBody;\r\n    /**\r\n     * Global state\r\n     */\r\n    globalState: GlobalState;\r\n}\r\n\r\n/**\r\n * Component that allows displaying and tweaking a physics body's properties.\r\n * @param props the component props\r\n * @returns the component\r\n */\r\nexport function PhysicsBodyGridComponent(props: IPhysicsBodyGridComponentProps) {\r\n    const numInstances = props.body._pluginDataInstances?.length ?? 0;\r\n    const [selectedInstance, setSelectedInstance] = useState<{ selected: number }>({ selected: 0 });\r\n\r\n    const onChangeSelectedInstance = (value: number) => {\r\n        setSelectedInstance({ selected: value });\r\n    };\r\n\r\n    return (\r\n        <LineContainerComponent title=\"PHYSICS\" closed={true} selection={props.globalState}>\r\n            {numInstances > 0 && (\r\n                <FloatLineComponent\r\n                    label=\"Selected instance\"\r\n                    lockObject={props.lockObject}\r\n                    target={selectedInstance}\r\n                    propertyName=\"selected\"\r\n                    onChange={onChangeSelectedInstance}\r\n                    min={0}\r\n                    max={numInstances - 1}\r\n                    isInteger={true}\r\n                />\r\n            )}\r\n            <PhysicsMassPropertiesGridComponent\r\n                lockObject={props.lockObject}\r\n                onPropertyChangedObservable={props.onPropertyChangedObservable}\r\n                body={props.body}\r\n                globalState={props.globalState}\r\n                instanceIndex={selectedInstance.selected}\r\n            />\r\n            <PhysicsMaterialGridComponent\r\n                lockObject={props.lockObject}\r\n                onPropertyChangedObservable={props.onPropertyChangedObservable}\r\n                body={props.body}\r\n                globalState={props.globalState}\r\n            />\r\n            <TextLineComponent label=\"Motion Type\" value={_convertPhysicsMotionTypeToString(props.body.motionType)} />\r\n            <TextLineComponent label=\"Shape Type\" value={_convertPhysicsShapeTypeToString(props.body.shape?.type)} />\r\n        </LineContainerComponent>\r\n    );\r\n}\r\n\r\nfunction _convertPhysicsMotionTypeToString(type?: PhysicsMotionType) {\r\n    switch (type) {\r\n        case PhysicsMotionType.DYNAMIC:\r\n            return \"Dynamic\";\r\n        case PhysicsMotionType.STATIC:\r\n            return \"Static\";\r\n        case PhysicsMotionType.ANIMATED:\r\n            return \"Animated\";\r\n        default:\r\n            return \"Unknown\";\r\n    }\r\n}\r\n\r\nfunction _convertPhysicsShapeTypeToString(type?: PhysicsShapeType) {\r\n    switch (type) {\r\n        case PhysicsShapeType.BOX:\r\n            return \"Box\";\r\n        case PhysicsShapeType.SPHERE:\r\n            return \"Sphere\";\r\n        case PhysicsShapeType.CYLINDER:\r\n            return \"Cylinder\";\r\n        case PhysicsShapeType.CAPSULE:\r\n            return \"Capsule\";\r\n        case PhysicsShapeType.CONTAINER:\r\n            return \"Container\";\r\n        case PhysicsShapeType.CONVEX_HULL:\r\n            return \"Convex Hull\";\r\n        case PhysicsShapeType.MESH:\r\n            return \"Mesh\";\r\n        case PhysicsShapeType.HEIGHTFIELD:\r\n            return \"Heightfield\";\r\n        default:\r\n            return \"Unknown\";\r\n    }\r\n}\r\n"]}