{"version":3,"file":"curve.js","sourceRoot":"","sources":["../../../../../../../../src/components/actionTabs/tabs/propertyGrids/animations/curveEditor/graph/curve.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,2BAA2B,CAAC;AAEtD,OAAO,EAAE,UAAU,EAAE,MAAM,sBAAsB,CAAC;AAWlD,MAAM,OAAO,KAAK;IAad,YACI,KAAa,EACb,SAAoB,EACpB,QAAiB,EACjB,cAA0B,EAC1B,mBAA4C,EAC5C,oBAA6C;QAjB1C,SAAI,GAAe,EAAE,CAAC;QAGtB,4BAAuB,GAAG,IAAI,UAAU,EAAQ,CAAC;QAgBpD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACrC,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;QAC/C,IAAI,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;IACrD,CAAC;IAEM,WAAW,CAAC,QAA+B,EAAE,QAA+B;QAC/E,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACvB,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YACjB,OAAO,EAAE,CAAC;SACb;QACD,IAAI,QAAQ,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC;QAExE,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;QACzC,KAAK,IAAI,QAAQ,GAAG,CAAC,EAAE,QAAQ,GAAG,IAAI,CAAC,MAAM,EAAE,QAAQ,EAAE,EAAE;YACvD,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC;YACjD,MAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC;YAC3C,MAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;YAC1C,MAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;YAC1C,MAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC;YAC3C,MAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC;YAC3C,MAAM,SAAS,GAAG,YAAY,GAAG,SAAS,CAAC;YAC3C,MAAM,iBAAiB,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,aAAa,CAAC;YAE3D,IAAI,iBAAiB,2CAAmC,EAAE;gBACtD,uBAAuB;gBACvB,QAAQ,IAAI,KAAK,QAAQ,CAAC,YAAY,CAAC,IAAI,QAAQ,CAAC,SAAS,CAAC,EAAE,CAAC;gBACjE,QAAQ,IAAI,KAAK,QAAQ,CAAC,YAAY,CAAC,IAAI,QAAQ,CAAC,YAAY,CAAC,EAAE,CAAC;gBACpE,SAAS;aACZ;YAED,IAAI,UAAU,KAAK,SAAS,IAAI,SAAS,KAAK,SAAS,IAAI,QAAQ,KAAK,SAAS,CAAC,wBAAwB,EAAE;gBACxG,uBAAuB;gBACvB,QAAQ,IAAI,KAAK,QAAQ,CAAC,YAAY,CAAC,IAAI,QAAQ,CAAC,YAAY,CAAC,EAAE,CAAC;gBACpE,SAAS;aACZ;YAED,8BAA8B;YAC9B,KAAK,IAAI,KAAK,GAAG,SAAS,EAAE,KAAK,GAAG,YAAY,EAAE,KAAK,IAAI,SAAS,GAAG,KAAK,CAAC,UAAU,EAAE;gBACrF,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBAChD,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;gBACjE,QAAQ,IAAI,KAAK,QAAQ,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC;aACzD;YACD,QAAQ,IAAI,KAAK,QAAQ,CAAC,YAAY,CAAC,IAAI,QAAQ,CAAC,YAAY,CAAC,EAAE,CAAC;SACvE;QAED,OAAO,QAAQ,CAAC;IACpB,CAAC;IAEM,uBAAuB,CAAC,QAAgB,EAAE,OAAgB;QAC7D,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACvB,IAAI,CAAC,QAAQ,CAAC,CAAC,aAAa,GAAG,OAAO,CAAC;QAEvC,MAAM,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;QAC/C,aAAa,CAAC,QAAQ,CAAC,CAAC,aAAa,GAAG,OAAO,CAAC;IACpD,CAAC;IAEM,uBAAuB,CAAC,QAAgB,EAAE,iBAA4C;QACzF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACvB,IAAI,CAAC,QAAQ,CAAC,CAAC,aAAa,GAAG,iBAAiB,CAAC;QAEjD,MAAM,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;QAC/C,aAAa,CAAC,QAAQ,CAAC,CAAC,aAAa,GAAG,iBAAiB,CAAC;QAE1D,IAAI,CAAC,uBAAuB,CAAC,eAAe,EAAE,CAAC;IACnD,CAAC;IAEM,iBAAiB,CAAC,QAAgB;QACrC,IAAI,QAAQ,KAAK,CAAC,EAAE;YAChB,OAAO,CAAC,CAAC;SACZ;QAED,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACvB,IAAI,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC;QAEzC,IAAI,SAAS,KAAK,SAAS,IAAI,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,EAAE;YAC/D,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;SAChD;QAED,OAAO,SAAS,CAAC;IACrB,CAAC;IAEM,kBAAkB,CAAC,QAAgB;QACtC,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACvB,IAAI,QAAQ,KAAK,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YAC9B,OAAO,CAAC,CAAC;SACZ;QAED,IAAI,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC;QAE3C,IAAI,UAAU,KAAK,SAAS,IAAI,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,EAAE;YACjE,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;SAClD;QAED,OAAO,UAAU,CAAC;IACtB,CAAC;IAEM,oBAAoB,CAAC,QAAgB;QACxC,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACvB,IAAI,QAAQ,KAAK,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC;YAAE,OAAO,KAAK,CAAC;QACpD,MAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;QACvC,MAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC;QAC9C,OAAO,SAAS,KAAK,YAAY,CAAC;IACtC,CAAC;IAEM,kBAAkB,CAAC,QAAgB;QACtC,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACvB,MAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;QACvC,MAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC;QAC9C,OAAO,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,GAAG,SAAS,CAAC,CAAC;IAC1F,CAAC;IAEM,mBAAmB,CAAC,QAAgB;QACvC,IAAI,QAAQ,KAAK,CAAC;YAAE,OAAO,KAAK,CAAC;QACjC,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACvB,MAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC;QAC3C,MAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;QAC1C,OAAO,SAAS,KAAK,YAAY,CAAC;IACtC,CAAC;IAEM,iBAAiB,CAAC,QAAgB;QACrC,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACvB,MAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC;QAC3C,MAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;QAC1C,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,GAAG,SAAS,CAAC,CAAC;IAC1F,CAAC;IAEM,qBAAqB,CAAC,QAAgB;QACzC,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACvB,MAAM,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;QAC/C,IAAI,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,EAAE;YACpC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;SAC/D;QAED,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE;gBACpC,aAAa,CAAC,QAAQ,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,cAAe,EAAE,CAAC;gBAC3D,IAAI,CAAC,mBAAoB,CAAC,QAAQ,CAAC,CAAC;aACvC;YACD,aAAa,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC;SAC/E;aAAM;YACH,aAAa,CAAC,QAAQ,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC;SAChE;IACL,CAAC;IAEM,sBAAsB,CAAC,QAAgB;QAC1C,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACvB,MAAM,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;QAC/C,IAAI,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,EAAE;YACrC,IAAI,CAAC,QAAQ,CAAC,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;SACjE;QAED,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,UAAU,EAAE;gBACrC,aAAa,CAAC,QAAQ,CAAC,CAAC,UAAU,GAAG,IAAI,CAAC,cAAe,EAAE,CAAC;gBAC5D,IAAI,CAAC,oBAAqB,CAAC,QAAQ,CAAC,CAAC;aACxC;YACD,aAAa,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC;SACjF;aAAM;YACH,aAAa,CAAC,QAAQ,CAAC,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC;SAClE;IACL,CAAC;IAEM,+BAA+B,CAAC,KAAa,EAAE,KAAa;QAC/D,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACvB,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,GAAG,KAAK,CAAC;QAE9B,MAAM,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;QAC/C,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE;gBACjC,aAAa,CAAC,KAAK,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,cAAe,EAAE,CAAC;gBACxD,IAAI,CAAC,mBAAoB,CAAC,KAAK,CAAC,CAAC;aACpC;YACD,IAAI,CAAC,aAAa,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,UAAU,EAAE;gBACtC,aAAa,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,UAAU,GAAG,IAAI,CAAC,cAAe,EAAE,CAAC;gBAC7D,IAAI,CAAC,oBAAqB,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;aACzC;YAED,aAAa,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC;SACzE;aAAM;YACH,aAAa,CAAC,KAAK,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC;YAEvD,IAAI,aAAa,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,UAAU,KAAK,SAAS,EAAE;gBACnD,IAAI,CAAC,sBAAsB,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;aAC1C;SACJ;QAED,IAAI,CAAC,uBAAuB,CAAC,eAAe,EAAE,CAAC;IACnD,CAAC;IAEM,gCAAgC,CAAC,KAAa,EAAE,KAAa;QAChE,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACvB,IAAI,CAAC,KAAK,CAAC,CAAC,UAAU,GAAG,KAAK,CAAC;QAE/B,MAAM,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;QAE/C,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,IAAI,CAAC,aAAa,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,SAAS,EAAE;gBACrC,aAAa,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,cAAe,EAAE,CAAC;gBAC5D,IAAI,CAAC,mBAAoB,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;aACxC;YACD,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,UAAU,EAAE;gBAClC,aAAa,CAAC,KAAK,CAAC,CAAC,UAAU,GAAG,IAAI,CAAC,cAAe,EAAE,CAAC;gBACzD,IAAI,CAAC,oBAAqB,CAAC,KAAK,CAAC,CAAC;aACrC;YAED,aAAa,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC;SAC3E;aAAM;YACH,aAAa,CAAC,KAAK,CAAC,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC;YACzD,IAAI,aAAa,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,SAAS,KAAK,SAAS,EAAE;gBAClD,IAAI,CAAC,qBAAqB,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;aACzC;SACJ;QAED,IAAI,CAAC,uBAAuB,CAAC,eAAe,EAAE,CAAC;IACnD,CAAC;IAEM,cAAc,CAAC,KAAa,EAAE,KAAa;QAC9C,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC;QACpD,WAAW,CAAC,KAAK,GAAG,KAAK,CAAC;QAE1B,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC;QAE/B,IAAI,CAAC,uBAAuB,CAAC,eAAe,EAAE,CAAC;IACnD,CAAC;IAEM,cAAc,CAAC,KAAa,EAAE,KAAa;QAC9C,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC;QAE/B,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC;QAElD,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC;SAC1C;aAAM;YACH,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;SAC3B;QAED,IAAI,CAAC,uBAAuB,CAAC,eAAe,EAAE,CAAC;IACnD,CAAC;;AApQsB,gBAAU,GAAG,EAAE,AAAL,CAAM;AAUhB,mBAAa,GAAG,EAAE,AAAL,CAAM","sourcesContent":["import { Animation } from \"core/Animations/animation\";\r\nimport { AnimationKeyInterpolation } from \"core/Animations/animationKey\";\r\nimport { Observable } from \"core/Misc/observable\";\r\n\r\nexport interface KeyEntry {\r\n    frame: number;\r\n    value: number;\r\n    inTangent?: number;\r\n    outTangent?: number;\r\n    lockedTangent: boolean;\r\n    interpolation?: AnimationKeyInterpolation;\r\n}\r\n\r\nexport class Curve {\r\n    public static readonly SampleRate = 50;\r\n    public keys: KeyEntry[] = [];\r\n    public animation: Animation;\r\n    public color: string;\r\n    public onDataUpdatedObservable = new Observable<void>();\r\n    public property?: string;\r\n    public tangentBuilder?: () => any;\r\n    public setDefaultInTangent?: (keyId: number) => any;\r\n    public setDefaultOutTangent?: (keyId: number) => any;\r\n\r\n    public static readonly TangentLength = 50;\r\n\r\n    public constructor(\r\n        color: string,\r\n        animation: Animation,\r\n        property?: string,\r\n        tangentBuilder?: () => any,\r\n        setDefaultInTangent?: (keyId: number) => any,\r\n        setDefaultOutTangent?: (keyId: number) => any\r\n    ) {\r\n        this.color = color;\r\n        this.animation = animation;\r\n        this.property = property;\r\n        this.tangentBuilder = tangentBuilder;\r\n        this.setDefaultInTangent = setDefaultInTangent;\r\n        this.setDefaultOutTangent = setDefaultOutTangent;\r\n    }\r\n\r\n    public getPathData(convertX: (x: number) => number, convertY: (y: number) => number) {\r\n        const keys = this.keys;\r\n        if (keys.length < 2) {\r\n            return \"\";\r\n        }\r\n        let pathData = `M${convertX(keys[0].frame)} ${convertY(keys[0].value)}`;\r\n\r\n        const dataType = this.animation.dataType;\r\n        for (let keyIndex = 1; keyIndex < keys.length; keyIndex++) {\r\n            const outTangent = keys[keyIndex - 1].outTangent;\r\n            const inTangent = keys[keyIndex].inTangent;\r\n            const currentFrame = keys[keyIndex].frame;\r\n            const currentValue = keys[keyIndex].value;\r\n            const prevFrame = keys[keyIndex - 1].frame;\r\n            const prevValue = keys[keyIndex - 1].value;\r\n            const frameDist = currentFrame - prevFrame;\r\n            const prevInterpolation = keys[keyIndex - 1].interpolation;\r\n\r\n            if (prevInterpolation === AnimationKeyInterpolation.STEP) {\r\n                // Draw a stepped curve\r\n                pathData += `L ${convertX(currentFrame)} ${convertY(prevValue)}`;\r\n                pathData += `L ${convertX(currentFrame)} ${convertY(currentValue)}`;\r\n                continue;\r\n            }\r\n\r\n            if (outTangent === undefined && inTangent === undefined && dataType !== Animation.ANIMATIONTYPE_QUATERNION) {\r\n                // Draw a straight line\r\n                pathData += ` L${convertX(currentFrame)} ${convertY(currentValue)}`;\r\n                continue;\r\n            }\r\n\r\n            // Let's sample the curve else\r\n            for (let frame = prevFrame; frame < currentFrame; frame += frameDist / Curve.SampleRate) {\r\n                const keyValue = this.animation.evaluate(frame);\r\n                const value = this.property ? keyValue[this.property] : keyValue;\r\n                pathData += ` L${convertX(frame)} ${convertY(value)}`;\r\n            }\r\n            pathData += ` L${convertX(currentFrame)} ${convertY(currentValue)}`;\r\n        }\r\n\r\n        return pathData;\r\n    }\r\n\r\n    public updateLockedTangentMode(keyIndex: number, enabled: boolean) {\r\n        const keys = this.keys;\r\n        keys[keyIndex].lockedTangent = enabled;\r\n\r\n        const animationKeys = this.animation.getKeys();\r\n        animationKeys[keyIndex].lockedTangent = enabled;\r\n    }\r\n\r\n    public updateInterpolationMode(keyIndex: number, interpolationMode: AnimationKeyInterpolation) {\r\n        const keys = this.keys;\r\n        keys[keyIndex].interpolation = interpolationMode;\r\n\r\n        const animationKeys = this.animation.getKeys();\r\n        animationKeys[keyIndex].interpolation = interpolationMode;\r\n\r\n        this.onDataUpdatedObservable.notifyObservers();\r\n    }\r\n\r\n    public getInControlPoint(keyIndex: number) {\r\n        if (keyIndex === 0) {\r\n            return 0;\r\n        }\r\n\r\n        const keys = this.keys;\r\n        let inTangent = keys[keyIndex].inTangent;\r\n\r\n        if (inTangent === undefined && this.hasDefinedInTangent(keyIndex)) {\r\n            inTangent = this.evaluateInTangent(keyIndex);\r\n        }\r\n\r\n        return inTangent;\r\n    }\r\n\r\n    public getOutControlPoint(keyIndex: number) {\r\n        const keys = this.keys;\r\n        if (keyIndex === keys.length - 1) {\r\n            return 0;\r\n        }\r\n\r\n        let outTangent = keys[keyIndex].outTangent;\r\n\r\n        if (outTangent === undefined && this.hasDefinedOutTangent(keyIndex)) {\r\n            outTangent = this.evaluateOutTangent(keyIndex);\r\n        }\r\n\r\n        return outTangent;\r\n    }\r\n\r\n    public hasDefinedOutTangent(keyIndex: number) {\r\n        const keys = this.keys;\r\n        if (keyIndex === this.keys.length - 1) return false;\r\n        const prevFrame = keys[keyIndex].frame;\r\n        const currentFrame = keys[keyIndex + 1].frame;\r\n        return prevFrame !== currentFrame;\r\n    }\r\n\r\n    public evaluateOutTangent(keyIndex: number) {\r\n        const keys = this.keys;\r\n        const prevFrame = keys[keyIndex].frame;\r\n        const currentFrame = keys[keyIndex + 1].frame;\r\n        return (keys[keyIndex + 1].value - keys[keyIndex].value) / (currentFrame - prevFrame);\r\n    }\r\n\r\n    public hasDefinedInTangent(keyIndex: number) {\r\n        if (keyIndex === 0) return false;\r\n        const keys = this.keys;\r\n        const prevFrame = keys[keyIndex - 1].frame;\r\n        const currentFrame = keys[keyIndex].frame;\r\n        return prevFrame !== currentFrame;\r\n    }\r\n\r\n    public evaluateInTangent(keyIndex: number) {\r\n        const keys = this.keys;\r\n        const prevFrame = keys[keyIndex - 1].frame;\r\n        const currentFrame = keys[keyIndex].frame;\r\n        return (keys[keyIndex].value - keys[keyIndex - 1].value) / (currentFrame - prevFrame);\r\n    }\r\n\r\n    public storeDefaultInTangent(keyIndex: number) {\r\n        const keys = this.keys;\r\n        const animationKeys = this.animation.getKeys();\r\n        if (this.hasDefinedInTangent(keyIndex)) {\r\n            keys[keyIndex].inTangent = this.evaluateInTangent(keyIndex);\r\n        }\r\n\r\n        if (this.property) {\r\n            if (!animationKeys[keyIndex].inTangent) {\r\n                animationKeys[keyIndex].inTangent = this.tangentBuilder!();\r\n                this.setDefaultInTangent!(keyIndex);\r\n            }\r\n            animationKeys[keyIndex].inTangent[this.property] = keys[keyIndex].inTangent;\r\n        } else {\r\n            animationKeys[keyIndex].inTangent = keys[keyIndex].inTangent;\r\n        }\r\n    }\r\n\r\n    public storeDefaultOutTangent(keyIndex: number) {\r\n        const keys = this.keys;\r\n        const animationKeys = this.animation.getKeys();\r\n        if (this.hasDefinedOutTangent(keyIndex)) {\r\n            keys[keyIndex].outTangent = this.evaluateOutTangent(keyIndex);\r\n        }\r\n\r\n        if (this.property) {\r\n            if (!animationKeys[keyIndex].outTangent) {\r\n                animationKeys[keyIndex].outTangent = this.tangentBuilder!();\r\n                this.setDefaultOutTangent!(keyIndex);\r\n            }\r\n            animationKeys[keyIndex].outTangent[this.property] = keys[keyIndex].outTangent;\r\n        } else {\r\n            animationKeys[keyIndex].outTangent = keys[keyIndex].outTangent;\r\n        }\r\n    }\r\n\r\n    public updateInTangentFromControlPoint(keyId: number, slope: number) {\r\n        const keys = this.keys;\r\n        keys[keyId].inTangent = slope;\r\n\r\n        const animationKeys = this.animation.getKeys();\r\n        if (this.property) {\r\n            if (!animationKeys[keyId].inTangent) {\r\n                animationKeys[keyId].inTangent = this.tangentBuilder!();\r\n                this.setDefaultInTangent!(keyId);\r\n            }\r\n            if (!animationKeys[keyId - 1].outTangent) {\r\n                animationKeys[keyId - 1].outTangent = this.tangentBuilder!();\r\n                this.setDefaultOutTangent!(keyId - 1);\r\n            }\r\n\r\n            animationKeys[keyId].inTangent[this.property] = keys[keyId].inTangent;\r\n        } else {\r\n            animationKeys[keyId].inTangent = keys[keyId].inTangent;\r\n\r\n            if (animationKeys[keyId - 1].outTangent === undefined) {\r\n                this.storeDefaultOutTangent(keyId - 1);\r\n            }\r\n        }\r\n\r\n        this.onDataUpdatedObservable.notifyObservers();\r\n    }\r\n\r\n    public updateOutTangentFromControlPoint(keyId: number, slope: number) {\r\n        const keys = this.keys;\r\n        keys[keyId].outTangent = slope;\r\n\r\n        const animationKeys = this.animation.getKeys();\r\n\r\n        if (this.property) {\r\n            if (!animationKeys[keyId + 1].inTangent) {\r\n                animationKeys[keyId + 1].inTangent = this.tangentBuilder!();\r\n                this.setDefaultInTangent!(keyId + 1);\r\n            }\r\n            if (!animationKeys[keyId].outTangent) {\r\n                animationKeys[keyId].outTangent = this.tangentBuilder!();\r\n                this.setDefaultOutTangent!(keyId);\r\n            }\r\n\r\n            animationKeys[keyId].outTangent[this.property] = keys[keyId].outTangent;\r\n        } else {\r\n            animationKeys[keyId].outTangent = keys[keyId].outTangent;\r\n            if (animationKeys[keyId + 1].inTangent === undefined) {\r\n                this.storeDefaultInTangent(keyId + 1);\r\n            }\r\n        }\r\n\r\n        this.onDataUpdatedObservable.notifyObservers();\r\n    }\r\n\r\n    public updateKeyFrame(keyId: number, frame: number) {\r\n        const originalKey = this.animation.getKeys()[keyId];\r\n        originalKey.frame = frame;\r\n\r\n        this.keys[keyId].frame = frame;\r\n\r\n        this.onDataUpdatedObservable.notifyObservers();\r\n    }\r\n\r\n    public updateKeyValue(keyId: number, value: number) {\r\n        this.keys[keyId].value = value;\r\n\r\n        const sourceKey = this.animation.getKeys()[keyId];\r\n\r\n        if (this.property) {\r\n            sourceKey.value[this.property] = value;\r\n        } else {\r\n            sourceKey.value = value;\r\n        }\r\n\r\n        this.onDataUpdatedObservable.notifyObservers();\r\n    }\r\n}\r\n"]}