{"version":3,"file":"meshEmitterGridComponent.js","sourceRoot":"","sources":["../../../../../../src/components/actionTabs/tabs/propertyGrids/particleSystems/meshEmitterGridComponent.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAM/B,OAAO,EAAE,oBAAoB,EAAE,MAAM,iDAAiD,CAAC;AAEvF,OAAO,EAAE,qBAAqB,EAAE,MAAM,kDAAkD,CAAC;AACzF,OAAO,EAAE,mBAAmB,EAAE,MAAM,oCAAoC,CAAC;AAYzE,MAAM,OAAO,wBAAyB,SAAQ,KAAK,CAAC,SAAyC;IACzF,YAAY,KAAqC;QAC7C,KAAK,CAAC,KAAK,CAAC,CAAC;IACjB,CAAC;IAEQ,MAAM;QACX,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;QAEnC,OAAO,CACH,8BACI,KAAC,mBAAmB,IAChB,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,EACnC,KAAK,EAAC,QAAQ,EACd,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EACvB,2BAA2B,EAAE,IAAI,CAAC,KAAK,CAAC,2BAA2B,EACnE,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,EAC1B,QAAQ,EAAC,MAAM,GACjB,EACD,CAAC,OAAO,CAAC,0BAA0B,IAAI,CACpC,KAAC,oBAAoB,IACjB,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,EACjC,KAAK,EAAC,aAAa,EACnB,MAAM,EAAE,OAAO,EACf,YAAY,EAAC,YAAY,EACzB,2BAA2B,EAAE,IAAI,CAAC,KAAK,CAAC,2BAA2B,GACrE,CACL,EACA,CAAC,OAAO,CAAC,0BAA0B,IAAI,CACpC,KAAC,oBAAoB,IACjB,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,EACjC,KAAK,EAAC,aAAa,EACnB,MAAM,EAAE,OAAO,EACf,YAAY,EAAC,YAAY,EACzB,2BAA2B,EAAE,IAAI,CAAC,KAAK,CAAC,2BAA2B,GACrE,CACL,EACD,KAAC,qBAAqB,IAClB,KAAK,EAAC,2BAA2B,EACjC,MAAM,EAAE,OAAO,EACf,YAAY,EAAC,4BAA4B,EACzC,2BAA2B,EAAE,IAAI,CAAC,KAAK,CAAC,2BAA2B,GACrE,IACH,CACN,CAAC;IACN,CAAC;CACJ","sourcesContent":["import * as React from \"react\";\r\n\r\nimport type { Observable } from \"core/Misc/observable\";\r\nimport type { GlobalState } from \"../../../../globalState\";\r\nimport type { PropertyChangedEvent } from \"../../../../propertyChangedEvent\";\r\nimport type { LockObject } from \"shared-ui-components/tabs/propertyGrids/lockObject\";\r\nimport { Vector3LineComponent } from \"shared-ui-components/lines/vector3LineComponent\";\r\nimport type { MeshParticleEmitter } from \"core/Particles/EmitterTypes/meshParticleEmitter\";\r\nimport { CheckBoxLineComponent } from \"shared-ui-components/lines/checkBoxLineComponent\";\r\nimport { MeshPickerComponent } from \"../../../lines/meshPickerComponent\";\r\nimport type { Scene } from \"core/scene\";\r\n\r\ninterface IMeshEmitterGridComponentProps {\r\n    globalState: GlobalState;\r\n    emitter: MeshParticleEmitter;\r\n    scene: Scene;\r\n    lockObject: LockObject;\r\n    onSelectionChangedObservable?: Observable<any>;\r\n    onPropertyChangedObservable?: Observable<PropertyChangedEvent>;\r\n}\r\n\r\nexport class MeshEmitterGridComponent extends React.Component<IMeshEmitterGridComponentProps> {\r\n    constructor(props: IMeshEmitterGridComponentProps) {\r\n        super(props);\r\n    }\r\n\r\n    override render() {\r\n        const emitter = this.props.emitter;\r\n\r\n        return (\r\n            <>\r\n                <MeshPickerComponent\r\n                    globalState={this.props.globalState}\r\n                    label=\"Source\"\r\n                    scene={this.props.scene}\r\n                    onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    target={this.props.emitter}\r\n                    property=\"mesh\"\r\n                />\r\n                {!emitter.useMeshNormalsForDirection && (\r\n                    <Vector3LineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Direction 1\"\r\n                        target={emitter}\r\n                        propertyName=\"direction1\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                )}\r\n                {!emitter.useMeshNormalsForDirection && (\r\n                    <Vector3LineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Direction 2\"\r\n                        target={emitter}\r\n                        propertyName=\"direction2\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                )}\r\n                <CheckBoxLineComponent\r\n                    label=\"Use normals for direction\"\r\n                    target={emitter}\r\n                    propertyName=\"useMeshNormalsForDirection\"\r\n                    onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n"]}