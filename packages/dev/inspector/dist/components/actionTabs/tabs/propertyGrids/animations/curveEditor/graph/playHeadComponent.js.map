{"version":3,"file":"playHeadComponent.js","sourceRoot":"","sources":["../../../../../../../../src/components/actionTabs/tabs/propertyGrids/animations/curveEditor/graph/playHeadComponent.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { Observer } from \"core/Misc/observable\";\r\nimport type { Scene } from \"core/scene\";\r\nimport type { Nullable } from \"core/types\";\r\nimport * as React from \"react\";\r\nimport type { GlobalState } from \"../../../../../../globalState\";\r\nimport type { Context, IActiveAnimationChangedOptions } from \"../context\";\r\n\r\ninterface IPlayHeadComponentProps {\r\n    globalState: GlobalState;\r\n    context: Context;\r\n}\r\n\r\ninterface IPlayHeadPixelLocator {\r\n    minFrame: number;\r\n    maxFrame: number;\r\n    width: number;\r\n    offset: number;\r\n    scale: number;\r\n}\r\n\r\ninterface IPlayHeadComponentState {}\r\n\r\nexport class PlayHeadComponent extends React.Component<IPlayHeadComponentProps, IPlayHeadComponentState> {\r\n    private readonly _graphAbsoluteWidth = 788;\r\n    private _playHead: React.RefObject<HTMLDivElement>;\r\n    private _playHeadCircle: React.RefObject<HTMLDivElement>;\r\n    private _onBeforeRenderObserver: Nullable<Observer<Scene>>;\r\n    private _onActiveAnimationChangedObserver: Nullable<Observer<IActiveAnimationChangedOptions>>;\r\n    private _onRangeFrameBarResizedObserver: Nullable<Observer<number>>;\r\n    private _onMoveToFrameRequiredObserver: Nullable<Observer<number>>;\r\n    private _onGraphMovedObserver: Nullable<Observer<number>>;\r\n    private _onGraphScaledObserver: Nullable<Observer<number>>;\r\n    private _viewScale = 1;\r\n    private _offsetX = 0;\r\n    private _offsetRange = 10;\r\n    private _viewWidth = 748;\r\n    private readonly _rangeWidthToPlayheadWidth = 40;\r\n\r\n    private _pointerIsDown: boolean;\r\n\r\n    constructor(props: IPlayHeadComponentProps) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n\r\n        this._playHead = React.createRef();\r\n        this._playHeadCircle = React.createRef();\r\n\r\n        this._onActiveAnimationChangedObserver = this.props.context.onActiveAnimationChanged.add(() => {\r\n            this.forceUpdate();\r\n        });\r\n\r\n        this._onRangeFrameBarResizedObserver = this.props.context.onRangeFrameBarResized.add((width) => {\r\n            this._viewWidth = width - this._rangeWidthToPlayheadWidth;\r\n        });\r\n\r\n        this._onBeforeRenderObserver = this.props.context.scene.onBeforeRenderObservable.add(() => {\r\n            if (this.props.context.activeAnimations.length === 0) {\r\n                return;\r\n            }\r\n\r\n            const animation = this.props.context.activeAnimations[0];\r\n\r\n            if (!animation) {\r\n                return;\r\n            }\r\n            const runtimeAnimation = animation.runtimeAnimations[0];\r\n\r\n            if (runtimeAnimation) {\r\n                this._moveHead(runtimeAnimation.currentFrame);\r\n            } else if (!this._playHeadCircle.current?.innerHTML) {\r\n                this._moveHead(0);\r\n            }\r\n        });\r\n\r\n        this._onMoveToFrameRequiredObserver = this.props.context.onMoveToFrameRequired.add((frame) => {\r\n            this.props.context.moveToFrame(frame);\r\n            this._moveHead(frame);\r\n        });\r\n\r\n        this._onGraphMovedObserver = this.props.context.onGraphMoved.add((x) => {\r\n            this._offsetX = x;\r\n            this.forceUpdate();\r\n\r\n            this._moveHead(this.props.context.activeFrame);\r\n        });\r\n\r\n        this._onGraphScaledObserver = this.props.context.onGraphScaled.add((scale) => {\r\n            this._viewScale = 1 / scale;\r\n            this.forceUpdate();\r\n\r\n            this._moveHead(this.props.context.activeFrame);\r\n        });\r\n    }\r\n\r\n    private _moveHead(frame: number) {\r\n        if (!this._playHead.current || !this._playHeadCircle.current || frame === undefined) {\r\n            return;\r\n        }\r\n\r\n        this._playHead.current.style.left = this._frameToPixel(frame) + \"px\";\r\n        this._playHeadCircle.current.innerHTML = frame.toFixed(0);\r\n\r\n        this.props.context.activeFrame = frame;\r\n        this.props.context.onPlayheadMoved.notifyObservers(frame);\r\n    }\r\n\r\n    private _frameToPixel(frame: number) {\r\n        const minFrame = this.props.context.referenceMinFrame;\r\n        const maxFrame = this.props.context.referenceMaxFrame;\r\n\r\n        return (((frame - minFrame) / (maxFrame - minFrame)) * this._graphAbsoluteWidth + this._offsetX) * this._viewScale;\r\n    }\r\n\r\n    private _pixelToFrame(pixel: number, locator: IPlayHeadPixelLocator) {\r\n        const { minFrame, maxFrame, width, offset, scale } = locator;\r\n        const animation = this.props.context.activeAnimations[0];\r\n        const keys = animation.getKeys();\r\n\r\n        return Math.max(((pixel / scale - offset) / width) * (maxFrame - minFrame) + minFrame, keys[0].frame);\r\n    }\r\n\r\n    override componentWillUnmount() {\r\n        if (this._onBeforeRenderObserver) {\r\n            this.props.context.scene.onBeforeRenderObservable.remove(this._onBeforeRenderObserver);\r\n            this._onBeforeRenderObserver = null;\r\n        }\r\n\r\n        if (this._onActiveAnimationChangedObserver) {\r\n            this.props.context.onActiveAnimationChanged.remove(this._onActiveAnimationChangedObserver);\r\n        }\r\n\r\n        if (this._onRangeFrameBarResizedObserver) {\r\n            this.props.context.onRangeFrameBarResized.remove(this._onRangeFrameBarResizedObserver);\r\n        }\r\n\r\n        if (this._onMoveToFrameRequiredObserver) {\r\n            this.props.context.onMoveToFrameRequired.remove(this._onMoveToFrameRequiredObserver);\r\n        }\r\n\r\n        if (this._onGraphMovedObserver) {\r\n            this.props.context.onGraphMoved.remove(this._onGraphMovedObserver);\r\n        }\r\n\r\n        if (this._onGraphScaledObserver) {\r\n            this.props.context.onGraphScaled.remove(this._onGraphScaledObserver);\r\n        }\r\n    }\r\n\r\n    private _getPixelValues(isRange: boolean): IPlayHeadPixelLocator {\r\n        let minFrame, maxFrame, width, offset, scale;\r\n        if (isRange) {\r\n            minFrame = this.props.context.fromKey;\r\n            maxFrame = this.props.context.toKey;\r\n            width = this._viewWidth;\r\n            offset = this._offsetRange;\r\n            scale = 1;\r\n        } else {\r\n            minFrame = this.props.context.referenceMinFrame;\r\n            maxFrame = this.props.context.referenceMaxFrame;\r\n            width = this._graphAbsoluteWidth;\r\n            offset = this._offsetX;\r\n            scale = this._viewScale;\r\n        }\r\n        return { minFrame, maxFrame, width, offset, scale };\r\n    }\r\n\r\n    private _onPointerDown(evt: React.PointerEvent<HTMLDivElement>, isRange: boolean) {\r\n        evt.preventDefault();\r\n\r\n        this._pointerIsDown = true;\r\n        evt.currentTarget.setPointerCapture(evt.pointerId);\r\n\r\n        const locator = this._getPixelValues(isRange);\r\n        const frame = this._pixelToFrame(evt.nativeEvent.offsetX, locator);\r\n        this.props.context.moveToFrame(frame);\r\n\r\n        this._moveHead(frame);\r\n    }\r\n\r\n    private _onPointerMove(evt: React.PointerEvent<HTMLDivElement>, isRange: boolean) {\r\n        if (!this._pointerIsDown) {\r\n            return;\r\n        }\r\n\r\n        const locator = this._getPixelValues(isRange);\r\n        const frame = this._pixelToFrame(evt.nativeEvent.offsetX, locator);\r\n        this.props.context.moveToFrame(frame);\r\n\r\n        this._moveHead(frame);\r\n    }\r\n\r\n    private _onPointerUp(evt: React.PointerEvent<HTMLDivElement>) {\r\n        this._pointerIsDown = false;\r\n        evt.currentTarget.releasePointerCapture(evt.pointerId);\r\n    }\r\n\r\n    public override render() {\r\n        if (this.props.context.activeAnimations.length === 0) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div id=\"play-head\" ref={this._playHead}>\r\n                    <div id=\"play-head-bar\"></div>\r\n                    <div id=\"play-head-circle\" ref={this._playHeadCircle} />\r\n                </div>\r\n                <div\r\n                    id=\"play-head-control\"\r\n                    onPointerDown={(evt) => this._onPointerDown(evt, false)}\r\n                    onPointerMove={(evt) => this._onPointerMove(evt, false)}\r\n                    onPointerUp={(evt) => this._onPointerUp(evt)}\r\n                ></div>\r\n                <div\r\n                    id=\"play-head-control-2\"\r\n                    onPointerDown={(evt) => this._onPointerDown(evt, true)}\r\n                    onPointerMove={(evt) => this._onPointerMove(evt, true)}\r\n                    onPointerUp={(evt) => this._onPointerUp(evt)}\r\n                ></div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n"]}