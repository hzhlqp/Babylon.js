{"version":3,"file":"directionalLightPropertyGridComponent.js","sourceRoot":"","sources":["../../../../../../src/components/actionTabs/tabs/propertyGrids/lights/directionalLightPropertyGridComponent.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport type { Observable } from \"core/Misc/observable\";\r\nimport type { DirectionalLight } from \"core/Lights/directionalLight\";\r\nimport type { PropertyChangedEvent } from \"../../../../propertyChangedEvent\";\r\nimport { CommonLightPropertyGridComponent } from \"./commonLightPropertyGridComponent\";\r\nimport { LineContainerComponent } from \"shared-ui-components/lines/lineContainerComponent\";\r\nimport { Color3LineComponent } from \"shared-ui-components/lines/color3LineComponent\";\r\nimport { Vector3LineComponent } from \"shared-ui-components/lines/vector3LineComponent\";\r\nimport { CommonShadowLightPropertyGridComponent } from \"./commonShadowLightPropertyGridComponent\";\r\nimport type { LockObject } from \"shared-ui-components/tabs/propertyGrids/lockObject\";\r\nimport type { GlobalState } from \"../../../../globalState\";\r\nimport { CheckBoxLineComponent } from \"shared-ui-components/lines/checkBoxLineComponent\";\r\nimport type { ShadowGenerator } from \"core/Lights/Shadows/shadowGenerator\";\r\nimport { CascadedShadowGenerator } from \"core/Lights/Shadows/cascadedShadowGenerator\";\r\nimport { DirectionalLightFrustumViewer } from \"core/Debug/directionalLightFrustumViewer\";\r\n\r\ninterface IDirectionalLightPropertyGridComponentProps {\r\n    globalState: GlobalState;\r\n    light: DirectionalLight;\r\n    lockObject: LockObject;\r\n    onPropertyChangedObservable?: Observable<PropertyChangedEvent>;\r\n}\r\n\r\nexport class DirectionalLightPropertyGridComponent extends React.Component<IDirectionalLightPropertyGridComponentProps> {\r\n    constructor(props: IDirectionalLightPropertyGridComponentProps) {\r\n        super(props);\r\n    }\r\n\r\n    displayFrustum() {\r\n        const light = this.props.light;\r\n        const camera = light.getScene().activeCamera;\r\n\r\n        const displayFrustum = ((light as any)._displayFrustum = !(light as any)._displayFrustum);\r\n\r\n        if ((light as any)._displayFrustumObservable) {\r\n            light.getScene().onAfterRenderObservable.remove((light as any)._displayFrustumObservable);\r\n            (light as any)._displayFrustumDLH.dispose();\r\n        }\r\n\r\n        if (displayFrustum && camera) {\r\n            const dlh = ((light as any)._displayFrustumDLH = new DirectionalLightFrustumViewer(light, camera));\r\n            (light as any)._displayFrustumObservable = light.getScene().onAfterRenderObservable.add(() => {\r\n                dlh.update();\r\n            });\r\n        }\r\n    }\r\n\r\n    override render() {\r\n        const light = this.props.light;\r\n\r\n        const generator = (light.getShadowGenerator() as ShadowGenerator | CascadedShadowGenerator) || null;\r\n\r\n        const hideAutoCalcShadowZBounds = generator instanceof CascadedShadowGenerator;\r\n        const displayFrustum = (light as any)._displayFrustum ?? false;\r\n\r\n        return (\r\n            <>\r\n                <CommonLightPropertyGridComponent\r\n                    globalState={this.props.globalState}\r\n                    lockObject={this.props.lockObject}\r\n                    light={light}\r\n                    onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                />\r\n                <LineContainerComponent title=\"SETUP\" selection={this.props.globalState}>\r\n                    <Color3LineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Diffuse\"\r\n                        target={light}\r\n                        propertyName=\"diffuse\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <Color3LineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Specular\"\r\n                        target={light}\r\n                        propertyName=\"specular\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <Vector3LineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Position\"\r\n                        target={light}\r\n                        propertyName=\"position\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <Vector3LineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Direction\"\r\n                        target={light}\r\n                        propertyName=\"direction\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    {!hideAutoCalcShadowZBounds && (\r\n                        <CheckBoxLineComponent\r\n                            label=\"Auto Calc Shadow ZBounds\"\r\n                            target={light}\r\n                            propertyName=\"autoCalcShadowZBounds\"\r\n                            onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        />\r\n                    )}\r\n                </LineContainerComponent>\r\n                <CommonShadowLightPropertyGridComponent\r\n                    globalState={this.props.globalState}\r\n                    lockObject={this.props.lockObject}\r\n                    light={light}\r\n                    onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                />\r\n                <LineContainerComponent title=\"DEBUG\" closed={true} selection={this.props.globalState}>\r\n                    <CheckBoxLineComponent label=\"Display frustum\" isSelected={() => displayFrustum} onSelect={() => this.displayFrustum()} />\r\n                </LineContainerComponent>\r\n            </>\r\n        );\r\n    }\r\n}\r\n"]}