{"version":3,"file":"channelsBar.js","sourceRoot":"","sources":["../../../../../../../src/components/actionTabs/tabs/propertyGrids/materials/textures/channelsBar.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAe/B,OAAO,OAAO,MAAM,sBAAsB,CAAC;AAC3C,OAAO,SAAS,MAAM,wBAAwB,CAAC;AAE/C,MAAM,OAAO,WAAY,SAAQ,KAAK,CAAC,aAAgC;IAC1D,MAAM;QACX,OAAO,CACH,cAAK,EAAE,EAAC,cAAc,YACjB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE;gBACxC,MAAM,MAAM,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC;gBACjD,MAAM,OAAO,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC;gBACrD,OAAO,CACH,eAAwB,SAAS,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,oBAAoB,aAClF,cACI,SAAS,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,iCAAiC,CAAC,CAAC,CAAC,yBAAyB,EAC1F,OAAO,EAAE,GAAG,EAAE;gCACV,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;gCACxC,WAAW,CAAC,KAAK,CAAC,CAAC,OAAO,GAAG,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC;gCACzD,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;4BACxC,CAAC,EACD,GAAG,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,EAC1C,KAAK,EAAE,GAAG,MAAM,IAAI,OAAO,CAAC,IAAI,EAAE,GACpC,EACF,cACI,SAAS,EAAC,mBAAmB,EAC7B,OAAO,EAAE,GAAG,EAAE;gCACV,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;gCACxC,WAAW,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC;gCAC3D,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;4BACxC,CAAC,EACD,GAAG,EAAE,OAAO,CAAC,IAAI,EACjB,KAAK,EAAE,GAAG,OAAO,IAAI,OAAO,CAAC,IAAI,EAAE,GACrC,KApBI,OAAO,CAAC,IAAI,CAqBhB,CACT,CAAC;YACN,CAAC,CAAC,GACA,CACT,CAAC;IACN,CAAC;CACJ","sourcesContent":["import * as React from \"react\";\r\n\r\nexport interface IChannel {\r\n    visible: boolean;\r\n    editable: boolean;\r\n    name: string;\r\n    id: \"R\" | \"G\" | \"B\" | \"A\";\r\n    icon: any;\r\n}\r\n\r\ninterface IChannelsBarProps {\r\n    channels: IChannel[];\r\n    setChannels(channelState: IChannel[]): void;\r\n}\r\n\r\nimport eyeOpen from \"./assets/eyeOpen.svg\";\r\nimport eyeClosed from \"./assets/eyeClosed.svg\";\r\n\r\nexport class ChannelsBar extends React.PureComponent<IChannelsBarProps> {\r\n    override render() {\r\n        return (\r\n            <div id=\"channels-bar\">\r\n                {this.props.channels.map((channel, index) => {\r\n                    const visTip = channel.visible ? \"Hide\" : \"Show\";\r\n                    const editTip = channel.editable ? \"Lock\" : \"Unlock\";\r\n                    return (\r\n                        <div key={channel.name} className={channel.editable ? \"channel\" : \"channel uneditable\"}>\r\n                            <img\r\n                                className={channel.visible ? \"icon channel-visibility visible\" : \"icon channel-visibility\"}\r\n                                onClick={() => {\r\n                                    const newChannels = this.props.channels;\r\n                                    newChannels[index].visible = !newChannels[index].visible;\r\n                                    this.props.setChannels(newChannels);\r\n                                }}\r\n                                src={channel.visible ? eyeOpen : eyeClosed}\r\n                                title={`${visTip} ${channel.name}`}\r\n                            />\r\n                            <img\r\n                                className=\"icon channel-name\"\r\n                                onClick={() => {\r\n                                    const newChannels = this.props.channels;\r\n                                    newChannels[index].editable = !newChannels[index].editable;\r\n                                    this.props.setChannels(newChannels);\r\n                                }}\r\n                                src={channel.icon}\r\n                                title={`${editTip} ${channel.name}`}\r\n                            />\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]}