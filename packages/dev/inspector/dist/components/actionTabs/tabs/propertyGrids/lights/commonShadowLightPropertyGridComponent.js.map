{"version":3,"file":"commonShadowLightPropertyGridComponent.js","sourceRoot":"","sources":["../../../../../../src/components/actionTabs/tabs/propertyGrids/lights/commonShadowLightPropertyGridComponent.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport type { Observable } from \"core/Misc/observable\";\r\nimport type { IShadowLight } from \"core/Lights/shadowLight\";\r\nimport type { PropertyChangedEvent } from \"../../../../propertyChangedEvent\";\r\nimport { LineContainerComponent } from \"shared-ui-components/lines/lineContainerComponent\";\r\nimport { CheckBoxLineComponent } from \"shared-ui-components/lines/checkBoxLineComponent\";\r\nimport { FloatLineComponent } from \"shared-ui-components/lines/floatLineComponent\";\r\nimport type { LockObject } from \"shared-ui-components/tabs/propertyGrids/lockObject\";\r\nimport type { GlobalState } from \"../../../../globalState\";\r\nimport { OptionsLine } from \"shared-ui-components/lines/optionsLineComponent\";\r\nimport { ShadowGenerator } from \"core/Lights/Shadows/shadowGenerator\";\r\nimport { CascadedShadowGenerator } from \"core/Lights/Shadows/cascadedShadowGenerator\";\r\nimport { SliderLineComponent } from \"shared-ui-components/lines/sliderLineComponent\";\r\nimport { ButtonLineComponent } from \"shared-ui-components/lines/buttonLineComponent\";\r\nimport { DirectionalLight } from \"core/Lights/directionalLight\";\r\n\r\ninterface ICommonShadowLightPropertyGridComponentProps {\r\n    globalState: GlobalState;\r\n    light: IShadowLight;\r\n    lockObject: LockObject;\r\n    onPropertyChangedObservable?: Observable<PropertyChangedEvent>;\r\n}\r\n\r\nexport class CommonShadowLightPropertyGridComponent extends React.Component<ICommonShadowLightPropertyGridComponentProps> {\r\n    private _internals: { generatorType: number; mapSize: number };\r\n\r\n    constructor(props: ICommonShadowLightPropertyGridComponentProps) {\r\n        super(props);\r\n\r\n        this._internals = {\r\n            generatorType: 0,\r\n            mapSize: 1024,\r\n        };\r\n    }\r\n\r\n    createShadowGenerator() {\r\n        const light = this.props.light;\r\n        const scene = light.getScene();\r\n        const internals = this._internals;\r\n        const generator = internals.generatorType === 0 ? new ShadowGenerator(internals.mapSize, light) : new CascadedShadowGenerator(internals.mapSize, light as DirectionalLight);\r\n\r\n        scene.meshes.forEach((m) => {\r\n            if (m.infiniteDistance) {\r\n                return;\r\n            }\r\n            generator.addShadowCaster(m);\r\n            if (!m.isAnInstance) {\r\n                m.receiveShadows = true;\r\n            }\r\n        });\r\n\r\n        this.forceUpdate();\r\n    }\r\n\r\n    disposeShadowGenerator() {\r\n        const light = this.props.light;\r\n\r\n        light.getShadowGenerator()?.dispose();\r\n\r\n        this.forceUpdate();\r\n    }\r\n\r\n    override render() {\r\n        const light = this.props.light;\r\n        const internals = this._internals;\r\n        const generator = (light.getShadowGenerator() as ShadowGenerator | CascadedShadowGenerator) || null;\r\n        const csmGenerator = generator instanceof CascadedShadowGenerator;\r\n        const camera = light.getScene().activeCamera;\r\n\r\n        const typeGeneratorOptions = [{ label: \"Shadow Generator\", value: 0 }];\r\n\r\n        if (light instanceof DirectionalLight) {\r\n            typeGeneratorOptions.push({ label: \"Cascaded Shadow Generator\", value: 1 });\r\n        }\r\n\r\n        const mapSizeOptions = [\r\n            { label: \"4096x4096\", value: 4096 },\r\n            { label: \"2048x2048\", value: 2048 },\r\n            { label: \"1024x1024\", value: 1024 },\r\n            { label: \"512x512\", value: 512 },\r\n            { label: \"256x256\", value: 256 },\r\n        ];\r\n\r\n        let blurModeOptions;\r\n\r\n        if (generator instanceof CascadedShadowGenerator) {\r\n            blurModeOptions = [\r\n                { label: \"None\", value: ShadowGenerator.FILTER_NONE },\r\n                { label: \"PCF\", value: ShadowGenerator.FILTER_PCF },\r\n                { label: \"PCSS\", value: ShadowGenerator.FILTER_PCSS },\r\n            ];\r\n        } else {\r\n            blurModeOptions = [\r\n                { label: \"None\", value: ShadowGenerator.FILTER_NONE },\r\n                { label: \"PCF\", value: ShadowGenerator.FILTER_PCF },\r\n                { label: \"PCSS\", value: ShadowGenerator.FILTER_PCSS },\r\n                { label: \"Poisson\", value: ShadowGenerator.FILTER_POISSONSAMPLING },\r\n                { label: \"Exponential\", value: ShadowGenerator.FILTER_EXPONENTIALSHADOWMAP },\r\n                { label: \"Blurred exponential\", value: ShadowGenerator.FILTER_BLUREXPONENTIALSHADOWMAP },\r\n                { label: \"Close exponential\", value: ShadowGenerator.FILTER_CLOSEEXPONENTIALSHADOWMAP },\r\n                { label: \"Blurred close exponential\", value: ShadowGenerator.FILTER_BLURCLOSEEXPONENTIALSHADOWMAP },\r\n            ];\r\n        }\r\n\r\n        const filteringQualityOptions = [\r\n            { label: \"Low\", value: ShadowGenerator.QUALITY_LOW },\r\n            { label: \"Medium\", value: ShadowGenerator.QUALITY_MEDIUM },\r\n            { label: \"High\", value: ShadowGenerator.QUALITY_HIGH },\r\n        ];\r\n\r\n        const numCascadesOptions = [\r\n            { label: \"2\", value: 2 },\r\n            { label: \"3\", value: 3 },\r\n            { label: \"4\", value: 4 },\r\n        ];\r\n\r\n        const near = camera ? camera.minZ : 0,\r\n            far = camera ? (camera.maxZ ? camera.maxZ : 500000) : 0;\r\n\r\n        const filter = generator ? generator.filter : 0;\r\n\r\n        return (\r\n            <div>\r\n                <LineContainerComponent title=\"SHADOWS\" selection={this.props.globalState}>\r\n                    <CheckBoxLineComponent\r\n                        label=\"Shadows enabled\"\r\n                        target={light}\r\n                        propertyName=\"shadowEnabled\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    {!csmGenerator && (\r\n                        <>\r\n                            <FloatLineComponent\r\n                                lockObject={this.props.lockObject}\r\n                                label=\"Shadows near plane\"\r\n                                target={light}\r\n                                propertyName=\"shadowMinZ\"\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            />\r\n                            <FloatLineComponent\r\n                                lockObject={this.props.lockObject}\r\n                                label=\"Shadows far plane\"\r\n                                target={light}\r\n                                propertyName=\"shadowMaxZ\"\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            />\r\n                        </>\r\n                    )}\r\n                </LineContainerComponent>\r\n                {generator == null && (\r\n                    <LineContainerComponent title=\"SHADOW GENERATOR\" selection={this.props.globalState}>\r\n                        <OptionsLine label=\"Type\" options={typeGeneratorOptions} target={internals} propertyName=\"generatorType\" />\r\n                        <OptionsLine label=\"Map size\" options={mapSizeOptions} target={internals} propertyName=\"mapSize\" />\r\n                        <ButtonLineComponent label=\"Create generator\" onClick={() => this.createShadowGenerator()} />\r\n                    </LineContainerComponent>\r\n                )}\r\n                {generator !== null && (\r\n                    <LineContainerComponent title=\"SHADOW GENERATOR\" selection={this.props.globalState}>\r\n                        <ButtonLineComponent label=\"Dispose generator\" onClick={() => this.disposeShadowGenerator()} />\r\n                        {csmGenerator && (\r\n                            <>\r\n                                <OptionsLine\r\n                                    label=\"Num cascades\"\r\n                                    options={numCascadesOptions}\r\n                                    target={generator}\r\n                                    propertyName=\"numCascades\"\r\n                                    onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                                />\r\n                                <CheckBoxLineComponent\r\n                                    label=\"Debug mode\"\r\n                                    target={generator}\r\n                                    propertyName=\"debug\"\r\n                                    onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                                />\r\n                                <CheckBoxLineComponent\r\n                                    label=\"Stabilize cascades\"\r\n                                    target={generator}\r\n                                    propertyName=\"stabilizeCascades\"\r\n                                    onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                                />\r\n                                <SliderLineComponent\r\n                                    lockObject={this.props.lockObject}\r\n                                    label=\"Lambda\"\r\n                                    minimum={0}\r\n                                    maximum={1.0}\r\n                                    step={0.01}\r\n                                    target={generator}\r\n                                    propertyName=\"lambda\"\r\n                                    onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                                />\r\n                                <SliderLineComponent\r\n                                    lockObject={this.props.lockObject}\r\n                                    label=\"Cascade blend\"\r\n                                    minimum={0}\r\n                                    maximum={1.0}\r\n                                    step={0.01}\r\n                                    target={generator}\r\n                                    propertyName=\"cascadeBlendPercentage\"\r\n                                    onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                                />\r\n                                <CheckBoxLineComponent\r\n                                    label=\"Depth clamp\"\r\n                                    target={generator}\r\n                                    propertyName=\"depthClamp\"\r\n                                    onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                                />\r\n                                <CheckBoxLineComponent\r\n                                    label=\"Auto-Calc depth bounds\"\r\n                                    target={generator}\r\n                                    propertyName=\"autoCalcDepthBounds\"\r\n                                    onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                                />\r\n                                <SliderLineComponent\r\n                                    lockObject={this.props.lockObject}\r\n                                    label=\"Shadow MaxZ\"\r\n                                    minimum={near}\r\n                                    maximum={far}\r\n                                    step={0.5}\r\n                                    target={generator}\r\n                                    propertyName=\"shadowMaxZ\"\r\n                                    onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                                />\r\n                            </>\r\n                        )}\r\n                        <FloatLineComponent\r\n                            lockObject={this.props.lockObject}\r\n                            digits={4}\r\n                            step=\"0.0001\"\r\n                            label=\"Bias\"\r\n                            target={generator}\r\n                            propertyName=\"bias\"\r\n                            onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        />\r\n                        <FloatLineComponent\r\n                            lockObject={this.props.lockObject}\r\n                            label=\"Normal bias\"\r\n                            target={generator}\r\n                            propertyName=\"normalBias\"\r\n                            onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        />\r\n                        <SliderLineComponent\r\n                            lockObject={this.props.lockObject}\r\n                            label=\"Darkness\"\r\n                            target={generator}\r\n                            minimum={0}\r\n                            maximum={1}\r\n                            step={0.01}\r\n                            propertyName=\"darkness\"\r\n                            onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        />\r\n                        <CheckBoxLineComponent\r\n                            label=\"Allow transparent shadows\"\r\n                            target={generator}\r\n                            propertyName=\"transparencyShadow\"\r\n                            onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        />\r\n                        <OptionsLine\r\n                            label=\"Filter\"\r\n                            options={blurModeOptions}\r\n                            onSelect={() => {\r\n                                this.forceUpdate();\r\n                            }}\r\n                            target={generator}\r\n                            propertyName=\"filter\"\r\n                            onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        />\r\n                        {(filter === ShadowGenerator.FILTER_PCF || filter === ShadowGenerator.FILTER_PCSS) && (\r\n                            <OptionsLine\r\n                                label=\"Filtering quality\"\r\n                                options={filteringQualityOptions}\r\n                                onSelect={() => {\r\n                                    this.forceUpdate();\r\n                                }}\r\n                                target={generator}\r\n                                propertyName=\"filteringQuality\"\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            />\r\n                        )}\r\n                        {filter === ShadowGenerator.FILTER_PCSS && (\r\n                            <SliderLineComponent\r\n                                lockObject={this.props.lockObject}\r\n                                label=\"Penumbra ratio\"\r\n                                minimum={0}\r\n                                maximum={0.5}\r\n                                step={0.001}\r\n                                target={generator}\r\n                                propertyName=\"contactHardeningLightSizeUVRatio\"\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            />\r\n                        )}\r\n                        {!csmGenerator && (filter === ShadowGenerator.FILTER_BLUREXPONENTIALSHADOWMAP || filter === ShadowGenerator.FILTER_BLURCLOSEEXPONENTIALSHADOWMAP) && (\r\n                            <CheckBoxLineComponent\r\n                                label=\"Use kernel blur\"\r\n                                target={generator}\r\n                                propertyName=\"useKernelBlur\"\r\n                                onValueChanged={() => this.forceUpdate()}\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            />\r\n                        )}\r\n                        {generator instanceof ShadowGenerator &&\r\n                            (filter === ShadowGenerator.FILTER_BLUREXPONENTIALSHADOWMAP || filter === ShadowGenerator.FILTER_BLURCLOSEEXPONENTIALSHADOWMAP) &&\r\n                            !generator.useKernelBlur && (\r\n                                <SliderLineComponent\r\n                                    lockObject={this.props.lockObject}\r\n                                    label=\"Blur box offset\"\r\n                                    target={generator}\r\n                                    propertyName=\"blurBoxOffset\"\r\n                                    minimum={1}\r\n                                    maximum={64}\r\n                                    step={1}\r\n                                    onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                                />\r\n                            )}\r\n                        {generator instanceof ShadowGenerator &&\r\n                            (filter === ShadowGenerator.FILTER_BLUREXPONENTIALSHADOWMAP || filter === ShadowGenerator.FILTER_BLURCLOSEEXPONENTIALSHADOWMAP) &&\r\n                            generator.useKernelBlur && (\r\n                                <SliderLineComponent\r\n                                    lockObject={this.props.lockObject}\r\n                                    label=\"Blur kernel\"\r\n                                    target={generator}\r\n                                    propertyName=\"blurKernel\"\r\n                                    minimum={1}\r\n                                    maximum={64}\r\n                                    step={1}\r\n                                    onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                                />\r\n                            )}\r\n                        {generator instanceof ShadowGenerator &&\r\n                            (filter === ShadowGenerator.FILTER_BLUREXPONENTIALSHADOWMAP || filter === ShadowGenerator.FILTER_EXPONENTIALSHADOWMAP) && (\r\n                                <FloatLineComponent\r\n                                    lockObject={this.props.lockObject}\r\n                                    label=\"Depth scale\"\r\n                                    target={generator}\r\n                                    propertyName=\"depthScale\"\r\n                                    onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                                />\r\n                            )}\r\n                        {generator instanceof ShadowGenerator &&\r\n                            (filter === ShadowGenerator.FILTER_BLUREXPONENTIALSHADOWMAP || filter === ShadowGenerator.FILTER_EXPONENTIALSHADOWMAP) && (\r\n                                <SliderLineComponent\r\n                                    lockObject={this.props.lockObject}\r\n                                    label=\"Blur scale\"\r\n                                    target={generator}\r\n                                    propertyName=\"blurScale\"\r\n                                    minimum={1}\r\n                                    maximum={4}\r\n                                    step={1}\r\n                                    onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                                />\r\n                            )}\r\n                        {csmGenerator && filter === ShadowGenerator.FILTER_PCSS && (\r\n                            <SliderLineComponent\r\n                                lockObject={this.props.lockObject}\r\n                                label=\"Penumbra darkness\"\r\n                                minimum={0}\r\n                                maximum={1.0}\r\n                                step={0.01}\r\n                                target={generator}\r\n                                propertyName=\"penumbraDarkness\"\r\n                                onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                            />\r\n                        )}\r\n                    </LineContainerComponent>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]}