import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import * as React from "react";
import { CommonRenderingPipelinePropertyGridComponent } from "./commonRenderingPipelinePropertyGridComponent";
import { SliderLineComponent } from "shared-ui-components/lines/sliderLineComponent";
import { LineContainerComponent } from "shared-ui-components/lines/lineContainerComponent";
import { CheckBoxLineComponent } from "shared-ui-components/lines/checkBoxLineComponent";
export class SSAO2RenderingPipelinePropertyGridComponent extends React.Component {
    constructor(props) {
        super(props);
    }
    render() {
        const renderPipeline = this.props.renderPipeline;
        const camera = renderPipeline.scene.activeCamera;
        return (_jsxs(_Fragment, { children: [_jsx(CommonRenderingPipelinePropertyGridComponent, { globalState: this.props.globalState, lockObject: this.props.lockObject, renderPipeline: renderPipeline, onPropertyChangedObservable: this.props.onPropertyChangedObservable }), _jsxs(LineContainerComponent, { title: "SSAO", selection: this.props.globalState, children: [_jsx(SliderLineComponent, { lockObject: this.props.lockObject, label: "Strength", minimum: 0, maximum: 2, step: 0.05, target: renderPipeline, propertyName: "totalStrength", onPropertyChangedObservable: this.props.onPropertyChangedObservable }), _jsx(SliderLineComponent, { lockObject: this.props.lockObject, label: "Base", minimum: 0, maximum: 1, step: 0.05, target: renderPipeline, propertyName: "base", onPropertyChangedObservable: this.props.onPropertyChangedObservable }), _jsx(SliderLineComponent, { lockObject: this.props.lockObject, label: "Max Z", minimum: 0, maximum: camera.maxZ, step: 1, target: renderPipeline, propertyName: "maxZ", onPropertyChangedObservable: this.props.onPropertyChangedObservable }), _jsx(SliderLineComponent, { lockObject: this.props.lockObject, label: "Min Z aspect", minimum: 0, maximum: 0.5, step: 0.01, target: renderPipeline, propertyName: "minZAspect", onPropertyChangedObservable: this.props.onPropertyChangedObservable }), _jsx(SliderLineComponent, { lockObject: this.props.lockObject, label: "Radius", minimum: 0, maximum: 10, step: 0.05, target: renderPipeline, propertyName: "radius", onPropertyChangedObservable: this.props.onPropertyChangedObservable }), _jsx(SliderLineComponent, { lockObject: this.props.lockObject, label: "Epsilon", minimum: 0, maximum: 1, step: 0.001, target: renderPipeline, propertyName: "epsilon", onPropertyChangedObservable: this.props.onPropertyChangedObservable })] }), _jsxs(LineContainerComponent, { title: "Denoiser", children: [_jsx(CheckBoxLineComponent, { label: "Bypass Blur", propertyName: "bypassBlur", onPropertyChangedObservable: this.props.onPropertyChangedObservable, target: renderPipeline }), _jsx(CheckBoxLineComponent, { label: "Expensive Blur", propertyName: "expensiveBlur", onPropertyChangedObservable: this.props.onPropertyChangedObservable, target: renderPipeline }), _jsx(SliderLineComponent, { lockObject: this.props.lockObject, label: "Samples", minimum: 2, maximum: 32, step: 1, target: renderPipeline, propertyName: "bilateralSamples", onPropertyChangedObservable: this.props.onPropertyChangedObservable }), _jsx(SliderLineComponent, { lockObject: this.props.lockObject, label: "Soften", minimum: 0, maximum: 1, step: 0.01, target: renderPipeline, propertyName: "bilateralSoften", onPropertyChangedObservable: this.props.onPropertyChangedObservable }), _jsx(SliderLineComponent, { lockObject: this.props.lockObject, label: "Tolerance", minimum: 0, maximum: 1, step: 0.01, target: renderPipeline, propertyName: "bilateralTolerance", onPropertyChangedObservable: this.props.onPropertyChangedObservable })] })] }));
    }
}
//# sourceMappingURL=ssao2RenderingPipelinePropertyGridComponent.js.map