{"version":3,"file":"scenePropertyGridComponent.js","sourceRoot":"","sources":["../../../../../src/components/actionTabs/tabs/propertyGrids/scenePropertyGridComponent.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\n\r\nimport type { Nullable } from \"core/types\";\r\nimport { Observable } from \"core/Misc/observable\";\r\nimport { Tools } from \"core/Misc/tools\";\r\nimport type { Vector3 } from \"core/Maths/math.vector\";\r\nimport type { BaseTexture } from \"core/Materials/Textures/baseTexture\";\r\nimport { CubeTexture } from \"core/Materials/Textures/cubeTexture\";\r\nimport { ImageProcessingConfiguration } from \"core/Materials/imageProcessingConfiguration\";\r\nimport type { Scene } from \"core/scene\";\r\n\r\nimport type { PropertyChangedEvent } from \"../../../propertyChangedEvent\";\r\nimport { LineContainerComponent } from \"shared-ui-components/lines/lineContainerComponent\";\r\nimport { RadioButtonLineComponent } from \"shared-ui-components/lines/radioLineComponent\";\r\nimport { Color3LineComponent } from \"shared-ui-components/lines/color3LineComponent\";\r\nimport { CheckBoxLineComponent } from \"shared-ui-components/lines/checkBoxLineComponent\";\r\nimport { FogPropertyGridComponent } from \"./fogPropertyGridComponent\";\r\nimport { FileButtonLine } from \"shared-ui-components/lines/fileButtonLineComponent\";\r\nimport { TextureLinkLineComponent } from \"../../lines/textureLinkLineComponent\";\r\nimport { Vector3LineComponent } from \"shared-ui-components/lines/vector3LineComponent\";\r\nimport { FloatLineComponent } from \"shared-ui-components/lines/floatLineComponent\";\r\nimport { SliderLineComponent } from \"shared-ui-components/lines/sliderLineComponent\";\r\nimport { OptionsLine } from \"shared-ui-components/lines/optionsLineComponent\";\r\nimport type { LockObject } from \"shared-ui-components/tabs/propertyGrids/lockObject\";\r\nimport type { GlobalState } from \"../../../globalState\";\r\nimport { ButtonLineComponent } from \"shared-ui-components/lines/buttonLineComponent\";\r\nimport { AnimationGridComponent } from \"./animations/animationPropertyGridComponent\";\r\n\r\nimport \"core/Physics/physicsEngineComponent\";\r\nimport \"core/Physics/v1/physicsEngineComponent\";\r\nimport \"core/Physics/v1/physicsEngineComponent\";\r\nimport { Logger } from \"core/Misc/logger\";\r\n\r\ninterface IScenePropertyGridComponentProps {\r\n    globalState: GlobalState;\r\n    scene: Scene;\r\n    lockObject: LockObject;\r\n    onPropertyChangedObservable?: Observable<PropertyChangedEvent>;\r\n    onSelectionChangedObservable?: Observable<any>;\r\n}\r\n\r\nexport class ScenePropertyGridComponent extends React.Component<IScenePropertyGridComponentProps> {\r\n    private _storedEnvironmentTexture: Nullable<BaseTexture>;\r\n    private _renderingModeGroupObservable = new Observable<RadioButtonLineComponent>();\r\n\r\n    constructor(props: IScenePropertyGridComponentProps) {\r\n        super(props);\r\n    }\r\n\r\n    setRenderingModes(point: boolean, wireframe: boolean) {\r\n        const scene = this.props.scene;\r\n        scene.forcePointsCloud = point;\r\n        scene.forceWireframe = wireframe;\r\n    }\r\n\r\n    switchIBL() {\r\n        const scene = this.props.scene;\r\n\r\n        if (scene.environmentTexture) {\r\n            this._storedEnvironmentTexture = scene.environmentTexture;\r\n            scene.environmentTexture = null;\r\n        } else {\r\n            scene.environmentTexture = this._storedEnvironmentTexture;\r\n            this._storedEnvironmentTexture = null;\r\n        }\r\n    }\r\n\r\n    updateEnvironmentTexture(file: File) {\r\n        const isFileDDS = file.name.toLowerCase().indexOf(\".dds\") > 0;\r\n        const isFileEnv = file.name.toLowerCase().indexOf(\".env\") > 0;\r\n        if (!isFileDDS && !isFileEnv) {\r\n            Logger.Error(\"Unable to update environment texture. Please select a dds or env file.\");\r\n            return;\r\n        }\r\n\r\n        const scene = this.props.scene;\r\n        Tools.ReadFile(\r\n            file,\r\n            (data) => {\r\n                const blob = new Blob([data], { type: \"octet/stream\" });\r\n                const url = URL.createObjectURL(blob);\r\n                if (isFileDDS) {\r\n                    scene.environmentTexture = CubeTexture.CreateFromPrefilteredData(url, scene, \".dds\");\r\n                } else {\r\n                    scene.environmentTexture = new CubeTexture(\r\n                        url,\r\n                        scene,\r\n                        undefined,\r\n                        undefined,\r\n                        undefined,\r\n                        () => {},\r\n                        (message) => {\r\n                            if (message) {\r\n                                Logger.Error(message);\r\n                            }\r\n                        },\r\n                        undefined,\r\n                        undefined,\r\n                        \".env\"\r\n                    );\r\n                }\r\n            },\r\n            undefined,\r\n            true\r\n        );\r\n    }\r\n\r\n    updateGravity(newValue: Vector3) {\r\n        const scene = this.props.scene;\r\n        const physicsEngine = scene.getPhysicsEngine()!;\r\n\r\n        physicsEngine.setGravity(newValue);\r\n    }\r\n\r\n    updateTimeStep(newValue: number) {\r\n        const scene = this.props.scene;\r\n        const physicsEngine = scene.getPhysicsEngine()!;\r\n\r\n        physicsEngine.setTimeStep(newValue);\r\n    }\r\n\r\n    normalizeScene() {\r\n        const scene = this.props.scene;\r\n\r\n        scene.meshes.forEach((mesh) => {\r\n            mesh.normalizeToUnitCube(true);\r\n            mesh.computeWorldMatrix(true);\r\n        });\r\n    }\r\n\r\n    override render() {\r\n        const scene = this.props.scene;\r\n\r\n        const physicsEngine = scene.getPhysicsEngine();\r\n        let dummy: Nullable<{ gravity: Vector3; timeStep: number }> = null;\r\n\r\n        if (physicsEngine) {\r\n            dummy = {\r\n                gravity: physicsEngine.gravity,\r\n                timeStep: physicsEngine.getTimeStep(),\r\n            };\r\n        }\r\n\r\n        const imageProcessing = scene.imageProcessingConfiguration;\r\n\r\n        const toneMappingOptions = [\r\n            { label: \"Standard\", value: ImageProcessingConfiguration.TONEMAPPING_STANDARD },\r\n            { label: \"ACES\", value: ImageProcessingConfiguration.TONEMAPPING_ACES },\r\n            { label: \"Khronos PBR Neutral\", value: ImageProcessingConfiguration.TONEMAPPING_KHR_PBR_NEUTRAL },\r\n        ];\r\n\r\n        const vignetteModeOptions = [\r\n            { label: \"Multiply\", value: ImageProcessingConfiguration.VIGNETTEMODE_MULTIPLY },\r\n            { label: \"Opaque\", value: ImageProcessingConfiguration.VIGNETTEMODE_OPAQUE },\r\n        ];\r\n\r\n        return (\r\n            <>\r\n                <LineContainerComponent title=\"RENDERING MODE\" selection={this.props.globalState}>\r\n                    <RadioButtonLineComponent\r\n                        onSelectionChangedObservable={this._renderingModeGroupObservable}\r\n                        label=\"Point\"\r\n                        isSelected={() => scene.forcePointsCloud}\r\n                        onSelect={() => this.setRenderingModes(true, false)}\r\n                    />\r\n                    <RadioButtonLineComponent\r\n                        onSelectionChangedObservable={this._renderingModeGroupObservable}\r\n                        label=\"Wireframe\"\r\n                        isSelected={() => scene.forceWireframe}\r\n                        onSelect={() => this.setRenderingModes(false, true)}\r\n                    />\r\n                    <RadioButtonLineComponent\r\n                        onSelectionChangedObservable={this._renderingModeGroupObservable}\r\n                        label=\"Solid\"\r\n                        isSelected={() => !scene.forcePointsCloud && !scene.forceWireframe}\r\n                        onSelect={() => this.setRenderingModes(false, false)}\r\n                    />\r\n                </LineContainerComponent>\r\n                <LineContainerComponent title=\"ENVIRONMENT\" selection={this.props.globalState}>\r\n                    <Color3LineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Clear color\"\r\n                        target={scene}\r\n                        propertyName=\"clearColor\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <CheckBoxLineComponent\r\n                        label=\"Clear color enabled\"\r\n                        target={scene}\r\n                        propertyName=\"autoClear\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <Color3LineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Ambient color\"\r\n                        target={scene}\r\n                        propertyName=\"ambientColor\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <CheckBoxLineComponent label=\"Environment texture (IBL)\" isSelected={() => scene.environmentTexture != null} onSelect={() => this.switchIBL()} />\r\n                    {scene.environmentTexture && (\r\n                        <TextureLinkLineComponent label=\"Env. texture\" texture={scene.environmentTexture} onSelectionChangedObservable={this.props.onSelectionChangedObservable} />\r\n                    )}\r\n                    <FileButtonLine label=\"Update environment texture\" onClick={(file) => this.updateEnvironmentTexture(file)} accept=\".dds, .env\" />\r\n                    <SliderLineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        minimum={0}\r\n                        maximum={2}\r\n                        step={0.01}\r\n                        label=\"IBL Intensity\"\r\n                        target={scene}\r\n                        propertyName=\"environmentIntensity\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <FogPropertyGridComponent\r\n                        globalState={this.props.globalState}\r\n                        lockObject={this.props.lockObject}\r\n                        scene={scene}\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                </LineContainerComponent>\r\n                <AnimationGridComponent globalState={this.props.globalState} animatable={scene} scene={scene} lockObject={this.props.lockObject} />\r\n                <LineContainerComponent title=\"MATERIAL IMAGE PROCESSING\" selection={this.props.globalState}>\r\n                    <SliderLineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        minimum={0}\r\n                        maximum={4}\r\n                        step={0.1}\r\n                        label=\"Contrast\"\r\n                        target={imageProcessing}\r\n                        propertyName=\"contrast\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <SliderLineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        minimum={0}\r\n                        maximum={4}\r\n                        step={0.1}\r\n                        label=\"Exposure\"\r\n                        target={imageProcessing}\r\n                        propertyName=\"exposure\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <CheckBoxLineComponent\r\n                        label=\"Tone mapping\"\r\n                        target={imageProcessing}\r\n                        propertyName=\"toneMappingEnabled\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <OptionsLine\r\n                        label=\"Tone mapping type\"\r\n                        options={toneMappingOptions}\r\n                        target={imageProcessing}\r\n                        propertyName=\"toneMappingType\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        onSelect={(value) => this.setState({ mode: value })}\r\n                    />\r\n                    <CheckBoxLineComponent\r\n                        label=\"Vignette\"\r\n                        target={imageProcessing}\r\n                        propertyName=\"vignetteEnabled\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <SliderLineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        minimum={0}\r\n                        maximum={4}\r\n                        step={0.1}\r\n                        label=\"Vignette weight\"\r\n                        target={imageProcessing}\r\n                        propertyName=\"vignetteWeight\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <SliderLineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        minimum={0}\r\n                        maximum={1}\r\n                        step={0.1}\r\n                        label=\"Vignette stretch\"\r\n                        target={imageProcessing}\r\n                        propertyName=\"vignetteStretch\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <SliderLineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        minimum={0}\r\n                        maximum={Math.PI}\r\n                        step={0.1}\r\n                        label=\"Vignette FOV\"\r\n                        target={imageProcessing}\r\n                        propertyName=\"vignetteCameraFov\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <SliderLineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        minimum={0}\r\n                        maximum={1}\r\n                        step={0.1}\r\n                        label=\"Vignette center X\"\r\n                        target={imageProcessing}\r\n                        propertyName=\"vignetteCenterX\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <SliderLineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        minimum={0}\r\n                        maximum={1}\r\n                        step={0.1}\r\n                        label=\"Vignette center Y\"\r\n                        target={imageProcessing}\r\n                        propertyName=\"vignetteCenterY\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <Color3LineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Vignette color\"\r\n                        target={imageProcessing}\r\n                        propertyName=\"vignetteColor\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <OptionsLine\r\n                        label=\"Vignette blend mode\"\r\n                        options={vignetteModeOptions}\r\n                        target={imageProcessing}\r\n                        propertyName=\"vignetteBlendMode\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        onSelect={(value) => this.setState({ mode: value })}\r\n                    />\r\n                    <CheckBoxLineComponent\r\n                        label=\"Dithering\"\r\n                        target={imageProcessing}\r\n                        propertyName=\"ditheringEnabled\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    <SliderLineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        minimum={0}\r\n                        maximum={1}\r\n                        step={0.5 / 255.0}\r\n                        label=\"Dithering intensity\"\r\n                        target={imageProcessing}\r\n                        propertyName=\"ditheringIntensity\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                </LineContainerComponent>\r\n                {dummy !== null && (\r\n                    <LineContainerComponent title=\"PHYSICS\" closed={true} selection={this.props.globalState}>\r\n                        <FloatLineComponent\r\n                            lockObject={this.props.lockObject}\r\n                            label=\"Time step\"\r\n                            target={dummy}\r\n                            propertyName=\"timeStep\"\r\n                            onChange={(newValue) => this.updateTimeStep(newValue)}\r\n                            onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        />\r\n                        <Vector3LineComponent\r\n                            lockObject={this.props.lockObject}\r\n                            label=\"Gravity\"\r\n                            target={dummy}\r\n                            propertyName=\"gravity\"\r\n                            onChange={(newValue) => this.updateGravity(newValue)}\r\n                            onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        />\r\n                    </LineContainerComponent>\r\n                )}\r\n                <LineContainerComponent title=\"COLLISIONS\" closed={true} selection={this.props.globalState}>\r\n                    <Vector3LineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Gravity\"\r\n                        target={scene}\r\n                        propertyName=\"gravity\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                </LineContainerComponent>\r\n                <LineContainerComponent title=\"SHADOWS\" closed={true} selection={this.props.globalState}>\r\n                    <ButtonLineComponent label=\"Normalize scene\" onClick={() => this.normalizeScene()} />\r\n                </LineContainerComponent>\r\n            </>\r\n        );\r\n    }\r\n}\r\n"]}