{"version":3,"file":"animationCurveEditorComponent.js","sourceRoot":"","sources":["../../../../../../../src/components/actionTabs/tabs/propertyGrids/animations/curveEditor/animationCurveEditorComponent.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,mBAAmB,EAAE,MAAM,gDAAgD,CAAC;AAErF,OAAO,EAAE,cAAc,EAAE,MAAM,+BAA+B,CAAC;AAC/D,OAAO,EAAE,kBAAkB,EAAE,MAAM,gCAAgC,CAAC;AAEpE,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAC;AACpD,OAAO,EAAE,eAAe,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,gBAAgB,EAAE,MAAM,4BAA4B,CAAC;AAI9D,OAAO,yBAAyB,CAAC;AAWjC,MAAM,OAAO,6BAA8B,SAAQ,KAAK,CAAC,SAAmF;IACxI,YAAY,KAA0C;QAClD,KAAK,CAAC,KAAK,CAAC,CAAC;QAEb,IAAI,CAAC,KAAK,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;IACnC,CAAC;IAED,2BAA2B,CAAC,MAAqB;QAC7C,IAAI,MAAM,KAAK,IAAI,EAAE;YACjB,MAAM,CAAC,KAAK,EAAE,CAAC;SAClB;QACD,IAAI,CAAC,QAAQ,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;QACjC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,gBAAgB,GAAG,EAAE,CAAC;QACzC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,wBAAwB,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;IACpE,CAAC;IAEQ,qBAAqB,CAAC,QAA6C,EAAE,QAA6C;QACvH,IAAI,QAAQ,CAAC,MAAM,KAAK,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YACvC,IAAI,QAAQ,CAAC,MAAM,EAAE;gBACjB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;gBAC7B,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,EAAE;oBACvE,UAAU,CAAC,GAAG,EAAE;wBACZ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,CACpC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,mBAAmB;4BAClC,CAAC,CAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAW,CAAC,CAAC,CAAuB,CAAC,SAAS;4BACpE,CAAC,CAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAW,CAAC,CAAC,CAAe,CACzD,CAAC;wBACF,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,wBAAwB,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;oBACpE,CAAC,CAAC,CAAC;iBACN;aACJ;YAED,OAAO,IAAI,CAAC;SACf;QAED,OAAO,KAAK,CAAC;IACjB,CAAC;IACO,UAAU,CAAC,GAAkB;QACjC,QAAQ,GAAG,CAAC,GAAG,EAAE;YACb,KAAK,QAAQ,CAAC;YACd,KAAK,WAAW;gBACZ,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,eAAe,EAAE,MAAM,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,EAAE;oBAChF,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,0BAA0B,CAAC,eAAe,EAAE,CAAC;iBACnE;gBACD,MAAM;YACV,KAAK,GAAG;gBACJ,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,EAAE;oBAC9B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;iBAC7B;qBAAM;oBACH,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACjC;gBACD,MAAM;YACV,KAAK,GAAG;gBACJ,IAAI,GAAG,CAAC,OAAO,EAAE;oBACb,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC;oBACrD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,uBAAuB,CAAC,eAAe,EAAE,CAAC;oBAC7D,GAAG,CAAC,cAAc,EAAE,CAAC;iBACxB;gBACD,MAAM;YACV,KAAK,WAAW;gBACZ,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,EAAE;oBAClC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,qBAAqB,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC;iBAC7G;gBACD,MAAM;YACV,KAAK,YAAY;gBACb,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,EAAE;oBAClC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,qBAAqB,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC;iBACzI;gBACD,MAAM;YACV,KAAK,WAAW,CAAC,CAAC;gBACd,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;gBAChD,IAAI,OAAO,KAAK,IAAI,EAAE;oBAClB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,qBAAqB,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;iBACrE;gBACD,MAAM;aACT;YACD,KAAK,SAAS,CAAC,CAAC;gBACZ,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;gBAChD,IAAI,OAAO,KAAK,IAAI,EAAE;oBAClB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,qBAAqB,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;iBACrE;aACJ;SACJ;IACL,CAAC;IAEe,MAAM;QAClB,OAAO,CACH,8BACI,KAAC,mBAAmB,IAChB,KAAK,EAAC,MAAM,EACZ,OAAO,EAAE,GAAG,EAAE;wBACV,IAAI,CAAC,QAAQ,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;oBACpC,CAAC,GACH,EACD,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,CAClB,KAAC,cAAc,IACX,EAAE,EAAC,cAAc,EACjB,KAAK,EAAC,wBAAwB,EAC9B,IAAI,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,EAClC,QAAQ,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,mBAAmB,CAAC,eAAe,EAAE,EACxE,OAAO,EAAE,CAAC,MAAc,EAAE,EAAE,CAAC,IAAI,CAAC,2BAA2B,CAAC,MAAM,CAAC,EACrE,SAAS,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,YAExC,eAAK,EAAE,EAAC,cAAc,aAClB,KAAC,eAAe,IAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,GAAI,EACrF,KAAC,gBAAgB,IAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,GAAI,EACtF,KAAC,eAAe,IAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,GAAI,EACrF,KAAC,kBAAkB,IAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,GAAI,IACtF,GACO,CACpB,IACF,CACN,CAAC;IACN,CAAC;CACJ","sourcesContent":["import * as React from \"react\";\r\nimport { ButtonLineComponent } from \"shared-ui-components/lines/buttonLineComponent\";\r\nimport type { GlobalState } from \"../../../../../globalState\";\r\nimport { PopupComponent } from \"../../../../../popupComponent\";\r\nimport { BottomBarComponent } from \"./bottomBar/bottomBarComponent\";\r\nimport type { Context } from \"./context\";\r\nimport { TopBarComponent } from \"./topBarComponent\";\r\nimport { CanvasComponent } from \"./graph/canvasComponent\";\r\nimport { SideBarComponent } from \"./sideBar/sideBarComponent\";\r\nimport type { Animation } from \"core/Animations/animation\";\r\nimport type { TargetedAnimation } from \"core/Animations/animationGroup\";\r\n\r\nimport \"./scss/curveEditor.scss\";\r\n\r\ninterface IAnimationCurveEditorComponentProps {\r\n    globalState: GlobalState;\r\n    context: Context;\r\n}\r\n\r\ninterface IAnimationCurveEditorComponentState {\r\n    isOpen: boolean;\r\n}\r\n\r\nexport class AnimationCurveEditorComponent extends React.Component<IAnimationCurveEditorComponentProps, IAnimationCurveEditorComponentState> {\r\n    constructor(props: IAnimationCurveEditorComponentProps) {\r\n        super(props);\r\n\r\n        this.state = { isOpen: false };\r\n    }\r\n\r\n    onCloseAnimationCurveEditor(window: Window | null) {\r\n        if (window !== null) {\r\n            window.close();\r\n        }\r\n        this.setState({ isOpen: false });\r\n        this.props.context.activeAnimations = [];\r\n        this.props.context.onActiveAnimationChanged.notifyObservers({});\r\n    }\r\n\r\n    override shouldComponentUpdate(newProps: IAnimationCurveEditorComponentProps, newState: IAnimationCurveEditorComponentState) {\r\n        if (newState.isOpen !== this.state.isOpen) {\r\n            if (newState.isOpen) {\r\n                this.props.context.prepare();\r\n                if (this.props.context.animations && this.props.context.animations.length) {\r\n                    setTimeout(() => {\r\n                        this.props.context.activeAnimations.push(\r\n                            this.props.context.useTargetAnimations\r\n                                ? (this.props.context.animations![0] as TargetedAnimation).animation\r\n                                : (this.props.context.animations![0] as Animation)\r\n                        );\r\n                        this.props.context.onActiveAnimationChanged.notifyObservers({});\r\n                    });\r\n                }\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n    private _onKeyDown(evt: KeyboardEvent) {\r\n        switch (evt.key) {\r\n            case \"Delete\":\r\n            case \"Backspace\":\r\n                if (this.props.context.activeKeyPoints?.length && !this.props.context.focusedInput) {\r\n                    this.props.context.onDeleteKeyActiveKeyPoints.notifyObservers();\r\n                }\r\n                break;\r\n            case \" \":\r\n                if (this.props.context.isPlaying) {\r\n                    this.props.context.stop();\r\n                } else {\r\n                    this.props.context.play(true);\r\n                }\r\n                break;\r\n            case \"a\":\r\n                if (evt.ctrlKey) {\r\n                    this.props.context.onSelectAllKeys.notifyObservers();\r\n                    this.props.context.onActiveKeyPointChanged.notifyObservers();\r\n                    evt.preventDefault();\r\n                }\r\n                break;\r\n            case \"ArrowLeft\":\r\n                if (!this.props.context.focusedInput) {\r\n                    this.props.context.onMoveToFrameRequired.notifyObservers(Math.max(0, this.props.context.activeFrame - 1));\r\n                }\r\n                break;\r\n            case \"ArrowRight\":\r\n                if (!this.props.context.focusedInput) {\r\n                    this.props.context.onMoveToFrameRequired.notifyObservers(Math.min(this.props.context.clipLength, this.props.context.activeFrame + 1));\r\n                }\r\n                break;\r\n            case \"ArrowDown\": {\r\n                const prevKey = this.props.context.getPrevKey();\r\n                if (prevKey !== null) {\r\n                    this.props.context.onMoveToFrameRequired.notifyObservers(prevKey);\r\n                }\r\n                break;\r\n            }\r\n            case \"ArrowUp\": {\r\n                const nextKey = this.props.context.getNextKey();\r\n                if (nextKey !== null) {\r\n                    this.props.context.onMoveToFrameRequired.notifyObservers(nextKey);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public override render() {\r\n        return (\r\n            <>\r\n                <ButtonLineComponent\r\n                    label=\"Edit\"\r\n                    onClick={() => {\r\n                        this.setState({ isOpen: true });\r\n                    }}\r\n                />\r\n                {this.state.isOpen && (\r\n                    <PopupComponent\r\n                        id=\"curve-editor\"\r\n                        title=\"Animation Curve Editor\"\r\n                        size={{ width: 1024, height: 512 }}\r\n                        onResize={() => this.props.context.onHostWindowResized.notifyObservers()}\r\n                        onClose={(window: Window) => this.onCloseAnimationCurveEditor(window)}\r\n                        onKeyDown={(evt) => this._onKeyDown(evt)}\r\n                    >\r\n                        <div id=\"curve-editor\">\r\n                            <TopBarComponent globalState={this.props.globalState} context={this.props.context} />\r\n                            <SideBarComponent globalState={this.props.globalState} context={this.props.context} />\r\n                            <CanvasComponent globalState={this.props.globalState} context={this.props.context} />\r\n                            <BottomBarComponent globalState={this.props.globalState} context={this.props.context} />\r\n                        </div>\r\n                    </PopupComponent>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n"]}