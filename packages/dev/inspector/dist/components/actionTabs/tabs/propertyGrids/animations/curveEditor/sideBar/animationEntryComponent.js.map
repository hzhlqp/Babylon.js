{"version":3,"file":"animationEntryComponent.js","sourceRoot":"","sources":["../../../../../../../../src/components/actionTabs/tabs/propertyGrids/animations/curveEditor/sideBar/animationEntryComponent.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport type { GlobalState } from \"../../../../../../globalState\";\r\nimport type { Context, IActiveAnimationChangedOptions } from \"../context\";\r\nimport { Animation } from \"core/Animations/animation\";\r\nimport { ActionButtonComponent } from \"../controls/actionButtonComponent\";\r\nimport type { Nullable } from \"core/types\";\r\nimport type { Observer } from \"core/Misc/observable\";\r\nimport { AnimationSubEntryComponent } from \"./animationSubEntryComponent\";\r\n\r\nimport gearIcon from \"../assets/animationOptionsIcon.svg\";\r\nimport deleteIcon from \"../assets/closeWindowIcon.svg\";\r\nimport bulletIcon from \"../assets/animationBulletIcon.svg\";\r\nimport selectedIcon from \"../assets/keySelectedIcon.svg\";\r\nimport chevronIcon from \"../assets/animationTriangleIcon.svg\";\r\n\r\ninterface IAnimationEntryComponentProps {\r\n    globalState: GlobalState;\r\n    context: Context;\r\n    animation: Animation;\r\n}\r\n\r\ninterface IAnimationEntryComponentState {\r\n    isExpanded: boolean;\r\n    isSelected: boolean;\r\n}\r\n\r\nexport class AnimationEntryComponent extends React.Component<IAnimationEntryComponentProps, IAnimationEntryComponentState> {\r\n    private _onActiveAnimationChangedObserver: Nullable<Observer<IActiveAnimationChangedOptions>>;\r\n    private _onActiveKeyPointChangedObserver: Nullable<Observer<void>>;\r\n    private _onSelectToActivatedObserver: Nullable<Observer<{ from: number; to: number }>>;\r\n\r\n    private _unmount = false;\r\n\r\n    constructor(props: IAnimationEntryComponentProps) {\r\n        super(props);\r\n\r\n        this.state = { isExpanded: false, isSelected: false };\r\n\r\n        this._onActiveAnimationChangedObserver = props.context.onActiveAnimationChanged.add(() => {\r\n            if (this._unmount) {\r\n                return;\r\n            }\r\n            if (this.props.context.activeAnimations.indexOf(this.props.animation) === -1) {\r\n                this.setState({ isSelected: false });\r\n            }\r\n            this.forceUpdate();\r\n        });\r\n\r\n        this._onActiveKeyPointChangedObserver = this.props.context.onActiveKeyPointChanged.add(() => {\r\n            this.setState({\r\n                isSelected:\r\n                    this.props.animation.dataType === Animation.ANIMATIONTYPE_FLOAT &&\r\n                    this.props.context.activeAnimations.indexOf(this.props.animation) !== -1 &&\r\n                    this.props.context.activeKeyPoints !== null &&\r\n                    this.props.context.activeKeyPoints.length > 0 &&\r\n                    this.props.context.activeKeyPoints.some((kp) => kp.props.curve.animation === this.props.animation),\r\n            });\r\n        });\r\n\r\n        this._onSelectToActivatedObserver = this.props.context.onSelectToActivated.add((info: { from: number; to: number }) => {\r\n            const currentIndex = this.props.context.getAnimationSortIndex(this.props.animation);\r\n            const activeIndex = this.props.context.activeAnimations.indexOf(this.props.animation);\r\n\r\n            if ((currentIndex > info.from && currentIndex <= info.to) || (currentIndex >= info.to && currentIndex < info.from)) {\r\n                if (activeIndex === -1) {\r\n                    this.props.context.activeAnimations.push(this.props.animation);\r\n                }\r\n            } else if (currentIndex !== info.from && activeIndex !== -1) {\r\n                this.props.context.activeAnimations.splice(activeIndex, 1);\r\n            }\r\n        });\r\n    }\r\n\r\n    private _onGear() {\r\n        this.props.context.onEditAnimationUIClosed.addOnce(() => {\r\n            if (!this._unmount) {\r\n                this.forceUpdate();\r\n            }\r\n        });\r\n        this.props.context.onEditAnimationRequired.notifyObservers(this.props.animation);\r\n    }\r\n\r\n    private _onDelete() {\r\n        this.props.context.onDeleteAnimation.notifyObservers(this.props.animation);\r\n    }\r\n\r\n    override componentWillUnmount() {\r\n        this._unmount = true;\r\n        if (this._onActiveAnimationChangedObserver) {\r\n            this.props.context.onActiveAnimationChanged.remove(this._onActiveAnimationChangedObserver);\r\n        }\r\n\r\n        if (this._onActiveKeyPointChangedObserver) {\r\n            this.props.context.onActiveKeyPointChanged.remove(this._onActiveKeyPointChangedObserver);\r\n        }\r\n\r\n        if (this._onSelectToActivatedObserver) {\r\n            this.props.context.onSelectToActivated.remove(this._onSelectToActivatedObserver);\r\n        }\r\n    }\r\n\r\n    private _activate(evt: React.MouseEvent<HTMLDivElement>) {\r\n        if (evt.shiftKey) {\r\n            if (this.props.context.activeAnimations.length > 0) {\r\n                const firstOne = this.props.context.activeAnimations[0];\r\n                const payload = {\r\n                    from: this.props.context.getAnimationSortIndex(firstOne),\r\n                    to: this.props.context.getAnimationSortIndex(this.props.animation),\r\n                };\r\n\r\n                this.props.context.onSelectToActivated.notifyObservers(payload);\r\n\r\n                this.props.context.onActiveAnimationChanged.notifyObservers({});\r\n            }\r\n            return;\r\n        }\r\n        if (!evt.ctrlKey) {\r\n            this.props.context.activeAnimations = [this.props.animation];\r\n            this.props.context.resetAllActiveChannels();\r\n        } else {\r\n            const index = this.props.context.activeAnimations.indexOf(this.props.animation);\r\n\r\n            if (index !== -1) {\r\n                this.props.context.activeAnimations.splice(index, 1);\r\n            } else {\r\n                this.props.context.activeAnimations.push(this.props.animation);\r\n            }\r\n        }\r\n\r\n        this.props.context.disableChannel(this.props.animation);\r\n        this.props.context.onActiveAnimationChanged.notifyObservers({});\r\n    }\r\n\r\n    private _expandOrCollapse() {\r\n        this.setState({ isExpanded: !this.state.isExpanded });\r\n    }\r\n\r\n    public override render() {\r\n        const isActive = this.props.context.activeAnimations.indexOf(this.props.animation) !== -1;\r\n\r\n        return (\r\n            <>\r\n                <div className={\"animation-entry\" + (isActive ? \" isActive\" : \"\")}>\r\n                    {this.state.isSelected && (\r\n                        <div className=\"animation-active-indicator\">\r\n                            <img src={selectedIcon} />\r\n                        </div>\r\n                    )}\r\n                    {this.props.animation.dataType === Animation.ANIMATIONTYPE_FLOAT && (\r\n                        <div className=\"animation-chevron\">\r\n                            <img src={bulletIcon} />\r\n                        </div>\r\n                    )}\r\n                    {this.props.animation.dataType !== Animation.ANIMATIONTYPE_FLOAT && (\r\n                        <div className=\"animation-chevron\" onClick={() => this._expandOrCollapse()}>\r\n                            <img className={\"animation-chevron-image\" + (this.state.isExpanded ? \"\" : \" collapsed\")} src={chevronIcon} />\r\n                        </div>\r\n                    )}\r\n                    <div className=\"animation-name\" onClick={(evt) => this._activate(evt)}>\r\n                        {this.props.animation.name}\r\n                    </div>\r\n                    <ActionButtonComponent\r\n                        className=\"animation-options\"\r\n                        context={this.props.context}\r\n                        globalState={this.props.globalState}\r\n                        icon={gearIcon}\r\n                        onClick={() => this._onGear()}\r\n                    />\r\n                    <ActionButtonComponent\r\n                        className=\"animation-delete\"\r\n                        context={this.props.context}\r\n                        globalState={this.props.globalState}\r\n                        icon={deleteIcon}\r\n                        onClick={() => this._onDelete()}\r\n                    />\r\n                </div>\r\n                {this.state.isExpanded && this.props.animation.dataType === Animation.ANIMATIONTYPE_COLOR3 && (\r\n                    <>\r\n                        <AnimationSubEntryComponent\r\n                            globalState={this.props.globalState}\r\n                            context={this.props.context}\r\n                            animation={this.props.animation}\r\n                            color=\"#DB3E3E\"\r\n                            subName=\"Red\"\r\n                        />\r\n                        <AnimationSubEntryComponent\r\n                            globalState={this.props.globalState}\r\n                            context={this.props.context}\r\n                            animation={this.props.animation}\r\n                            color=\"#51E22D\"\r\n                            subName=\"Green\"\r\n                        />\r\n                        <AnimationSubEntryComponent\r\n                            globalState={this.props.globalState}\r\n                            context={this.props.context}\r\n                            animation={this.props.animation}\r\n                            color=\"#00A3FF\"\r\n                            subName=\"Blue\"\r\n                        />\r\n                    </>\r\n                )}\r\n                {this.state.isExpanded && this.props.animation.dataType === Animation.ANIMATIONTYPE_VECTOR3 && (\r\n                    <>\r\n                        <AnimationSubEntryComponent\r\n                            globalState={this.props.globalState}\r\n                            context={this.props.context}\r\n                            animation={this.props.animation}\r\n                            color=\"#DB3E3E\"\r\n                            subName=\"X\"\r\n                        />\r\n                        <AnimationSubEntryComponent\r\n                            globalState={this.props.globalState}\r\n                            context={this.props.context}\r\n                            animation={this.props.animation}\r\n                            color=\"#51E22D\"\r\n                            subName=\"Y\"\r\n                        />\r\n                        <AnimationSubEntryComponent\r\n                            globalState={this.props.globalState}\r\n                            context={this.props.context}\r\n                            animation={this.props.animation}\r\n                            color=\"#00A3FF\"\r\n                            subName=\"Z\"\r\n                        />\r\n                    </>\r\n                )}\r\n                {this.state.isExpanded && this.props.animation.dataType === Animation.ANIMATIONTYPE_VECTOR2 && (\r\n                    <>\r\n                        <AnimationSubEntryComponent\r\n                            globalState={this.props.globalState}\r\n                            context={this.props.context}\r\n                            animation={this.props.animation}\r\n                            color=\"#DB3E3E\"\r\n                            subName=\"X\"\r\n                        />\r\n                        <AnimationSubEntryComponent\r\n                            globalState={this.props.globalState}\r\n                            context={this.props.context}\r\n                            animation={this.props.animation}\r\n                            color=\"#51E22D\"\r\n                            subName=\"Y\"\r\n                        />\r\n                    </>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n"]}