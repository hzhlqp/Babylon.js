{"version":3,"file":"graphComponent.js","sourceRoot":"","sources":["../../../../../../../../src/components/actionTabs/tabs/propertyGrids/animations/curveEditor/graph/graphComponent.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport type { GlobalState } from \"../../../../../../globalState\";\r\nimport type { Context, IActiveAnimationChangedOptions } from \"../context\";\r\nimport { Animation } from \"core/Animations/animation\";\r\nimport { Curve } from \"./curve\";\r\nimport { KeyPointComponent } from \"./keyPoint\";\r\nimport { CurveComponent } from \"./curveComponent\";\r\nimport type { Nullable } from \"core/types\";\r\nimport type { Observer } from \"core/Misc/observable\";\r\nimport type { IAnimationKey } from \"core/Animations/animationKey\";\r\nimport { Quaternion, Vector2, Vector3 } from \"core/Maths/math.vector\";\r\nimport { Color3, Color4 } from \"core/Maths/math.color\";\r\nimport { Scalar } from \"core/Maths/math.scalar\";\r\n\r\ninterface IGraphComponentProps {\r\n    globalState: GlobalState;\r\n    context: Context;\r\n}\r\n\r\ninterface IGraphComponentState {}\r\n\r\nexport class GraphComponent extends React.Component<IGraphComponentProps, IGraphComponentState> {\r\n    private readonly _minScale = 0.5;\r\n    private readonly _maxScale = 5;\r\n    private readonly _graphAbsoluteWidth = 788;\r\n    private readonly _graphAbsoluteHeight = 357;\r\n\r\n    private _viewWidth = 788;\r\n    private _viewCurveWidth = 788;\r\n    private _viewHeight = 357;\r\n    private _viewScale = 1;\r\n    private _offsetX = 0;\r\n    private _offsetY = 0;\r\n\r\n    private _inSelectionMode: boolean;\r\n\r\n    private _graphOffsetX = 30;\r\n\r\n    private _minValue: number;\r\n    private _maxValue: number;\r\n    private _minFrame: number;\r\n    private _maxFrame: number;\r\n    private _svgHost: React.RefObject<SVGSVGElement>;\r\n    private _svgHost2: React.RefObject<SVGSVGElement>;\r\n    private _selectionRectangle: React.RefObject<HTMLDivElement>;\r\n    private _curves: Curve[];\r\n\r\n    private _pointerIsDown: boolean;\r\n    private _sourcePointerX: number;\r\n    private _sourcePointerY: number;\r\n    private _selectionMade: boolean;\r\n\r\n    private _selectionStartX: number;\r\n    private _selectionStartY: number;\r\n\r\n    private _onActiveAnimationChangedObserver: Nullable<Observer<IActiveAnimationChangedOptions>>;\r\n\r\n    constructor(props: IGraphComponentProps) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n\r\n        this._svgHost = React.createRef();\r\n        this._svgHost2 = React.createRef();\r\n        this._selectionRectangle = React.createRef();\r\n\r\n        this._evaluateKeys();\r\n\r\n        this.props.context.onHostWindowResized.add(() => {\r\n            this._computeSizes();\r\n        });\r\n\r\n        this._onActiveAnimationChangedObserver = this.props.context.onActiveAnimationChanged.add(({ evaluateKeys = true, frame = true, range = true }) => {\r\n            if (evaluateKeys) {\r\n                this._evaluateKeys(frame, range);\r\n            }\r\n            this._computeSizes();\r\n            this.forceUpdate();\r\n        });\r\n\r\n        this.props.context.onFrameRequired.add(() => {\r\n            this._frameFromActiveKeys();\r\n            this.forceUpdate();\r\n        });\r\n\r\n        this.props.context.onRangeUpdated.add(() => {\r\n            this.forceUpdate();\r\n        });\r\n\r\n        // Delete keypoint\r\n        this.props.context.onDeleteKeyActiveKeyPoints.add(() => {\r\n            if (this.props.context.activeAnimations.length === 0 || !this.props.context.activeKeyPoints) {\r\n                return;\r\n            }\r\n\r\n            for (const currentAnimation of this.props.context.activeAnimations) {\r\n                const keys = currentAnimation.getKeys();\r\n                const newKeys = keys.slice(0);\r\n                let deletedFrame: Nullable<number> = null;\r\n\r\n                for (const keyPoint of this.props.context.activeKeyPoints) {\r\n                    // Cannot delete 0 and last\r\n                    if (keyPoint.props.keyId === 0 || keyPoint.props.keyId === keys.length - 1) {\r\n                        continue;\r\n                    }\r\n\r\n                    const key = keys[keyPoint.props.keyId];\r\n\r\n                    const keyIndex = newKeys.indexOf(key);\r\n                    if (keyIndex > -1) {\r\n                        newKeys.splice(keyIndex, 1);\r\n\r\n                        if (deletedFrame === null) {\r\n                            deletedFrame = key.frame;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.props.context.stop();\r\n                currentAnimation.setKeys(newKeys);\r\n                if (deletedFrame !== null) {\r\n                    this.props.context.moveToFrame(deletedFrame);\r\n                }\r\n            }\r\n            this._evaluateKeys(false, false);\r\n\r\n            this.props.context.activeKeyPoints = [];\r\n            this.props.context.onActiveKeyPointChanged.notifyObservers();\r\n            this.props.context.onActiveAnimationChanged.notifyObservers({ evaluateKeys: false });\r\n            this.forceUpdate();\r\n        });\r\n\r\n        // Create or Update keypoint\r\n        this.props.context.onCreateOrUpdateKeyPointRequired.add(() => {\r\n            if (this.props.context.activeAnimations.length === 0) {\r\n                return;\r\n            }\r\n\r\n            for (const currentAnimation of this.props.context.activeAnimations) {\r\n                if (currentAnimation.dataType === Animation.ANIMATIONTYPE_QUATERNION) {\r\n                    continue;\r\n                }\r\n                const keys = currentAnimation.getKeys();\r\n\r\n                const currentFrame = this.props.context.activeFrame;\r\n\r\n                let indexToAdd = -1;\r\n                for (const key of keys) {\r\n                    if (key.frame < currentFrame) {\r\n                        indexToAdd++;\r\n                    } else {\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                let value: any;\r\n\r\n                if (this.props.context.target) {\r\n                    value = this.props.context.target as any;\r\n                    for (const path of currentAnimation.targetPropertyPath) {\r\n                        value = value[path];\r\n                    }\r\n\r\n                    if (value.clone) {\r\n                        value = value.clone();\r\n                    }\r\n                } else {\r\n                    value = currentAnimation.evaluate(currentFrame);\r\n                }\r\n\r\n                const leftKey = keys[indexToAdd];\r\n                const rightKey = keys[indexToAdd + 1];\r\n\r\n                if (Math.floor(currentFrame - leftKey?.frame) === 0) {\r\n                    // Key already exists, update it\r\n                    leftKey.value = value;\r\n                } else if (Math.floor(rightKey?.frame - currentFrame) === 0) {\r\n                    // Key already exists, update it\r\n                    rightKey.value = value;\r\n                } else {\r\n                    // Key doesn't exist, create it (same operations) as\r\n                    // the new key listener\r\n                    const newKey: IAnimationKey = {\r\n                        frame: currentFrame,\r\n                        value: value,\r\n                        lockedTangent: true,\r\n                    };\r\n\r\n                    if (leftKey?.outTangent !== undefined && rightKey?.inTangent !== undefined) {\r\n                        let derivative: Nullable<any> = null;\r\n                        const invFrameDelta = 1.0 / (rightKey.frame - leftKey.frame);\r\n                        const cutTime = (currentFrame - leftKey.frame) * invFrameDelta;\r\n\r\n                        switch (currentAnimation.dataType) {\r\n                            case Animation.ANIMATIONTYPE_FLOAT: {\r\n                                derivative = Scalar.Hermite1stDerivative(\r\n                                    leftKey.value * invFrameDelta,\r\n                                    leftKey.outTangent,\r\n                                    rightKey.value * invFrameDelta,\r\n                                    rightKey.inTangent,\r\n                                    cutTime\r\n                                );\r\n                                break;\r\n                            }\r\n                            case Animation.ANIMATIONTYPE_VECTOR2: {\r\n                                derivative = Vector2.Hermite1stDerivative(\r\n                                    leftKey.value.scale(invFrameDelta),\r\n                                    leftKey.outTangent,\r\n                                    rightKey.value.scale(invFrameDelta),\r\n                                    rightKey.inTangent,\r\n                                    cutTime\r\n                                );\r\n                                break;\r\n                            }\r\n                            case Animation.ANIMATIONTYPE_VECTOR3: {\r\n                                derivative = Vector3.Hermite1stDerivative(\r\n                                    leftKey.value.scale(invFrameDelta),\r\n                                    leftKey.outTangent,\r\n                                    rightKey.value.scale(invFrameDelta),\r\n                                    rightKey.inTangent,\r\n                                    cutTime\r\n                                );\r\n                                break;\r\n                            }\r\n                            case Animation.ANIMATIONTYPE_COLOR3:\r\n                                derivative = Color3.Hermite1stDerivative(\r\n                                    leftKey.value.scale(invFrameDelta),\r\n                                    leftKey.outTangent,\r\n                                    rightKey.value.scale(invFrameDelta),\r\n                                    rightKey.inTangent,\r\n                                    cutTime\r\n                                );\r\n                                break;\r\n                            case Animation.ANIMATIONTYPE_COLOR4:\r\n                                derivative = Color4.Hermite1stDerivative(\r\n                                    leftKey.value.scale(invFrameDelta),\r\n                                    leftKey.outTangent,\r\n                                    rightKey.value.scale(invFrameDelta),\r\n                                    rightKey.inTangent,\r\n                                    cutTime\r\n                                );\r\n                                break;\r\n                        }\r\n\r\n                        if (derivative !== null) {\r\n                            newKey.inTangent = derivative;\r\n                            newKey.outTangent = derivative.clone ? derivative.clone() : derivative;\r\n                        }\r\n                    }\r\n                    keys.splice(indexToAdd + 1, 0, newKey);\r\n                }\r\n\r\n                currentAnimation.setKeys(keys);\r\n            }\r\n            this._evaluateKeys(false, false);\r\n\r\n            this.props.context.activeKeyPoints = [];\r\n            this.props.context.onActiveKeyPointChanged.notifyObservers();\r\n            this.props.context.onActiveAnimationChanged.notifyObservers({ evaluateKeys: false });\r\n            this.forceUpdate();\r\n        });\r\n    }\r\n\r\n    override componentWillUnmount() {\r\n        if (this._onActiveAnimationChangedObserver) {\r\n            this.props.context.onActiveAnimationChanged.remove(this._onActiveAnimationChangedObserver);\r\n        }\r\n    }\r\n\r\n    private _computeSizes() {\r\n        if (!this._svgHost.current || !this._svgHost2.current) {\r\n            return;\r\n        }\r\n\r\n        this._viewWidth = this._svgHost.current.clientWidth;\r\n        this._viewCurveWidth = this._svgHost2.current.clientWidth;\r\n        this._viewHeight = this._svgHost.current.clientHeight;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    private _setDefaultInTangent(keyId: number) {\r\n        for (const curve of this._curves) {\r\n            curve.storeDefaultInTangent(keyId);\r\n        }\r\n    }\r\n\r\n    private _setDefaultOutTangent(keyId: number) {\r\n        for (const curve of this._curves) {\r\n            curve.storeDefaultOutTangent!(keyId);\r\n        }\r\n    }\r\n\r\n    private _evaluateKeys(frame = true, range = true) {\r\n        if (this.props.context.activeAnimations.length === 0) {\r\n            this._curves = [];\r\n            return;\r\n        }\r\n\r\n        this._curves = [];\r\n\r\n        for (const animation of this.props.context.activeAnimations) {\r\n            const keys = animation.getKeys();\r\n\r\n            const curves = [];\r\n            switch (animation.dataType) {\r\n                case Animation.ANIMATIONTYPE_FLOAT:\r\n                    curves.push(new Curve(\"#DB3E3E\", animation));\r\n                    break;\r\n                case Animation.ANIMATIONTYPE_VECTOR2:\r\n                    curves.push(\r\n                        new Curve(\r\n                            \"#DB3E3E\",\r\n                            animation,\r\n                            \"x\",\r\n                            () => Vector2.Zero(),\r\n                            (keyId) => this._setDefaultInTangent(keyId),\r\n                            (keyId) => this._setDefaultOutTangent(keyId)\r\n                        )\r\n                    );\r\n                    curves.push(\r\n                        new Curve(\r\n                            \"#51E22D\",\r\n                            animation,\r\n                            \"y\",\r\n                            () => Vector2.Zero(),\r\n                            (keyId) => this._setDefaultInTangent(keyId),\r\n                            (keyId) => this._setDefaultOutTangent(keyId)\r\n                        )\r\n                    );\r\n                    break;\r\n                case Animation.ANIMATIONTYPE_VECTOR3:\r\n                    curves.push(\r\n                        new Curve(\r\n                            \"#DB3E3E\",\r\n                            animation,\r\n                            \"x\",\r\n                            () => Vector3.Zero(),\r\n                            (keyId) => this._setDefaultInTangent(keyId),\r\n                            (keyId) => this._setDefaultOutTangent(keyId)\r\n                        )\r\n                    );\r\n                    curves.push(\r\n                        new Curve(\r\n                            \"#51E22D\",\r\n                            animation,\r\n                            \"y\",\r\n                            () => Vector3.Zero(),\r\n                            (keyId) => this._setDefaultInTangent(keyId),\r\n                            (keyId) => this._setDefaultOutTangent(keyId)\r\n                        )\r\n                    );\r\n                    curves.push(\r\n                        new Curve(\r\n                            \"#00A3FF\",\r\n                            animation,\r\n                            \"z\",\r\n                            () => Vector3.Zero(),\r\n                            (keyId) => this._setDefaultInTangent(keyId),\r\n                            (keyId) => this._setDefaultOutTangent(keyId)\r\n                        )\r\n                    );\r\n                    break;\r\n                case Animation.ANIMATIONTYPE_COLOR3:\r\n                    curves.push(\r\n                        new Curve(\r\n                            \"#DB3E3E\",\r\n                            animation,\r\n                            \"r\",\r\n                            () => Color3.Black(),\r\n                            (keyId) => this._setDefaultInTangent(keyId),\r\n                            (keyId) => this._setDefaultOutTangent(keyId)\r\n                        )\r\n                    );\r\n                    curves.push(\r\n                        new Curve(\r\n                            \"#51E22D\",\r\n                            animation,\r\n                            \"g\",\r\n                            () => Color3.Black(),\r\n                            (keyId) => this._setDefaultInTangent(keyId),\r\n                            (keyId) => this._setDefaultOutTangent(keyId)\r\n                        )\r\n                    );\r\n                    curves.push(\r\n                        new Curve(\r\n                            \"#00A3FF\",\r\n                            animation,\r\n                            \"b\",\r\n                            () => Color3.Black(),\r\n                            (keyId) => this._setDefaultInTangent(keyId),\r\n                            (keyId) => this._setDefaultOutTangent(keyId)\r\n                        )\r\n                    );\r\n                    break;\r\n                case Animation.ANIMATIONTYPE_QUATERNION:\r\n                    curves.push(\r\n                        new Curve(\r\n                            \"#DB3E3E\",\r\n                            animation,\r\n                            \"x\",\r\n                            () => Quaternion.Zero(),\r\n                            (keyId) => this._setDefaultInTangent(keyId),\r\n                            (keyId) => this._setDefaultOutTangent(keyId)\r\n                        )\r\n                    );\r\n                    curves.push(\r\n                        new Curve(\r\n                            \"#51E22D\",\r\n                            animation,\r\n                            \"y\",\r\n                            () => Quaternion.Zero(),\r\n                            (keyId) => this._setDefaultInTangent(keyId),\r\n                            (keyId) => this._setDefaultOutTangent(keyId)\r\n                        )\r\n                    );\r\n                    curves.push(\r\n                        new Curve(\r\n                            \"#00A3FF\",\r\n                            animation,\r\n                            \"z\",\r\n                            () => Quaternion.Zero(),\r\n                            (keyId) => this._setDefaultInTangent(keyId),\r\n                            (keyId) => this._setDefaultOutTangent(keyId)\r\n                        )\r\n                    );\r\n                    curves.push(\r\n                        new Curve(\r\n                            \"#8700FF\",\r\n                            animation,\r\n                            \"w\",\r\n                            () => Quaternion.Zero(),\r\n                            (keyId) => this._setDefaultInTangent(keyId),\r\n                            (keyId) => this._setDefaultOutTangent(keyId)\r\n                        )\r\n                    );\r\n                    break;\r\n                case Animation.ANIMATIONTYPE_COLOR4:\r\n                    curves.push(\r\n                        new Curve(\r\n                            \"#DB3E3E\",\r\n                            animation,\r\n                            \"r\",\r\n                            () => new Color4(),\r\n                            (keyId) => this._setDefaultInTangent(keyId),\r\n                            (keyId) => this._setDefaultOutTangent(keyId)\r\n                        )\r\n                    );\r\n                    curves.push(\r\n                        new Curve(\r\n                            \"#51E22D\",\r\n                            animation,\r\n                            \"g\",\r\n                            () => new Color4(),\r\n                            (keyId) => this._setDefaultInTangent(keyId),\r\n                            (keyId) => this._setDefaultOutTangent(keyId)\r\n                        )\r\n                    );\r\n                    curves.push(\r\n                        new Curve(\r\n                            \"#00A3FF\",\r\n                            animation,\r\n                            \"b\",\r\n                            () => new Color4(),\r\n                            (keyId) => this._setDefaultInTangent(keyId),\r\n                            (keyId) => this._setDefaultOutTangent(keyId)\r\n                        )\r\n                    );\r\n                    curves.push(\r\n                        new Curve(\r\n                            \"#8700FF\",\r\n                            animation,\r\n                            \"a\",\r\n                            () => new Color4(),\r\n                            (keyId) => this._setDefaultInTangent(keyId),\r\n                            (keyId) => this._setDefaultOutTangent(keyId)\r\n                        )\r\n                    );\r\n                    break;\r\n            }\r\n\r\n            const values = this._extractValuesFromKeys(keys, animation.dataType, curves);\r\n\r\n            this._curves.push(...curves);\r\n\r\n            if (range) {\r\n                this._minValue = Math.min(this._minValue, values.min);\r\n                this._maxValue = Math.max(this._maxValue, values.max);\r\n\r\n                this._minFrame = Math.min(this._minFrame, keys[0].frame);\r\n                this._maxFrame = Math.max(this._maxFrame, keys[keys.length - 1].frame);\r\n            }\r\n        }\r\n\r\n        if (frame) {\r\n            this._frameFromActiveKeys();\r\n        }\r\n    }\r\n\r\n    private _extractValuesFromKeys(keys: IAnimationKey[], dataType: number, curvesToPushTo?: Curve[], propertyFilter?: string) {\r\n        let minValue = Number.MAX_VALUE;\r\n        let maxValue = -Number.MAX_VALUE;\r\n\r\n        for (const key of keys) {\r\n            let lockedTangent = true;\r\n            if (key.lockedTangent !== undefined) {\r\n                lockedTangent = key.lockedTangent;\r\n            }\r\n\r\n            switch (dataType) {\r\n                case Animation.ANIMATIONTYPE_FLOAT:\r\n                    minValue = Math.min(minValue, key.value);\r\n                    maxValue = Math.max(maxValue, key.value);\r\n\r\n                    if (curvesToPushTo) {\r\n                        curvesToPushTo[0].keys.push({\r\n                            frame: key.frame,\r\n                            value: key.value,\r\n                            inTangent: key.inTangent,\r\n                            outTangent: key.outTangent,\r\n                            lockedTangent: lockedTangent,\r\n                            interpolation: key.interpolation,\r\n                        });\r\n                    }\r\n                    break;\r\n                case Animation.ANIMATIONTYPE_VECTOR2:\r\n                    if (!propertyFilter || propertyFilter === \"x\") {\r\n                        minValue = Math.min(minValue, key.value.x);\r\n                        maxValue = Math.max(maxValue, key.value.x);\r\n                    }\r\n                    if (!propertyFilter || propertyFilter === \"y\") {\r\n                        minValue = Math.min(minValue, key.value.y);\r\n                        maxValue = Math.max(maxValue, key.value.y);\r\n                    }\r\n\r\n                    if (curvesToPushTo) {\r\n                        curvesToPushTo[0].keys.push({\r\n                            frame: key.frame,\r\n                            value: key.value.x,\r\n                            inTangent: key.inTangent?.x,\r\n                            outTangent: key.outTangent?.x,\r\n                            lockedTangent: lockedTangent,\r\n                            interpolation: key.interpolation,\r\n                        });\r\n                        curvesToPushTo[1].keys.push({\r\n                            frame: key.frame,\r\n                            value: key.value.y,\r\n                            inTangent: key.inTangent?.y,\r\n                            outTangent: key.outTangent?.y,\r\n                            lockedTangent: lockedTangent,\r\n                            interpolation: key.interpolation,\r\n                        });\r\n                    }\r\n                    break;\r\n                case Animation.ANIMATIONTYPE_VECTOR3:\r\n                    if (!propertyFilter || propertyFilter === \"x\") {\r\n                        minValue = Math.min(minValue, key.value.x);\r\n                        maxValue = Math.max(maxValue, key.value.x);\r\n                    }\r\n\r\n                    if (!propertyFilter || propertyFilter === \"y\") {\r\n                        minValue = Math.min(minValue, key.value.y);\r\n                        maxValue = Math.max(maxValue, key.value.y);\r\n                    }\r\n\r\n                    if (!propertyFilter || propertyFilter === \"z\") {\r\n                        minValue = Math.min(minValue, key.value.z);\r\n                        maxValue = Math.max(maxValue, key.value.z);\r\n                    }\r\n\r\n                    if (curvesToPushTo) {\r\n                        curvesToPushTo[0].keys.push({\r\n                            frame: key.frame,\r\n                            value: key.value.x,\r\n                            inTangent: key.inTangent?.x,\r\n                            outTangent: key.outTangent?.x,\r\n                            lockedTangent: lockedTangent,\r\n                            interpolation: key.interpolation,\r\n                        });\r\n                        curvesToPushTo[1].keys.push({\r\n                            frame: key.frame,\r\n                            value: key.value.y,\r\n                            inTangent: key.inTangent?.y,\r\n                            outTangent: key.outTangent?.y,\r\n                            lockedTangent: lockedTangent,\r\n                            interpolation: key.interpolation,\r\n                        });\r\n                        curvesToPushTo[2].keys.push({\r\n                            frame: key.frame,\r\n                            value: key.value.z,\r\n                            inTangent: key.inTangent?.z,\r\n                            outTangent: key.outTangent?.z,\r\n                            lockedTangent: lockedTangent,\r\n                            interpolation: key.interpolation,\r\n                        });\r\n                    }\r\n                    break;\r\n                case Animation.ANIMATIONTYPE_COLOR3:\r\n                    if (!propertyFilter || propertyFilter === \"r\") {\r\n                        minValue = Math.min(minValue, key.value.r);\r\n                        maxValue = Math.max(maxValue, key.value.r);\r\n                    }\r\n\r\n                    if (!propertyFilter || propertyFilter === \"g\") {\r\n                        minValue = Math.min(minValue, key.value.g);\r\n                        maxValue = Math.max(maxValue, key.value.g);\r\n                    }\r\n\r\n                    if (!propertyFilter || propertyFilter === \"b\") {\r\n                        minValue = Math.min(minValue, key.value.b);\r\n                        maxValue = Math.max(maxValue, key.value.b);\r\n                    }\r\n\r\n                    if (curvesToPushTo) {\r\n                        curvesToPushTo[0].keys.push({\r\n                            frame: key.frame,\r\n                            value: key.value.r,\r\n                            inTangent: key.inTangent?.r,\r\n                            outTangent: key.outTangent?.r,\r\n                            lockedTangent: lockedTangent,\r\n                            interpolation: key.interpolation,\r\n                        });\r\n                        curvesToPushTo[1].keys.push({\r\n                            frame: key.frame,\r\n                            value: key.value.g,\r\n                            inTangent: key.inTangent?.g,\r\n                            outTangent: key.outTangent?.g,\r\n                            lockedTangent: lockedTangent,\r\n                            interpolation: key.interpolation,\r\n                        });\r\n                        curvesToPushTo[2].keys.push({\r\n                            frame: key.frame,\r\n                            value: key.value.b,\r\n                            inTangent: key.inTangent?.b,\r\n                            outTangent: key.outTangent?.b,\r\n                            lockedTangent: lockedTangent,\r\n                            interpolation: key.interpolation,\r\n                        });\r\n                    }\r\n                    break;\r\n                case Animation.ANIMATIONTYPE_QUATERNION:\r\n                    if (!propertyFilter || propertyFilter === \"x\") {\r\n                        minValue = Math.min(minValue, key.value.x);\r\n                        maxValue = Math.max(maxValue, key.value.x);\r\n                    }\r\n\r\n                    if (!propertyFilter || propertyFilter === \"y\") {\r\n                        minValue = Math.min(minValue, key.value.y);\r\n                        maxValue = Math.max(maxValue, key.value.y);\r\n                    }\r\n\r\n                    if (!propertyFilter || propertyFilter === \"z\") {\r\n                        minValue = Math.min(minValue, key.value.z);\r\n                        maxValue = Math.max(maxValue, key.value.z);\r\n                    }\r\n\r\n                    if (!propertyFilter || propertyFilter === \"w\") {\r\n                        minValue = Math.min(minValue, key.value.w);\r\n                        maxValue = Math.max(maxValue, key.value.w);\r\n                    }\r\n\r\n                    if (curvesToPushTo) {\r\n                        curvesToPushTo[0].keys.push({\r\n                            frame: key.frame,\r\n                            value: key.value.x,\r\n                            inTangent: key.inTangent?.x,\r\n                            outTangent: key.outTangent?.x,\r\n                            lockedTangent: lockedTangent,\r\n                            interpolation: key.interpolation,\r\n                        });\r\n                        curvesToPushTo[1].keys.push({\r\n                            frame: key.frame,\r\n                            value: key.value.y,\r\n                            inTangent: key.inTangent?.y,\r\n                            outTangent: key.outTangent?.y,\r\n                            lockedTangent: lockedTangent,\r\n                            interpolation: key.interpolation,\r\n                        });\r\n                        curvesToPushTo[2].keys.push({\r\n                            frame: key.frame,\r\n                            value: key.value.z,\r\n                            inTangent: key.inTangent?.z,\r\n                            outTangent: key.outTangent?.z,\r\n                            lockedTangent: lockedTangent,\r\n                            interpolation: key.interpolation,\r\n                        });\r\n                        curvesToPushTo[3].keys.push({\r\n                            frame: key.frame,\r\n                            value: key.value.w,\r\n                            inTangent: key.inTangent?.w,\r\n                            outTangent: key.outTangent?.w,\r\n                            lockedTangent: lockedTangent,\r\n                            interpolation: key.interpolation,\r\n                        });\r\n                    }\r\n                    break;\r\n                case Animation.ANIMATIONTYPE_COLOR4:\r\n                    if (!propertyFilter || propertyFilter === \"r\") {\r\n                        minValue = Math.min(minValue, key.value.r);\r\n                        maxValue = Math.max(maxValue, key.value.r);\r\n                    }\r\n\r\n                    if (!propertyFilter || propertyFilter === \"g\") {\r\n                        minValue = Math.min(minValue, key.value.g);\r\n                        maxValue = Math.max(maxValue, key.value.g);\r\n                    }\r\n\r\n                    if (!propertyFilter || propertyFilter === \"b\") {\r\n                        minValue = Math.min(minValue, key.value.b);\r\n                        maxValue = Math.max(maxValue, key.value.b);\r\n                    }\r\n\r\n                    if (!propertyFilter || propertyFilter === \"a\") {\r\n                        minValue = Math.min(minValue, key.value.a);\r\n                        maxValue = Math.max(maxValue, key.value.a);\r\n                    }\r\n\r\n                    if (curvesToPushTo) {\r\n                        curvesToPushTo[0].keys.push({\r\n                            frame: key.frame,\r\n                            value: key.value.r,\r\n                            inTangent: key.inTangent?.r,\r\n                            outTangent: key.outTangent?.r,\r\n                            lockedTangent: lockedTangent,\r\n                            interpolation: key.interpolation,\r\n                        });\r\n                        curvesToPushTo[1].keys.push({\r\n                            frame: key.frame,\r\n                            value: key.value.g,\r\n                            inTangent: key.inTangent?.g,\r\n                            outTangent: key.outTangent?.g,\r\n                            lockedTangent: lockedTangent,\r\n                            interpolation: key.interpolation,\r\n                        });\r\n                        curvesToPushTo[2].keys.push({\r\n                            frame: key.frame,\r\n                            value: key.value.b,\r\n                            inTangent: key.inTangent?.b,\r\n                            outTangent: key.outTangent?.b,\r\n                            lockedTangent: lockedTangent,\r\n                            interpolation: key.interpolation,\r\n                        });\r\n                        curvesToPushTo[3].keys.push({\r\n                            frame: key.frame,\r\n                            value: key.value.a,\r\n                            inTangent: key.inTangent?.a,\r\n                            outTangent: key.outTangent?.a,\r\n                            lockedTangent: lockedTangent,\r\n                            interpolation: key.interpolation,\r\n                        });\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return {\r\n            min: minValue,\r\n            max: maxValue,\r\n        };\r\n    }\r\n\r\n    private _convertX(x: number) {\r\n        let diff = this._maxFrame - this._minFrame;\r\n\r\n        if (diff === 0) {\r\n            diff = 1;\r\n        }\r\n\r\n        return ((x - this._minFrame) / diff) * this._graphAbsoluteWidth;\r\n    }\r\n\r\n    private _invertX(x: number) {\r\n        return (x / this._graphAbsoluteWidth) * (this._maxFrame - this._minFrame) + this._minFrame;\r\n    }\r\n\r\n    private _convertY(y: number) {\r\n        let diff = this._maxValue - this._minValue;\r\n\r\n        if (diff === 0) {\r\n            diff = 1;\r\n        }\r\n\r\n        return this._graphAbsoluteHeight - ((y - this._minValue) / diff) * this._graphAbsoluteHeight;\r\n    }\r\n\r\n    private _invertY(y: number) {\r\n        let diff = this._maxValue - this._minValue;\r\n\r\n        if (diff === 0) {\r\n            diff = 1;\r\n        }\r\n\r\n        return ((this._graphAbsoluteHeight - y) / this._graphAbsoluteHeight) * diff + this._minValue;\r\n    }\r\n\r\n    private _buildFrameIntervalAxis() {\r\n        if (this.props.context.activeAnimations.length === 0) {\r\n            return null;\r\n        }\r\n\r\n        const maxFrame = this.props.context.referenceMaxFrame;\r\n\r\n        const range = maxFrame;\r\n        let offset = this.props.context.activeAnimations[0].framePerSecond;\r\n        const convertRatio = range / this._graphAbsoluteWidth;\r\n\r\n        const steps = [];\r\n\r\n        if (offset === 0) {\r\n            offset = 1;\r\n        }\r\n\r\n        const startPosition = this._offsetX * convertRatio;\r\n        const start = -((startPosition / offset) | 0) * offset;\r\n        const end = start + (this._viewWidth - 40) * this._viewScale * convertRatio;\r\n\r\n        for (let step = start - offset; step <= end + offset; step += offset) {\r\n            steps.push(step);\r\n        }\r\n\r\n        return steps.map((s) => {\r\n            const x = s / convertRatio;\r\n            return (\r\n                <g key={\"axis\" + s}>\r\n                    <line\r\n                        key={\"line\" + s}\r\n                        x1={x}\r\n                        y1={0}\r\n                        x2={x}\r\n                        y2={this._viewHeight * this._viewScale}\r\n                        style={{\r\n                            stroke: \"#666666\",\r\n                            strokeWidth: 1,\r\n                        }}\r\n                    ></line>\r\n                </g>\r\n            );\r\n        });\r\n    }\r\n\r\n    private _buildYAxis() {\r\n        if (this.props.context.activeAnimations.length === 0) {\r\n            return null;\r\n        }\r\n\r\n        const stepCounts = 10;\r\n        const range = this._maxValue !== this._minValue ? this._maxValue - this._minValue : 1;\r\n        let offset = (range / stepCounts) * this._viewScale;\r\n        const convertRatio = range / this._graphAbsoluteHeight;\r\n        const steps = [];\r\n\r\n        // Get precision\r\n        const a = 0;\r\n        const b = offset;\r\n        let precision = 2;\r\n\r\n        while (a.toFixed(precision) === b.toFixed(precision)) {\r\n            precision++;\r\n        }\r\n\r\n        // Make sure we have an even number with the correct number of decimals\r\n        const pow = Math.pow(10, precision);\r\n        offset = Math.round(offset * pow);\r\n        if (offset % 2 !== 0) {\r\n            offset -= 1;\r\n        }\r\n\r\n        offset /= pow;\r\n\r\n        // Evaluate limits\r\n        const startPosition = (this._viewHeight * this._viewScale - this._graphAbsoluteHeight - this._offsetY) * convertRatio;\r\n        const start = Math.ceil((this._minValue - ((startPosition / offset) | 0) * offset) / offset) * offset;\r\n        const end = Math.round((start + this._viewHeight * this._viewScale * convertRatio) / offset) * offset;\r\n\r\n        for (let step = start - offset; step <= end + offset; step += offset) {\r\n            steps.push(step);\r\n        }\r\n\r\n        return steps.map((s) => {\r\n            const y = this._graphAbsoluteHeight - (s - this._minValue) / convertRatio;\r\n            let text = s.toFixed(precision);\r\n\r\n            text = parseFloat(text).toFixed(precision); // Avoid -0.00 (negative zero)\r\n            const zero = 0.0;\r\n            const isZero = text === zero.toFixed(precision);\r\n\r\n            return (\r\n                <g key={\"axis\" + s}>\r\n                    <line\r\n                        key={\"line\" + s}\r\n                        x1={this._graphOffsetX * this._viewScale}\r\n                        y1={y}\r\n                        x2={this._viewWidth * this._viewScale}\r\n                        y2={y}\r\n                        style={{\r\n                            stroke: isZero ? \"#666666\" : \"#333333\",\r\n                            strokeWidth: isZero ? 1.0 : 0.5,\r\n                        }}\r\n                    ></line>\r\n                    <text\r\n                        key={\"label\" + s}\r\n                        x={0}\r\n                        y={y}\r\n                        dx={`${15 * this._viewScale}px`}\r\n                        textAnchor=\"middle\"\r\n                        dy={`${3 * this._viewScale}px`}\r\n                        style={{\r\n                            fontFamily: \"acumin-pro-condensed\",\r\n                            fontSize: `${10 * this._viewScale}px`,\r\n                            fill: \"#888888\",\r\n                            textAlign: \"center\",\r\n                        }}\r\n                    >\r\n                        {text}\r\n                    </text>\r\n                </g>\r\n            );\r\n        });\r\n    }\r\n    private _frameFromActiveKeys() {\r\n        if (this.props.context.activeAnimations.length === 0) {\r\n            return;\r\n        }\r\n\r\n        this._offsetX = 20;\r\n        this._offsetY = 20;\r\n\r\n        let minValue = Number.MAX_VALUE;\r\n        let maxValue = -Number.MAX_VALUE;\r\n\r\n        let minFrame = Number.MAX_VALUE;\r\n        let maxFrame = -Number.MAX_VALUE;\r\n\r\n        let hasRange = false;\r\n\r\n        for (const animation of this.props.context.activeAnimations) {\r\n            let propertyFilter: string | undefined = undefined;\r\n            const activeChannel = this.props.context.getActiveChannel(animation);\r\n            if (activeChannel) {\r\n                const activeCurve = this._curves.filter((c) => c.color === activeChannel)[0];\r\n\r\n                if (activeCurve) {\r\n                    propertyFilter = activeCurve.property;\r\n                }\r\n            }\r\n\r\n            let keys = animation.getKeys();\r\n            // Only keep selected keys, the previous sibling to the first key, and the next sibling of the last key\r\n            if (this.props.context.activeKeyPoints && this.props.context.activeKeyPoints.length > 0) {\r\n                const newKeys = [];\r\n\r\n                for (let i = 0; i < this.props.context.activeKeyPoints.length; i++) {\r\n                    const keyPoint = this.props.context.activeKeyPoints[i];\r\n                    if (keyPoint.props.curve.animation === animation) {\r\n                        newKeys.push(keys[keyPoint.props.keyId]);\r\n                        if (i === 0 && keyPoint.props.keyId >= 1) {\r\n                            newKeys.unshift(keys[keyPoint.props.keyId - 1]);\r\n                        }\r\n                        if (i === this.props.context.activeKeyPoints.length - 1 && keyPoint.props.keyId < keys.length - 1) {\r\n                            newKeys.push(keys[keyPoint.props.keyId + 1]);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                keys = newKeys;\r\n            }\r\n\r\n            if (keys.length === 0) {\r\n                continue;\r\n            }\r\n\r\n            const values = this._extractValuesFromKeys(keys, animation.dataType, undefined, propertyFilter);\r\n\r\n            minValue = Math.min(minValue, values.min);\r\n            maxValue = Math.max(maxValue, values.max);\r\n\r\n            minFrame = Math.min(minFrame, keys[0].frame);\r\n            maxFrame = Math.max(maxFrame, keys[keys.length - 1].frame);\r\n\r\n            hasRange = true;\r\n        }\r\n\r\n        if (!hasRange) {\r\n            return;\r\n        }\r\n\r\n        this._minFrame = minFrame;\r\n        this._maxFrame = maxFrame;\r\n\r\n        this._minValue = minValue;\r\n        this._maxValue = maxValue;\r\n\r\n        this.props.context.referenceMinFrame = this._minFrame;\r\n        this.props.context.referenceMaxFrame = this._maxFrame;\r\n\r\n        const frameConvert = Math.abs(this._convertX(this._maxFrame) - this._convertX(this._minFrame)) + this._offsetX * 2;\r\n        const valueConvert = this._minValue !== this._maxValue ? Math.abs(this._convertY(this._minValue) - this._convertY(this._maxValue)) + this._offsetY * 2 : 1;\r\n\r\n        const scaleWidth = frameConvert / this._viewCurveWidth;\r\n        const scaleHeight = valueConvert / this._viewHeight;\r\n\r\n        this._viewScale = scaleWidth * this._viewHeight < valueConvert ? scaleHeight : scaleWidth;\r\n\r\n        this.props.context.onGraphMoved.notifyObservers(this._offsetX);\r\n        this.props.context.onGraphScaled.notifyObservers(this._viewScale);\r\n    }\r\n\r\n    private _dropKeyFrames(curve: Curve) {\r\n        return curve.keys.map((key, i) => {\r\n            const x = this._convertX(key.frame);\r\n            const y = this._convertY(key.value);\r\n\r\n            return (\r\n                <KeyPointComponent\r\n                    x={x}\r\n                    y={y}\r\n                    context={this.props.context}\r\n                    scale={this._viewScale}\r\n                    getPreviousX={() => (i > 0 ? this._convertX(curve.keys[i - 1].frame) : null)}\r\n                    getNextX={() => (i < curve.keys.length - 1 ? this._convertX(curve.keys[i + 1].frame) : null)}\r\n                    channel={curve.color}\r\n                    keyId={i}\r\n                    curve={curve}\r\n                    key={\"curve-\" + i}\r\n                    invertX={(x) => this._invertX(x)}\r\n                    invertY={(y) => this._invertY(y)}\r\n                    convertX={(x) => this._convertX(x)}\r\n                    convertY={(y) => this._convertY(y)}\r\n                    onFrameValueChanged={(value) => {\r\n                        curve.updateKeyFrame(i, value);\r\n                        this.props.context.refreshTarget();\r\n                    }}\r\n                    onKeyValueChanged={(value) => {\r\n                        curve.updateKeyValue(i, value);\r\n                        this.props.context.refreshTarget();\r\n                    }}\r\n                />\r\n            );\r\n        });\r\n    }\r\n\r\n    private _onPointerDown(evt: React.PointerEvent<HTMLDivElement>) {\r\n        if ((evt.nativeEvent.target as any).id !== \"svg-graph-curves\") {\r\n            return;\r\n        }\r\n\r\n        evt.preventDefault();\r\n\r\n        this._pointerIsDown = true;\r\n        evt.currentTarget.setPointerCapture(evt.pointerId);\r\n        this._sourcePointerX = evt.nativeEvent.offsetX;\r\n        this._sourcePointerY = evt.nativeEvent.offsetY;\r\n\r\n        const isMiddleButton = evt.nativeEvent.which == 2 || evt.button == 4;\r\n        this._inSelectionMode = !isMiddleButton && !evt.altKey;\r\n\r\n        if (this._inSelectionMode) {\r\n            this._selectionStartX = this._sourcePointerX + 40;\r\n            this._selectionStartY = this._sourcePointerY;\r\n        }\r\n    }\r\n\r\n    private _onPointerMove(evt: React.PointerEvent<HTMLDivElement>) {\r\n        if (!this._pointerIsDown) {\r\n            return;\r\n        }\r\n\r\n        if (this._inSelectionMode) {\r\n            const style = this._selectionRectangle.current!.style;\r\n            style.visibility = \"visible\";\r\n\r\n            const localX = evt.nativeEvent.offsetX;\r\n            const localY = evt.nativeEvent.offsetY;\r\n\r\n            if (localX > this._selectionStartX) {\r\n                style.left = `${this._selectionStartX}px`;\r\n                style.width = `${localX - this._selectionStartX}px`;\r\n            } else {\r\n                style.left = `${localX}px`;\r\n                style.width = `${this._selectionStartX - localX}px`;\r\n            }\r\n\r\n            if (localY > this._selectionStartY) {\r\n                style.top = `${this._selectionStartY}px`;\r\n                style.height = `${localY - this._selectionStartY}px`;\r\n            } else {\r\n                style.top = `${localY}px`;\r\n                style.height = `${this._selectionStartY - localY}px`;\r\n            }\r\n            if (localX !== this._selectionStartX || localY !== this._selectionStartY) {\r\n                this._selectionMade = true;\r\n            }\r\n\r\n            this.props.context.onSelectionRectangleMoved.notifyObservers(this._selectionRectangle.current!.getBoundingClientRect());\r\n\r\n            return;\r\n        }\r\n\r\n        this._offsetX += (evt.nativeEvent.offsetX - this._sourcePointerX) * this._viewScale;\r\n        this._offsetY += (evt.nativeEvent.offsetY - this._sourcePointerY) * this._viewScale;\r\n\r\n        this._sourcePointerX = evt.nativeEvent.offsetX;\r\n        this._sourcePointerY = evt.nativeEvent.offsetY;\r\n\r\n        this.props.context.onGraphMoved.notifyObservers(this._offsetX);\r\n\r\n        this.forceUpdate();\r\n    }\r\n\r\n    private _onPointerUp(evt: React.PointerEvent<HTMLDivElement>) {\r\n        this._pointerIsDown = false;\r\n        evt.currentTarget.releasePointerCapture(evt.pointerId);\r\n\r\n        this._selectionRectangle.current!.style.visibility = \"hidden\";\r\n\r\n        if (!this._inSelectionMode || !this._selectionMade) {\r\n            this.props.context.clearSelection();\r\n        }\r\n\r\n        this._selectionMade = false;\r\n    }\r\n\r\n    private _onWheel(evt: React.WheelEvent) {\r\n        const delta = evt.deltaY < 0 ? -0.05 : 0.05;\r\n\r\n        const oldScale = this._viewScale;\r\n        this._viewScale = Math.min(Math.max(this._minScale, this._viewScale + delta * this._viewScale), this._maxScale);\r\n\r\n        const clientX = evt.nativeEvent.offsetX;\r\n        const clientY = evt.nativeEvent.offsetY;\r\n\r\n        const xDiff = clientX * oldScale - clientX * this._viewScale;\r\n        const yDiff = clientY * oldScale - clientY * this._viewScale;\r\n\r\n        this._offsetX -= xDiff;\r\n        this._offsetY -= yDiff;\r\n\r\n        this.forceUpdate();\r\n\r\n        evt.stopPropagation();\r\n\r\n        this.props.context.onGraphMoved.notifyObservers(this._offsetX);\r\n        this.props.context.onGraphScaled.notifyObservers(this._viewScale);\r\n    }\r\n\r\n    public override render() {\r\n        const scale = this._viewScale;\r\n        const viewBoxScalingCurves = `${-this._offsetX} ${-this._offsetY} ${Math.round(scale * this._viewCurveWidth)} ${Math.round(scale * this._viewHeight)}`;\r\n        const viewBoxScalingGrid = `0 ${-this._offsetY} ${Math.round(scale * this._viewWidth)} ${Math.round(scale * this._viewHeight)}`;\r\n        const viewBoxHorizontal = `${-this._offsetX} 0 ${Math.round((this._viewWidth - 40) * this._viewScale)}  ${Math.round(scale * this._viewHeight)}`;\r\n\r\n        let activeBoxLeft = 0;\r\n        let activeBoxRight = 0;\r\n        if (this.props.context.activeAnimations.length !== 0) {\r\n            const minFrame = this.props.context.referenceMinFrame;\r\n            const maxFrame = this.props.context.referenceMaxFrame;\r\n\r\n            activeBoxLeft = (((this.props.context.fromKey - minFrame) / (maxFrame - minFrame)) * this._graphAbsoluteWidth + this._offsetX) / this._viewScale;\r\n            activeBoxRight = (((this.props.context.toKey - minFrame) / (maxFrame - minFrame)) * this._graphAbsoluteWidth + this._offsetX) / this._viewScale;\r\n        }\r\n\r\n        return (\r\n            <div\r\n                id=\"graph\"\r\n                onWheel={(evt) => this._onWheel(evt)}\r\n                onPointerDown={(evt) => this._onPointerDown(evt)}\r\n                onPointerMove={(evt) => this._onPointerMove(evt)}\r\n                onPointerUp={(evt) => this._onPointerUp(evt)}\r\n            >\r\n                {this.props.context.activeAnimations.length !== 0 && (\r\n                    <div\r\n                        id=\"dark-rectangle\"\r\n                        style={{\r\n                            left: activeBoxLeft + \"px\",\r\n                            width: activeBoxRight - activeBoxLeft + \"px\",\r\n                        }}\r\n                    />\r\n                )}\r\n                <div id=\"block-rectangle\" />\r\n                <svg id=\"svg-graph-grid\" viewBox={viewBoxScalingGrid} ref={this._svgHost}>\r\n                    {this._buildYAxis()}\r\n                </svg>\r\n                <svg id=\"svg-graph-horizontal\" viewBox={viewBoxHorizontal}>\r\n                    {this._buildFrameIntervalAxis()}\r\n                </svg>\r\n                <svg ref={this._svgHost2} id=\"svg-graph-curves\" tabIndex={0} viewBox={viewBoxScalingCurves}>\r\n                    {this._curves.map((c, i) => {\r\n                        return <CurveComponent key={i} context={this.props.context} curve={c} convertX={(x) => this._convertX(x)} convertY={(y) => this._convertY(y)} />;\r\n                    })}\r\n                    {this._curves.map((c) => {\r\n                        return this._dropKeyFrames(c);\r\n                    })}\r\n                </svg>\r\n                <div ref={this._selectionRectangle} id=\"selection-rectangle\"></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]}