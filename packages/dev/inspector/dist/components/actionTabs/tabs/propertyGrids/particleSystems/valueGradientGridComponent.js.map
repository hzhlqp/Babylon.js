{"version":3,"file":"valueGradientGridComponent.js","sourceRoot":"","sources":["../../../../../../src/components/actionTabs/tabs/propertyGrids/particleSystems/valueGradientGridComponent.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport type { GlobalState } from \"../../../../globalState\";\r\nimport type { IValueGradient } from \"core/Misc/gradients\";\r\nimport { FactorGradient, ColorGradient, Color3Gradient } from \"core/Misc/gradients\";\r\nimport type { LockObject } from \"shared-ui-components/tabs/propertyGrids/lockObject\";\r\nimport { ButtonLineComponent } from \"shared-ui-components/lines/buttonLineComponent\";\r\nimport { FactorGradientStepGridComponent } from \"./factorGradientStepGridComponent\";\r\nimport type { Nullable } from \"core/types\";\r\nimport { ColorGradientStepGridComponent } from \"./colorGradientStepGridComponent\";\r\nimport { Color4, Color3 } from \"core/Maths/math.color\";\r\nimport { LinkButtonComponent } from \"shared-ui-components/lines/linkButtonComponent\";\r\nimport type { IParticleSystem } from \"core/Particles/IParticleSystem\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport enum GradientGridMode {\r\n    Factor,\r\n    Color3,\r\n    Color4,\r\n}\r\n\r\ninterface IValueGradientGridComponent {\r\n    globalState: GlobalState;\r\n    label: string;\r\n    gradients: Nullable<Array<IValueGradient>>;\r\n    lockObject: LockObject;\r\n    docLink?: string;\r\n    mode: GradientGridMode;\r\n    host: IParticleSystem;\r\n    codeRecorderPropertyName: string;\r\n    onCreateRequired: () => void;\r\n}\r\n\r\nexport class ValueGradientGridComponent extends React.Component<IValueGradientGridComponent> {\r\n    constructor(props: IValueGradientGridComponent) {\r\n        super(props);\r\n    }\r\n\r\n    deleteStep(step: IValueGradient) {\r\n        const gradients = this.props.gradients as Array<IValueGradient>;\r\n\r\n        const index = gradients.indexOf(step);\r\n\r\n        if (index > -1) {\r\n            gradients.splice(index, 1);\r\n            this.updateAndSync();\r\n        }\r\n    }\r\n\r\n    addNewStep() {\r\n        const gradients = this.props.gradients as Array<IValueGradient>;\r\n\r\n        switch (this.props.mode) {\r\n            case GradientGridMode.Factor: {\r\n                const newStep = new FactorGradient(1, 1, 1);\r\n                gradients.push(newStep);\r\n                break;\r\n            }\r\n            case GradientGridMode.Color4: {\r\n                const newStepColor = new ColorGradient(1, new Color4(1, 1, 1, 1), new Color4(1, 1, 1, 1));\r\n                gradients.push(newStepColor);\r\n                break;\r\n            }\r\n            case GradientGridMode.Color3: {\r\n                const newStepColor3 = new Color3Gradient(1, Color3.White());\r\n                gradients.push(newStepColor3);\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.props.host.forceRefreshGradients();\r\n\r\n        this.forceUpdate();\r\n    }\r\n\r\n    checkForReOrder() {\r\n        const gradients = this.props.gradients as Array<IValueGradient>;\r\n        gradients.sort((a, b) => {\r\n            if (a.gradient === b.gradient) {\r\n                return 0;\r\n            }\r\n\r\n            if (a.gradient > b.gradient) {\r\n                return 1;\r\n            }\r\n\r\n            return -1;\r\n        });\r\n\r\n        this.forceUpdate();\r\n    }\r\n\r\n    updateAndSync() {\r\n        this.props.host.forceRefreshGradients();\r\n\r\n        this.forceUpdate();\r\n    }\r\n\r\n    override render() {\r\n        const gradients = this.props.gradients as Nullable<Array<IValueGradient>>;\r\n\r\n        return (\r\n            <div>\r\n                {gradients && gradients.length > 0 && (\r\n                    <div className=\"gradient-container\">\r\n                        <LinkButtonComponent\r\n                            label={this.props.label}\r\n                            url={this.props.docLink}\r\n                            icon={faTrash}\r\n                            onIconClick={() => {\r\n                                gradients!.length = 0;\r\n                                this.updateAndSync();\r\n                            }}\r\n                            buttonLabel=\"Add new step\"\r\n                            onClick={() => this.addNewStep()}\r\n                        />\r\n                        {gradients.map((g, i) => {\r\n                            const codeRecorderPropertyName = this.props.codeRecorderPropertyName + `[${i}]`;\r\n                            switch (this.props.mode) {\r\n                                case GradientGridMode.Factor:\r\n                                    return (\r\n                                        <FactorGradientStepGridComponent\r\n                                            globalState={this.props.globalState}\r\n                                            lockObject={this.props.lockObject}\r\n                                            onCheckForReOrder={() => this.checkForReOrder()}\r\n                                            onUpdateGradient={() => this.updateAndSync()}\r\n                                            host={this.props.host}\r\n                                            codeRecorderPropertyName={codeRecorderPropertyName}\r\n                                            key={\"step-\" + i}\r\n                                            lineIndex={i}\r\n                                            gradient={g as FactorGradient}\r\n                                            onDelete={() => this.deleteStep(g)}\r\n                                        />\r\n                                    );\r\n                                case GradientGridMode.Color4:\r\n                                    return (\r\n                                        <ColorGradientStepGridComponent\r\n                                            globalState={this.props.globalState}\r\n                                            host={this.props.host}\r\n                                            codeRecorderPropertyName={codeRecorderPropertyName}\r\n                                            lockObject={this.props.lockObject}\r\n                                            isColor3={false}\r\n                                            onCheckForReOrder={() => this.checkForReOrder()}\r\n                                            onUpdateGradient={() => this.updateAndSync()}\r\n                                            key={\"step-\" + i}\r\n                                            lineIndex={i}\r\n                                            gradient={g as ColorGradient}\r\n                                            onDelete={() => this.deleteStep(g)}\r\n                                        />\r\n                                    );\r\n                                case GradientGridMode.Color3:\r\n                                    return (\r\n                                        <ColorGradientStepGridComponent\r\n                                            globalState={this.props.globalState}\r\n                                            host={this.props.host}\r\n                                            codeRecorderPropertyName={codeRecorderPropertyName}\r\n                                            lockObject={this.props.lockObject}\r\n                                            isColor3={true}\r\n                                            onCheckForReOrder={() => this.checkForReOrder()}\r\n                                            onUpdateGradient={() => this.updateAndSync()}\r\n                                            key={\"step-\" + i}\r\n                                            lineIndex={i}\r\n                                            gradient={g as Color3Gradient}\r\n                                            onDelete={() => this.deleteStep(g)}\r\n                                        />\r\n                                    );\r\n                            }\r\n                        })}\r\n                    </div>\r\n                )}\r\n                {(!gradients || gradients.length === 0) && (\r\n                    <ButtonLineComponent\r\n                        label={\"Use \" + this.props.label}\r\n                        onClick={() => {\r\n                            this.props.onCreateRequired();\r\n                            this.forceUpdate();\r\n                        }}\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]}