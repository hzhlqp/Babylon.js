{"version":3,"file":"bonePropertyGridComponent.js","sourceRoot":"","sources":["../../../../../../src/components/actionTabs/tabs/propertyGrids/meshes/bonePropertyGridComponent.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\n\r\nimport type { Observable } from \"core/Misc/observable\";\r\n\r\nimport type { PropertyChangedEvent } from \"../../../../propertyChangedEvent\";\r\nimport { LineContainerComponent } from \"shared-ui-components/lines/lineContainerComponent\";\r\nimport { TextLineComponent } from \"shared-ui-components/lines/textLineComponent\";\r\nimport type { LockObject } from \"shared-ui-components/tabs/propertyGrids/lockObject\";\r\nimport type { GlobalState } from \"../../../../globalState\";\r\nimport type { Bone } from \"core/Bones/bone\";\r\nimport { Vector3LineComponent } from \"shared-ui-components/lines/vector3LineComponent\";\r\nimport { QuaternionLineComponent } from \"../../../lines/quaternionLineComponent\";\r\n\r\ninterface IBonePropertyGridComponentProps {\r\n    globalState: GlobalState;\r\n    bone: Bone;\r\n    lockObject: LockObject;\r\n    onPropertyChangedObservable?: Observable<PropertyChangedEvent>;\r\n}\r\n\r\nexport class BonePropertyGridComponent extends React.Component<IBonePropertyGridComponentProps> {\r\n    constructor(props: IBonePropertyGridComponentProps) {\r\n        super(props);\r\n    }\r\n\r\n    onTransformNodeLink() {\r\n        if (!this.props.globalState.onSelectionChangedObservable) {\r\n            return;\r\n        }\r\n\r\n        const node = this.props.bone.getTransformNode()!;\r\n        this.props.globalState.onSelectionChangedObservable.notifyObservers(node);\r\n    }\r\n\r\n    override render() {\r\n        const bone = this.props.bone;\r\n\r\n        return (\r\n            <>\r\n                <LineContainerComponent title=\"GENERAL\" selection={this.props.globalState}>\r\n                    <TextLineComponent label=\"Name\" value={bone.name} />\r\n                    <TextLineComponent label=\"Index\" value={bone.getIndex().toString()} />\r\n                    <TextLineComponent label=\"Unique ID\" value={bone.uniqueId.toString()} />\r\n                    {bone.getParent() && (\r\n                        <TextLineComponent\r\n                            label=\"Parent\"\r\n                            value={bone.getParent()!.name}\r\n                            onLink={() => this.props.globalState.onSelectionChangedObservable.notifyObservers(bone.getParent())}\r\n                        />\r\n                    )}\r\n                    {bone.getTransformNode() && <TextLineComponent label=\"Linked node\" value={bone.getTransformNode()!.name} onLink={() => this.onTransformNodeLink()} />}\r\n                </LineContainerComponent>\r\n                <LineContainerComponent title=\"TRANSFORMATIONS\" selection={this.props.globalState}>\r\n                    <Vector3LineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Position\"\r\n                        target={bone}\r\n                        propertyName=\"position\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                    {!bone.rotationQuaternion && (\r\n                        <Vector3LineComponent\r\n                            lockObject={this.props.lockObject}\r\n                            label=\"Rotation\"\r\n                            useEuler={this.props.globalState.onlyUseEulers}\r\n                            target={bone}\r\n                            propertyName=\"rotation\"\r\n                            step={0.01}\r\n                            onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        />\r\n                    )}\r\n                    {bone.rotationQuaternion && (\r\n                        <QuaternionLineComponent\r\n                            lockObject={this.props.lockObject}\r\n                            label=\"Rotation\"\r\n                            useEuler={this.props.globalState.onlyUseEulers}\r\n                            target={bone}\r\n                            propertyName=\"rotationQuaternion\"\r\n                            onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        />\r\n                    )}\r\n                    <Vector3LineComponent\r\n                        lockObject={this.props.lockObject}\r\n                        label=\"Scaling\"\r\n                        target={bone}\r\n                        propertyName=\"scaling\"\r\n                        onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                    />\r\n                </LineContainerComponent>\r\n            </>\r\n        );\r\n    }\r\n}\r\n"]}