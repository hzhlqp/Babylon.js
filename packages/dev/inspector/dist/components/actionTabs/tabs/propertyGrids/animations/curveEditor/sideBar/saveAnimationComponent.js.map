{"version":3,"file":"saveAnimationComponent.js","sourceRoot":"","sources":["../../../../../../../../src/components/actionTabs/tabs/propertyGrids/animations/curveEditor/sideBar/saveAnimationComponent.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport { StringTools } from \"shared-ui-components/stringTools\";\r\nimport type { GlobalState } from \"../../../../../../globalState\";\r\nimport type { Context } from \"../context\";\r\nimport { Animation } from \"core/Animations/animation\";\r\nimport type { TargetedAnimation } from \"core/Animations/animationGroup\";\r\n\r\ninterface ISaveAnimationComponentProps {\r\n    globalState: GlobalState;\r\n    context: Context;\r\n}\r\n\r\ninterface ISaveAnimationComponentState {}\r\n\r\nexport class SaveAnimationComponent extends React.Component<ISaveAnimationComponentProps, ISaveAnimationComponentState> {\r\n    private _selectedAnimations: Animation[] = [];\r\n    private _root: React.RefObject<HTMLDivElement>;\r\n\r\n    constructor(props: ISaveAnimationComponentProps) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n\r\n        this._root = React.createRef();\r\n\r\n        if (this.props.context.animations) {\r\n            if (this.props.context.useTargetAnimations) {\r\n                for (const targetedAnimation of this.props.context.animations as TargetedAnimation[]) {\r\n                    this._selectedAnimations.push(targetedAnimation.animation);\r\n                }\r\n            } else {\r\n                this._selectedAnimations = (this.props.context.animations as Animation[]).slice(0);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _getJson() {\r\n        const json: { animations: any[] } = {\r\n            animations: [],\r\n        };\r\n\r\n        for (const animation of this._selectedAnimations) {\r\n            json.animations.push(animation.serialize());\r\n        }\r\n\r\n        return JSON.stringify(json);\r\n    }\r\n\r\n    public saveToSnippetServer() {\r\n        const xmlHttp = new XMLHttpRequest();\r\n        const hostDocument = this._root.current!.ownerDocument;\r\n\r\n        const json = this._getJson();\r\n\r\n        xmlHttp.onreadystatechange = () => {\r\n            if (xmlHttp.readyState == 4) {\r\n                if (xmlHttp.status == 200) {\r\n                    const snippet = JSON.parse(xmlHttp.responseText);\r\n                    const oldId = this.props.context.snippetId;\r\n                    this.props.context.snippetId = snippet.id;\r\n                    if (snippet.version && snippet.version != \"0\") {\r\n                        this.props.context.snippetId += \"#\" + snippet.version;\r\n                    }\r\n\r\n                    this.forceUpdate();\r\n\r\n                    const windowAsAny = window as any;\r\n\r\n                    if (windowAsAny.Playground && oldId) {\r\n                        windowAsAny.Playground.onRequestCodeChangeObservable.notifyObservers({\r\n                            regex: new RegExp(oldId, \"g\"),\r\n                            replace: this.props.context.snippetId,\r\n                        });\r\n                    }\r\n\r\n                    hostDocument.defaultView!.alert(\"Animations saved with ID: \" + this.props.context.snippetId);\r\n                } else {\r\n                    hostDocument.defaultView!.alert(\r\n                        `Unable to save your animations. It may be too large (${(dataToSend.payload.length / 1024).toFixed(\r\n                            2\r\n                        )} KB). Please try reducing the number of animations or the number of keys per animation and try again.`\r\n                    );\r\n                }\r\n            }\r\n        };\r\n\r\n        xmlHttp.open(\"POST\", Animation.SnippetUrl + (this.props.context.snippetId ? \"/\" + this.props.context.snippetId : \"\"), true);\r\n        xmlHttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n\r\n        const dataToSend = {\r\n            payload: JSON.stringify({\r\n                animations: json,\r\n            }),\r\n            name: \"\",\r\n            description: \"\",\r\n            tags: \"\",\r\n        };\r\n\r\n        xmlHttp.send(JSON.stringify(dataToSend));\r\n    }\r\n\r\n    public saveToFile() {\r\n        StringTools.DownloadAsFile(this._root.current!.ownerDocument, this._getJson(), \"animations.json\");\r\n    }\r\n\r\n    public override render() {\r\n        return (\r\n            <div id=\"save-animation-pane\" ref={this._root}>\r\n                <div id=\"save-animation-list\">\r\n                    {this.props.context.animations?.map((a: Animation | TargetedAnimation, i: number) => {\r\n                        const animation = this.props.context.useTargetAnimations ? (a as TargetedAnimation).animation : (a as Animation);\r\n\r\n                        return (\r\n                            <div className=\"save-animation-list-entry\" key={i}>\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    value={animation.name}\r\n                                    defaultChecked={true}\r\n                                    onClick={(evt) => {\r\n                                        if (evt.currentTarget.checked) {\r\n                                            this._selectedAnimations.push(animation);\r\n                                        } else {\r\n                                            const index = this._selectedAnimations.indexOf(animation);\r\n\r\n                                            if (index > -1) {\r\n                                                this._selectedAnimations.splice(index, 1);\r\n                                            }\r\n                                        }\r\n                                    }}\r\n                                />\r\n                                {animation.name}\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n                <div id=\"save-animation-buttons\">\r\n                    <button\r\n                        className=\"simple-button\"\r\n                        id=\"save-snippet\"\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                            this.saveToSnippetServer();\r\n                        }}\r\n                    >\r\n                        Save Snippet\r\n                    </button>\r\n                    <button\r\n                        className=\"simple-button\"\r\n                        id=\"save-file\"\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                            this.saveToFile();\r\n                        }}\r\n                    >\r\n                        Save File\r\n                    </button>\r\n                </div>\r\n                {this.props.context.snippetId && <div id=\"save-animation-snippet\">Snippet ID: {this.props.context.snippetId}</div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]}