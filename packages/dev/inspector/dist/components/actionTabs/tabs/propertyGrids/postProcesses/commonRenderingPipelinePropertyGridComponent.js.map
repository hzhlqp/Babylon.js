{"version":3,"file":"commonRenderingPipelinePropertyGridComponent.js","sourceRoot":"","sources":["../../../../../../src/components/actionTabs/tabs/propertyGrids/postProcesses/commonRenderingPipelinePropertyGridComponent.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAK/B,OAAO,EAAE,sBAAsB,EAAE,MAAM,mDAAmD,CAAC;AAC3F,OAAO,EAAE,iBAAiB,EAAE,MAAM,8CAA8C,CAAC;AAIjF,OAAO,EAAE,mBAAmB,EAAE,MAAM,gDAAgD,CAAC;AACrF,OAAO,EAAE,2BAA2B,EAAE,MAAM,gCAAgC,CAAC;AAS7E,MAAM,OAAO,4CAA6C,SAAQ,KAAK,CAAC,SAA6D;IACjI,YAAY,KAAyD;QACjE,KAAK,CAAC,KAAK,CAAC,CAAC;IACjB,CAAC;IAEQ,MAAM;QACX,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC;QACjD,MAAM,mBAAmB,GAAG,cAAqB,CAAC;QAElD,OAAO,CACH,0BACI,KAAC,2BAA2B,IACxB,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,EACnC,MAAM,EAAE,cAAc,EACtB,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,EACjC,2BAA2B,EAAE,IAAI,CAAC,KAAK,CAAC,2BAA2B,GACrE,EACF,MAAC,sBAAsB,IAAC,KAAK,EAAC,SAAS,EAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,aACrE,KAAC,iBAAiB,IAAC,KAAK,EAAC,MAAM,EAAC,KAAK,EAAE,cAAc,CAAC,IAAI,GAAI,EAC9D,KAAC,iBAAiB,IAAC,KAAK,EAAC,OAAO,EAAC,KAAK,EAAE,cAAc,CAAC,YAAY,EAAE,GAAI,EACxE,mBAAmB,CAAC,OAAO,KAAK,SAAS,IAAI,CAC1C,KAAC,mBAAmB,IAChB,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,EACjC,KAAK,EAAC,SAAS,EACf,OAAO,EAAE,CAAC,EACV,OAAO,EAAE,EAAE,EACX,IAAI,EAAE,CAAC,EACP,YAAY,EAAE,CAAC,EACf,MAAM,EAAE,cAAc,EACtB,YAAY,EAAC,SAAS,EACtB,2BAA2B,EAAE,IAAI,CAAC,KAAK,CAAC,2BAA2B,GACrE,CACL,IACoB,IACvB,CACT,CAAC;IACN,CAAC;CACJ","sourcesContent":["import * as React from \"react\";\r\n\r\nimport type { Observable } from \"core/Misc/observable\";\r\n\r\nimport type { PropertyChangedEvent } from \"../../../../propertyChangedEvent\";\r\nimport { LineContainerComponent } from \"shared-ui-components/lines/lineContainerComponent\";\r\nimport { TextLineComponent } from \"shared-ui-components/lines/textLineComponent\";\r\nimport type { LockObject } from \"shared-ui-components/tabs/propertyGrids/lockObject\";\r\nimport type { PostProcessRenderPipeline } from \"core/PostProcesses/RenderPipeline/postProcessRenderPipeline\";\r\nimport type { GlobalState } from \"../../../../globalState\";\r\nimport { SliderLineComponent } from \"shared-ui-components/lines/sliderLineComponent\";\r\nimport { CustomPropertyGridComponent } from \"../customPropertyGridComponent\";\r\n\r\ninterface ICommonRenderingPipelinePropertyGridComponentProps {\r\n    globalState: GlobalState;\r\n    renderPipeline: PostProcessRenderPipeline;\r\n    lockObject: LockObject;\r\n    onPropertyChangedObservable?: Observable<PropertyChangedEvent>;\r\n}\r\n\r\nexport class CommonRenderingPipelinePropertyGridComponent extends React.Component<ICommonRenderingPipelinePropertyGridComponentProps> {\r\n    constructor(props: ICommonRenderingPipelinePropertyGridComponentProps) {\r\n        super(props);\r\n    }\r\n\r\n    override render() {\r\n        const renderPipeline = this.props.renderPipeline;\r\n        const renderPipelineAsAny = renderPipeline as any;\r\n\r\n        return (\r\n            <div>\r\n                <CustomPropertyGridComponent\r\n                    globalState={this.props.globalState}\r\n                    target={renderPipeline}\r\n                    lockObject={this.props.lockObject}\r\n                    onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                />\r\n                <LineContainerComponent title=\"GENERAL\" selection={this.props.globalState}>\r\n                    <TextLineComponent label=\"Name\" value={renderPipeline.name} />\r\n                    <TextLineComponent label=\"Class\" value={renderPipeline.getClassName()} />\r\n                    {renderPipelineAsAny.samples !== undefined && (\r\n                        <SliderLineComponent\r\n                            lockObject={this.props.lockObject}\r\n                            label=\"Samples\"\r\n                            minimum={1}\r\n                            maximum={64}\r\n                            step={1}\r\n                            decimalCount={0}\r\n                            target={renderPipeline}\r\n                            propertyName=\"samples\"\r\n                            onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                        />\r\n                    )}\r\n                </LineContainerComponent>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]}