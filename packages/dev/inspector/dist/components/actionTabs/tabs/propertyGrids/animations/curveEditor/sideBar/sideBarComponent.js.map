{"version":3,"file":"sideBarComponent.js","sourceRoot":"","sources":["../../../../../../../../src/components/actionTabs/tabs/propertyGrids/animations/curveEditor/sideBar/sideBarComponent.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport type { GlobalState } from \"../../../../../../globalState\";\r\nimport { ActionButtonComponent } from \"../controls/actionButtonComponent\";\r\nimport type { Context } from \"../context\";\r\nimport type { Animation } from \"core/Animations/animation\";\r\nimport { AnimationListComponent } from \"./animationListComponent\";\r\nimport { TextInputComponent } from \"../controls/textInputComponent\";\r\nimport { SaveAnimationComponent } from \"./saveAnimationComponent\";\r\nimport { LoadAnimationComponent } from \"./loadAnimationComponent\";\r\nimport { AddAnimationComponent } from \"./addAnimationComponent\";\r\nimport { EditAnimationComponent } from \"./editAnimationComponent\";\r\nimport type { TargetedAnimation } from \"core/Animations/animationGroup\";\r\n\r\nimport \"../scss/sideBar.scss\";\r\n\r\nimport addIcon from \"../assets/addAnimationIcon.svg\";\r\nimport loadIcon from \"../assets/loadIcon.svg\";\r\nimport saveIcon from \"../assets/saveIcon.svg\";\r\nimport editIcon from \"../assets/editIcon.svg\";\r\n\r\ninterface ISideBarComponentProps {\r\n    globalState: GlobalState;\r\n    context: Context;\r\n}\r\n\r\ninterface ISideBarComponentState {\r\n    mode: Mode;\r\n}\r\n\r\nenum Mode {\r\n    Edit,\r\n    Add,\r\n    Load,\r\n    Save,\r\n}\r\n\r\nexport class SideBarComponent extends React.Component<ISideBarComponentProps, ISideBarComponentState> {\r\n    constructor(props: ISideBarComponentProps) {\r\n        super(props);\r\n\r\n        this.state = { mode: Mode.Edit };\r\n\r\n        this.props.context.onDeleteAnimation.add((animationToDelete) => {\r\n            const indexInActiveList = this.props.context.activeAnimations.indexOf(animationToDelete);\r\n\r\n            if (indexInActiveList !== -1) {\r\n                this.props.context.activeAnimations.splice(indexInActiveList, 1);\r\n                this.props.context.onActiveAnimationChanged.notifyObservers({});\r\n            }\r\n\r\n            let index = -1;\r\n            if (this.props.context.useTargetAnimations) {\r\n                const targetedAnimations = this.props.context.animations as TargetedAnimation[];\r\n\r\n                for (let i = 0; i < targetedAnimations.length; i++) {\r\n                    if (targetedAnimations[i].animation === animationToDelete) {\r\n                        index = i;\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                index = (this.props.context.animations as Animation[])!.indexOf(animationToDelete);\r\n            }\r\n\r\n            if (index > -1) {\r\n                this.props.context.animations!.splice(index, 1);\r\n                this.forceUpdate();\r\n            }\r\n        });\r\n\r\n        this.props.context.onAnimationsLoaded.add(() => this.setState({ mode: Mode.Edit }));\r\n    }\r\n\r\n    private _onAddAnimation() {\r\n        if (this.state.mode === Mode.Add) {\r\n            return;\r\n        }\r\n\r\n        this.setState({ mode: Mode.Add });\r\n    }\r\n\r\n    private _onLoadAnimation() {\r\n        if (this.state.mode === Mode.Load) {\r\n            return;\r\n        }\r\n\r\n        this.setState({ mode: Mode.Load });\r\n    }\r\n\r\n    private _onSaveAnimation() {\r\n        if (this.state.mode === Mode.Save) {\r\n            return;\r\n        }\r\n\r\n        this.setState({ mode: Mode.Save });\r\n    }\r\n\r\n    private _onEditAnimation() {\r\n        if (this.state.mode === Mode.Edit) {\r\n            return;\r\n        }\r\n\r\n        this.setState({ mode: Mode.Edit });\r\n    }\r\n\r\n    public override render() {\r\n        let fps = \"60\";\r\n\r\n        if (this.props.context.animations && this.props.context.animations.length) {\r\n            if (this.props.context.useTargetAnimations) {\r\n                fps = (this.props.context.animations[0] as TargetedAnimation).animation.framePerSecond.toString();\r\n            } else {\r\n                fps = (this.props.context.animations[0] as Animation).framePerSecond.toString();\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div id=\"sideBar\">\r\n                <div id=\"menu-bar\" className={this.props.context.useTargetAnimations ? \"small\" : \"\"}>\r\n                    {!this.props.context.useTargetAnimations && (\r\n                        <ActionButtonComponent\r\n                            tooltip=\"Add new animation\"\r\n                            isActive={this.state.mode === Mode.Add}\r\n                            id=\"add-animation\"\r\n                            globalState={this.props.globalState}\r\n                            context={this.props.context}\r\n                            icon={addIcon}\r\n                            onClick={() => this._onAddAnimation()}\r\n                        />\r\n                    )}\r\n                    {!this.props.context.useTargetAnimations && (\r\n                        <ActionButtonComponent\r\n                            tooltip=\"Load animations\"\r\n                            isActive={this.state.mode === Mode.Load}\r\n                            id=\"load-animation\"\r\n                            globalState={this.props.globalState}\r\n                            context={this.props.context}\r\n                            icon={loadIcon}\r\n                            onClick={() => this._onLoadAnimation()}\r\n                        />\r\n                    )}\r\n                    <ActionButtonComponent\r\n                        tooltip=\"save current animations\"\r\n                        isActive={this.state.mode === Mode.Save}\r\n                        id=\"save-animation\"\r\n                        globalState={this.props.globalState}\r\n                        context={this.props.context}\r\n                        icon={saveIcon}\r\n                        onClick={() => this._onSaveAnimation()}\r\n                    />\r\n                    <ActionButtonComponent\r\n                        tooltip=\"Edit animations\"\r\n                        isActive={this.state.mode === Mode.Edit}\r\n                        id=\"edit-animation\"\r\n                        globalState={this.props.globalState}\r\n                        context={this.props.context}\r\n                        icon={editIcon}\r\n                        onClick={() => this._onEditAnimation()}\r\n                    />\r\n\r\n                    <TextInputComponent\r\n                        value={fps}\r\n                        complement=\" fps\"\r\n                        isNumber={true}\r\n                        onValueAsNumberChanged={(value) => {\r\n                            this.props.context.animations?.forEach((anim: Animation | TargetedAnimation) => {\r\n                                if (this.props.context.useTargetAnimations) {\r\n                                    (anim as TargetedAnimation).animation.framePerSecond = value;\r\n                                } else {\r\n                                    (anim as Animation).framePerSecond = value;\r\n                                }\r\n                            });\r\n                        }}\r\n                        tooltip=\"Framerate\"\r\n                        id=\"framerate-animation\"\r\n                        globalState={this.props.globalState}\r\n                        context={this.props.context}\r\n                    />\r\n                </div>\r\n                {this.state.mode === Mode.Edit && (\r\n                    <>\r\n                        <AnimationListComponent globalState={this.props.globalState} context={this.props.context} />\r\n                        <EditAnimationComponent globalState={this.props.globalState} context={this.props.context} />\r\n                    </>\r\n                )}\r\n                {this.state.mode === Mode.Save && <SaveAnimationComponent globalState={this.props.globalState} context={this.props.context} />}\r\n                {this.state.mode === Mode.Load && <LoadAnimationComponent globalState={this.props.globalState} context={this.props.context} />}\r\n                {this.state.mode === Mode.Add && <AddAnimationComponent globalState={this.props.globalState} context={this.props.context} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]}