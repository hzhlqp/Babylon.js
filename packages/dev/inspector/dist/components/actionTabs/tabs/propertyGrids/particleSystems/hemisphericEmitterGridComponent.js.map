{"version":3,"file":"hemisphericEmitterGridComponent.js","sourceRoot":"","sources":["../../../../../../src/components/actionTabs/tabs/propertyGrids/particleSystems/hemisphericEmitterGridComponent.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAK/B,OAAO,EAAE,mBAAmB,EAAE,MAAM,gDAAgD,CAAC;AACrF,OAAO,EAAE,kBAAkB,EAAE,MAAM,+CAA+C,CAAC;AAWnF,MAAM,OAAO,+BAAgC,SAAQ,KAAK,CAAC,SAAgD;IACvG,YAAY,KAA4C;QACpD,KAAK,CAAC,KAAK,CAAC,CAAC;IACjB,CAAC;IAEQ,MAAM;QACX,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;QACnC,OAAO,CACH,8BACI,KAAC,kBAAkB,IACf,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,EACjC,KAAK,EAAC,QAAQ,EACd,MAAM,EAAE,OAAO,EACf,YAAY,EAAC,QAAQ,EACrB,2BAA2B,EAAE,IAAI,CAAC,KAAK,CAAC,2BAA2B,GACrE,EACF,KAAC,mBAAmB,IAChB,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,EACjC,KAAK,EAAC,cAAc,EACpB,MAAM,EAAE,OAAO,EACf,YAAY,EAAC,aAAa,EAC1B,OAAO,EAAE,CAAC,EACV,OAAO,EAAE,CAAC,EACV,IAAI,EAAE,IAAI,EACV,2BAA2B,EAAE,IAAI,CAAC,KAAK,CAAC,2BAA2B,GACrE,EACF,KAAC,mBAAmB,IAChB,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,EACjC,KAAK,EAAC,sBAAsB,EAC5B,MAAM,EAAE,OAAO,EACf,YAAY,EAAC,qBAAqB,EAClC,OAAO,EAAE,CAAC,EACV,OAAO,EAAE,CAAC,EACV,IAAI,EAAE,IAAI,EACV,2BAA2B,EAAE,IAAI,CAAC,KAAK,CAAC,2BAA2B,GACrE,IACH,CACN,CAAC;IACN,CAAC;CACJ","sourcesContent":["import * as React from \"react\";\r\n\r\nimport type { Observable } from \"core/Misc/observable\";\r\nimport type { GlobalState } from \"../../../../globalState\";\r\nimport type { PropertyChangedEvent } from \"../../../../propertyChangedEvent\";\r\nimport { SliderLineComponent } from \"shared-ui-components/lines/sliderLineComponent\";\r\nimport { FloatLineComponent } from \"shared-ui-components/lines/floatLineComponent\";\r\nimport type { LockObject } from \"shared-ui-components/tabs/propertyGrids/lockObject\";\r\nimport type { HemisphericParticleEmitter } from \"core/Particles/EmitterTypes/hemisphericParticleEmitter\";\r\n\r\ninterface IHemisphericEmitterGridComponentProps {\r\n    globalState: GlobalState;\r\n    emitter: HemisphericParticleEmitter;\r\n    lockObject: LockObject;\r\n    onPropertyChangedObservable?: Observable<PropertyChangedEvent>;\r\n}\r\n\r\nexport class HemisphericEmitterGridComponent extends React.Component<IHemisphericEmitterGridComponentProps> {\r\n    constructor(props: IHemisphericEmitterGridComponentProps) {\r\n        super(props);\r\n    }\r\n\r\n    override render() {\r\n        const emitter = this.props.emitter;\r\n        return (\r\n            <>\r\n                <FloatLineComponent\r\n                    lockObject={this.props.lockObject}\r\n                    label=\"Radius\"\r\n                    target={emitter}\r\n                    propertyName=\"radius\"\r\n                    onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                />\r\n                <SliderLineComponent\r\n                    lockObject={this.props.lockObject}\r\n                    label=\"Radius range\"\r\n                    target={emitter}\r\n                    propertyName=\"radiusRange\"\r\n                    minimum={0}\r\n                    maximum={1}\r\n                    step={0.01}\r\n                    onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                />\r\n                <SliderLineComponent\r\n                    lockObject={this.props.lockObject}\r\n                    label=\"Direction randomizer\"\r\n                    target={emitter}\r\n                    propertyName=\"directionRandomizer\"\r\n                    minimum={0}\r\n                    maximum={1}\r\n                    step={0.01}\r\n                    onPropertyChangedObservable={this.props.onPropertyChangedObservable}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n"]}