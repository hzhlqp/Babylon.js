{"version":3,"file":"globalState.js","sourceRoot":"","sources":["../../src/components/globalState.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/naming-convention */\r\n// eslint-disable-next-line import/no-internal-modules\r\nimport { GLTFLoaderAnimationStartMode, GLTFLoaderCoordinateSystemMode } from \"loaders/glTF/index\";\r\nimport type { IGLTFValidationResults } from \"babylonjs-gltf2interface\";\r\n\r\nimport type { Nullable } from \"core/types\";\r\nimport type { Observer } from \"core/Misc/observable\";\r\nimport { Observable } from \"core/Misc/observable\";\r\nimport type { ISceneLoaderPlugin, ISceneLoaderPluginAsync } from \"core/Loading/sceneLoader\";\r\nimport type { Scene } from \"core/scene\";\r\nimport type { Light } from \"core/Lights/light\";\r\nimport type { Camera } from \"core/Cameras/camera\";\r\nimport { LightGizmo } from \"core/Gizmos/lightGizmo\";\r\nimport { CameraGizmo } from \"core/Gizmos/cameraGizmo\";\r\nimport type { PropertyChangedEvent } from \"./propertyChangedEvent\";\r\nimport { ReplayRecorder } from \"./replayRecorder\";\r\nimport { DataStorage } from \"core/Misc/dataStorage\";\r\n// eslint-disable-next-line import/no-internal-modules\r\nimport type { IGLTFLoaderExtension, GLTFFileLoader } from \"loaders/glTF/index\";\r\n\r\nexport class GlobalState {\r\n    public onSelectionChangedObservable: Observable<any>;\r\n    public onPropertyChangedObservable: Observable<PropertyChangedEvent>;\r\n    public onInspectorClosedObservable = new Observable<Scene>();\r\n    public onTabChangedObservable = new Observable<number>();\r\n    public onSelectionRenamedObservable = new Observable<void>();\r\n    public onPluginActivatedObserver: Nullable<Observer<ISceneLoaderPlugin | ISceneLoaderPluginAsync>>;\r\n    public onNewSceneObservable = new Observable<Scene>();\r\n    public sceneImportDefaults: { [key: string]: any } = {};\r\n\r\n    public validationResults: Nullable<IGLTFValidationResults> = null;\r\n    public onValidationResultsUpdatedObservable = new Observable<Nullable<IGLTFValidationResults>>();\r\n\r\n    public onExtensionLoadedObservable: Observable<IGLTFLoaderExtension>;\r\n\r\n    public glTFLoaderOverrideExtensionsConfig = false;\r\n    public glTFLoaderExtensionDefaults: { [name: string]: { [key: string]: any } } = {\r\n        MSFT_lod: { enabled: true, maxLODsToLoad: 10 },\r\n        MSFT_minecraftMesh: { enabled: true },\r\n        MSFT_sRGBFactors: { enabled: true },\r\n        MSFT_audio_emitter: { enabled: true },\r\n        KHR_xmp_json_ld: { enabled: true },\r\n        KHR_draco_mesh_compression: { enabled: true },\r\n        KHR_mesh_quantization: { enabled: true },\r\n        KHR_materials_pbrSpecularGlossiness: { enabled: true },\r\n        KHR_materials_clearcoat: { enabled: true },\r\n        KHR_materials_iridescence: { enabled: true },\r\n        KHR_materials_anisotropy: { enabled: true },\r\n        KHR_materials_emissive_strength: { enabled: true },\r\n        KHR_materials_ior: { enabled: true },\r\n        KHR_materials_sheen: { enabled: true },\r\n        KHR_materials_specular: { enabled: true },\r\n        KHR_materials_unlit: { enabled: true },\r\n        KHR_materials_variants: { enabled: true },\r\n        KHR_materials_transmission: { enabled: true },\r\n        KHR_materials_diffuse_transmission: { enabled: true },\r\n        KHR_materials_volume: { enabled: true },\r\n        KHR_materials_dispersion: { enabled: true },\r\n        KHR_lights_punctual: { enabled: true },\r\n        KHR_texture_basisu: { enabled: true },\r\n        KHR_texture_transform: { enabled: true },\r\n        EXT_lights_image_based: { enabled: true },\r\n        EXT_mesh_gpu_instancing: { enabled: true },\r\n        EXT_texture_webp: { enabled: true },\r\n        EXT_texture_avif: { enabled: true },\r\n    };\r\n\r\n    public glTFLoaderOverrideConfig = false;\r\n    public glTFLoaderDefaults: { [key: string]: any } = {\r\n        alwaysComputeBoundingBox: false,\r\n        alwaysComputeSkeletonRootNode: false,\r\n        animationStartMode: typeof GLTFLoaderAnimationStartMode !== \"undefined\" ? GLTFLoaderAnimationStartMode.FIRST : 1,\r\n        capturePerformanceCounters: false,\r\n        compileMaterials: false,\r\n        compileShadowGenerators: false,\r\n        coordinateSystemMode: typeof GLTFLoaderCoordinateSystemMode !== \"undefined\" ? GLTFLoaderCoordinateSystemMode.AUTO : 0,\r\n        createInstances: true,\r\n        loadAllMaterials: false,\r\n        loggingEnabled: false,\r\n        targetFps: 60,\r\n        transparencyAsCoverage: false,\r\n        useClipPlane: false,\r\n        useSRGBBuffers: true,\r\n    };\r\n\r\n    public glTFLoaderExtensions: { [key: string]: IGLTFLoaderExtension } = {};\r\n\r\n    public blockMutationUpdates = false;\r\n    public selectedLineContainerTitles: Array<string> = [];\r\n    public selectedLineContainerTitlesNoFocus: Array<string> = [];\r\n\r\n    public recorder = new ReplayRecorder();\r\n\r\n    private _onlyUseEulers: Nullable<boolean> = null;\r\n\r\n    public get onlyUseEulers(): boolean {\r\n        if (this._onlyUseEulers === null) {\r\n            this._onlyUseEulers = DataStorage.ReadBoolean(\"settings_onlyUseEulers\", true);\r\n        }\r\n\r\n        return this._onlyUseEulers!;\r\n    }\r\n\r\n    public set onlyUseEulers(value: boolean) {\r\n        this._onlyUseEulers = value;\r\n\r\n        DataStorage.WriteBoolean(\"settings_onlyUseEulers\", value);\r\n    }\r\n\r\n    private _ignoreBackfacesForPicking: Nullable<boolean> = null;\r\n\r\n    public get ignoreBackfacesForPicking(): boolean {\r\n        if (this._ignoreBackfacesForPicking === null) {\r\n            this._ignoreBackfacesForPicking = DataStorage.ReadBoolean(\"settings_ignoreBackfacesForPicking\", false);\r\n        }\r\n\r\n        return this._ignoreBackfacesForPicking!;\r\n    }\r\n\r\n    public set ignoreBackfacesForPicking(value: boolean) {\r\n        this._ignoreBackfacesForPicking = value;\r\n\r\n        DataStorage.WriteBoolean(\"settings_ignoreBackfacesForPicking\", value);\r\n    }\r\n\r\n    public init(propertyChangedObservable: Observable<PropertyChangedEvent>) {\r\n        this.onPropertyChangedObservable = propertyChangedObservable;\r\n\r\n        this.onNewSceneObservable.add(() => {\r\n            this.recorder.cancel();\r\n        });\r\n    }\r\n\r\n    public prepareGLTFPlugin(loader: GLTFFileLoader) {\r\n        this.glTFLoaderExtensions = {};\r\n\r\n        if (this.glTFLoaderOverrideConfig) {\r\n            const loaderState = this.glTFLoaderDefaults;\r\n            if (loaderState !== undefined) {\r\n                for (const key in loaderState) {\r\n                    (loader as any)[key] = loaderState[key];\r\n                }\r\n            }\r\n        }\r\n\r\n        loader.onExtensionLoadedObservable.add((extension: import(\"loaders/glTF/index\").IGLTFLoaderExtension) => {\r\n            if (this.glTFLoaderOverrideExtensionsConfig) {\r\n                const extensionState = this.glTFLoaderExtensionDefaults[extension.name];\r\n                if (extensionState !== undefined) {\r\n                    for (const key in extensionState) {\r\n                        (extension as any)[key] = extensionState[key];\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.glTFLoaderExtensions[extension.name] = extension;\r\n        });\r\n\r\n        loader.onValidatedObservable.add((results: IGLTFValidationResults) => {\r\n            this.validationResults = results;\r\n            this.onValidationResultsUpdatedObservable.notifyObservers(results);\r\n\r\n            if (results.issues.numErrors || results.issues.numWarnings) {\r\n                this.selectedLineContainerTitlesNoFocus.push(\"GLTF VALIDATION\");\r\n                this.onTabChangedObservable.notifyObservers(3);\r\n            }\r\n        });\r\n    }\r\n\r\n    public resetGLTFValidationResults() {\r\n        if (this.validationResults) {\r\n            this.validationResults = null;\r\n            this.onValidationResultsUpdatedObservable.notifyObservers(null);\r\n        }\r\n    }\r\n\r\n    // Light gizmos\r\n    public lightGizmos: Array<LightGizmo> = [];\r\n    public enableLightGizmo(light: Light, enable = true, gizmoCamera: Nullable<Camera> = null) {\r\n        if (enable) {\r\n            if (!light.reservedDataStore) {\r\n                light.reservedDataStore = {};\r\n            }\r\n            if (!light.reservedDataStore.lightGizmo) {\r\n                light.reservedDataStore.lightGizmo = new LightGizmo();\r\n                this.lightGizmos.push(light.reservedDataStore.lightGizmo);\r\n                light.reservedDataStore.lightGizmo.light = light;\r\n                light.reservedDataStore.lightGizmo.material.reservedDataStore = { hidden: true };\r\n                if (gizmoCamera) {\r\n                    light.reservedDataStore.lightGizmo.gizmoLayer.setRenderCamera(gizmoCamera);\r\n                }\r\n            }\r\n        } else if (light.reservedDataStore && light.reservedDataStore.lightGizmo) {\r\n            this.lightGizmos.splice(this.lightGizmos.indexOf(light.reservedDataStore.lightGizmo), 1);\r\n            light.reservedDataStore.lightGizmo.dispose();\r\n            light.reservedDataStore.lightGizmo = null;\r\n        }\r\n    }\r\n    // Camera gizmos\r\n    public cameraGizmos: Array<CameraGizmo> = [];\r\n    public enableCameraGizmo(camera: Camera, enable = true, gizmoCamera: Nullable<Camera> = null) {\r\n        if (enable) {\r\n            if (!camera.reservedDataStore) {\r\n                camera.reservedDataStore = {};\r\n            }\r\n            if (!camera.reservedDataStore.cameraGizmo) {\r\n                camera.reservedDataStore.cameraGizmo = new CameraGizmo();\r\n                this.cameraGizmos.push(camera.reservedDataStore.cameraGizmo);\r\n                camera.reservedDataStore.cameraGizmo.camera = camera;\r\n                camera.reservedDataStore.cameraGizmo.material.reservedDataStore = { hidden: true };\r\n                if (gizmoCamera) {\r\n                    camera.reservedDataStore.cameraGizmo.gizmoLayer.setRenderCamera(gizmoCamera);\r\n                }\r\n            }\r\n        } else if (camera.reservedDataStore && camera.reservedDataStore.cameraGizmo) {\r\n            this.cameraGizmos.splice(this.cameraGizmos.indexOf(camera.reservedDataStore.cameraGizmo), 1);\r\n            camera.reservedDataStore.cameraGizmo.dispose();\r\n            camera.reservedDataStore.cameraGizmo = null;\r\n        }\r\n    }\r\n\r\n    public onSceneExplorerClosedObservable = new Observable<void>();\r\n    public onActionTabsClosedObservable = new Observable<void>();\r\n}\r\n"]}