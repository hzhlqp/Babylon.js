{"version":3,"file":"embedHostComponent.js","sourceRoot":"","sources":["../../../src/components/embedHost/embedHostComponent.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport { HeaderComponent } from \"../headerComponent\";\r\nimport { Resizable } from \"re-resizable\";\r\nimport { SceneExplorerComponent } from \"../sceneExplorer/sceneExplorerComponent\";\r\nimport { ActionTabsComponent } from \"../actionTabs/actionTabsComponent\";\r\nimport type { Scene } from \"core/scene\";\r\nimport type { GlobalState } from \"../../components/globalState\";\r\nimport type { IExplorerExtensibilityGroup, DebugLayerTab, IExplorerAdditionalNode } from \"core/Debug/debugLayer\";\r\n\r\nconst Split = require(\"split.js\").default;\r\n\r\nconst ResizableCasted = Resizable as any as React.ComponentClass<any>;\r\n\r\nimport \"./embedHost.scss\";\r\n\r\ninterface IEmbedHostComponentProps {\r\n    scene: Scene;\r\n    globalState: GlobalState;\r\n    popupMode: boolean;\r\n    noClose?: boolean;\r\n    noExpand?: boolean;\r\n    onClose: () => void;\r\n    onPopup: () => void;\r\n    extensibilityGroups?: IExplorerExtensibilityGroup[];\r\n    additionalNodes?: IExplorerAdditionalNode[];\r\n    initialTab?: DebugLayerTab;\r\n}\r\n\r\nexport class EmbedHostComponent extends React.Component<IEmbedHostComponentProps> {\r\n    private _once = true;\r\n    private _splitRef: React.RefObject<HTMLDivElement>;\r\n    private _topPartRef: React.RefObject<HTMLDivElement>;\r\n    private _bottomPartRef: React.RefObject<HTMLDivElement>;\r\n\r\n    constructor(props: IEmbedHostComponentProps) {\r\n        super(props);\r\n\r\n        this._splitRef = React.createRef();\r\n        this._topPartRef = React.createRef();\r\n        this._bottomPartRef = React.createRef();\r\n    }\r\n\r\n    override componentDidMount() {\r\n        const container = this._splitRef.current;\r\n\r\n        if (!container) {\r\n            return;\r\n        }\r\n\r\n        Split([this._topPartRef.current, this._bottomPartRef.current], {\r\n            direction: \"vertical\",\r\n            minSize: [200, 200],\r\n            gutterSize: 4,\r\n        });\r\n    }\r\n\r\n    renderContent() {\r\n        if (this.props.popupMode) {\r\n            return (\r\n                <div id=\"split\" className=\"splitPopup\">\r\n                    <div id=\"topPart\">\r\n                        <SceneExplorerComponent\r\n                            scene={this.props.scene}\r\n                            extensibilityGroups={this.props.extensibilityGroups}\r\n                            additionalNodes={this.props.additionalNodes}\r\n                            popupMode={true}\r\n                            globalState={this.props.globalState}\r\n                            noHeader={true}\r\n                        />\r\n                    </div>\r\n                    <div id=\"separator\" />\r\n                    <div id=\"bottomPart\" style={{ marginTop: \"4px\", overflow: \"hidden\" }}>\r\n                        <ActionTabsComponent scene={this.props.scene} popupMode={true} globalState={this.props.globalState} noHeader={true} initialTab={this.props.initialTab} />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div ref={this._splitRef} id=\"split\" className=\"noPopup\">\r\n                <div id=\"topPart\" ref={this._topPartRef}>\r\n                    <SceneExplorerComponent\r\n                        scene={this.props.scene}\r\n                        extensibilityGroups={this.props.extensibilityGroups}\r\n                        additionalNodes={this.props.additionalNodes}\r\n                        globalState={this.props.globalState}\r\n                        popupMode={true}\r\n                        noHeader={true}\r\n                    />\r\n                </div>\r\n                <div id=\"bottomPart\" ref={this._bottomPartRef} style={{ marginTop: \"4px\", overflow: \"hidden\" }}>\r\n                    <ActionTabsComponent scene={this.props.scene} globalState={this.props.globalState} popupMode={true} noHeader={true} initialTab={this.props.initialTab} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    override render() {\r\n        if (this.props.popupMode) {\r\n            return (\r\n                <div id=\"embed\">\r\n                    <HeaderComponent\r\n                        title=\"INSPECTOR\"\r\n                        noClose={this.props.noClose}\r\n                        noExpand={this.props.noExpand}\r\n                        handleBack={true}\r\n                        onClose={() => this.props.onClose()}\r\n                        onPopup={() => this.props.onPopup()}\r\n                        onSelectionChangedObservable={this.props.globalState.onSelectionChangedObservable}\r\n                    />\r\n                    {this.renderContent()}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (this._once) {\r\n            this._once = false;\r\n            // A bit hacky but no other way to force the initial width to 300px and not auto\r\n            setTimeout(() => {\r\n                const element = document.getElementById(\"embed\");\r\n                if (!element) {\r\n                    return;\r\n                }\r\n                element.style.width = \"300px\";\r\n            }, 150);\r\n        }\r\n\r\n        return (\r\n            <ResizableCasted\r\n                id=\"embed\"\r\n                minWidth={300}\r\n                maxWidth={600}\r\n                defaultSize={{ height: \"100%\" }}\r\n                minHeight=\"100%\"\r\n                enable={{ top: false, right: false, bottom: false, left: true, topRight: false, bottomRight: false, bottomLeft: false, topLeft: false }}\r\n            >\r\n                <HeaderComponent\r\n                    title=\"INSPECTOR\"\r\n                    noClose={this.props.noClose}\r\n                    noExpand={this.props.noExpand}\r\n                    handleBack={true}\r\n                    onClose={() => this.props.onClose()}\r\n                    onPopup={() => this.props.onPopup()}\r\n                    onSelectionChangedObservable={this.props.globalState.onSelectionChangedObservable}\r\n                />\r\n                {this.renderContent()}\r\n            </ResizableCasted>\r\n        );\r\n    }\r\n}\r\n"]}