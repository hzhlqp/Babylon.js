{"version":3,"file":"guiTools.js","sourceRoot":"","sources":["../../../../../src/components/sceneExplorer/entities/gui/guiTools.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,MAAM,EAAE,MAAM,qBAAqB,CAAC;AAC7C,OAAO,EAAE,KAAK,EAAE,MAAM,iBAAiB,CAAC;AACxC,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAIjD,IAAI,SAAS,GAAG,GAAG,KAAK,CAAC,cAAc,KAAK,MAAM,CAAC,OAAO,iCAAiC,CAAC;AAC5F,gEAAgE;AAChE,IAAI,kBAAmD,CAAC;AACxD;;GAEG;AACH,gEAAgE;AAChE,SAAS,mBAAmB;IACxB,0DAA0D;IAC1D,IAAI,OAAO,SAAS,KAAK,WAAW,EAAE;QAClC,gEAAgE;QAChE,OAAO,EAAE,SAAS,EAAE,CAAC;KACxB;IAED,gFAAgF;IAChF,IAAI,OAAO,OAAO,KAAK,WAAW,IAAI,OAAO,OAAO,CAAC,SAAS,KAAK,WAAW,EAAE;QAC5E,OAAO,OAAO,CAAC;KAClB;IAED,OAAO,SAAS,CAAC;AACrB,CAAC;AAED;;;GAGG;AACH,MAAM,UAAU,eAAe,CAAC,gBAAqB;IACjD,kBAAkB,GAAG,gBAAgB,CAAC;AAC1C,CAAC;AAED;;;GAGG;AACH,MAAM,UAAU,eAAe,CAAC,YAAoB;IAChD,SAAS,GAAG,YAAY,CAAC;AAC7B,CAAC;AAED;;;;;;;GAOG;AACH,MAAM,CAAC,KAAK,UAAU,0BAA0B,CAAC,GAA2B,EAAE,KAAe;IACzF,kBAAkB,GAAG,kBAAkB,IAAI,mBAAmB,EAAE,CAAC;IACjE,IAAI,CAAC,kBAAkB,EAAE;QACrB,IAAI,OAAO,OAAO,KAAK,WAAW,EAAE;YAChC,4BAA4B;YAC5B,IAAI,OAAO,kBAAkB,KAAK,WAAW,EAAE;gBAC3C,oCAAoC;gBACpC,IAAI;oBACA,MAAM,KAAK,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;oBACvC,kBAAkB,GAAG,kBAAkB,IAAI,mBAAmB,EAAE,CAAC;iBACpE;gBAAC,MAAM;oBACJ,4CAA4C;oBAC5C,MAAM,kCAAkC,SAAS,EAAE,CAAC;iBACvD;aACJ;SACJ;aAAM;YACH,4BAA4B;YAC5B,4CAA4C;YAC5C,MAAM,2OAA2O,CAAC;SACrP;KACJ;IACD,kBAAkB,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,cAAc,EAAE,GAAG,EAAE,EAAE,KAAK,CAAC,CAAC;AACtE,CAAC","sourcesContent":["import type { AdvancedDynamicTexture } from \"gui/2D/advancedDynamicTexture\";\r\nimport { Engine } from \"core/Engines/engine\";\r\nimport { Tools } from \"core/Misc/tools\";\r\nimport { GUIEditor } from \"gui-editor/guiEditor\";\r\n\r\ndeclare let BABYLON: any;\r\n\r\nlet editorUrl = `${Tools._DefaultCdnUrl}/v${Engine.Version}/guiEditor/babylon.guiEditor.js`;\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nlet guiEditorContainer: { GUIEditor: typeof GUIEditor };\r\n/** Get the inspector from bundle or global\r\n * @internal\r\n */\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nfunction _getGlobalGUIEditor(): { GUIEditor: typeof GUIEditor } | undefined {\r\n    // UMD Global name detection from Webpack Bundle UMD Name.\r\n    if (typeof GUIEditor !== \"undefined\") {\r\n        // eslint-disable-next-line @typescript-eslint/naming-convention\r\n        return { GUIEditor };\r\n    }\r\n\r\n    // In case of module let's check the global emitted from the editor entry point.\r\n    if (typeof BABYLON !== \"undefined\" && typeof BABYLON.GUIEditor !== \"undefined\") {\r\n        return BABYLON;\r\n    }\r\n\r\n    return undefined;\r\n}\r\n\r\n/**\r\n * Used to pass in the gui-editor package.\r\n * @param guiEditorPackage\r\n */\r\nexport function InjectGUIEditor(guiEditorPackage: any) {\r\n    guiEditorContainer = guiEditorPackage;\r\n}\r\n\r\n/**\r\n * Change the URL that the GUI editor loads from\r\n * @param guiEditorURL\r\n */\r\nexport function SetGUIEditorURL(guiEditorURL: string) {\r\n    editorUrl = guiEditorURL;\r\n}\r\n\r\n/**\r\n * Opens an ADT in the GUI editor\r\n * if you are in an ES6 environment, you must first call InjectGUIEditor to provide the gui-editor package\r\n * If you are in a UMD environment, it will load the package from a URL\r\n * @param adt\r\n * @param embed defines whether editor is being opened from the Playground\r\n * @returns a promise that resolves when the editor is opened\r\n */\r\nexport async function EditAdvancedDynamicTexture(adt: AdvancedDynamicTexture, embed?: boolean) {\r\n    guiEditorContainer = guiEditorContainer || _getGlobalGUIEditor();\r\n    if (!guiEditorContainer) {\r\n        if (typeof BABYLON !== \"undefined\") {\r\n            // we are in UMD environment\r\n            if (typeof guiEditorContainer === \"undefined\") {\r\n                // Load editor and add it to the DOM\r\n                try {\r\n                    await Tools.LoadScriptAsync(editorUrl);\r\n                    guiEditorContainer = guiEditorContainer || _getGlobalGUIEditor();\r\n                } catch {\r\n                    // eslint-disable-next-line no-throw-literal\r\n                    throw `Failed to load GUI editor from ${editorUrl}`;\r\n                }\r\n            }\r\n        } else {\r\n            // we are in ES6 environment\r\n            // eslint-disable-next-line no-throw-literal\r\n            throw `Tried to call EditAdvancedDynamicTexture without first injecting the GUI editor. You need to call InjectGUIEditor() with a reference to @babylonjs/gui-editor. It can be imported at runtime using await import(\"@babylonjs/gui-editor\").`;\r\n        }\r\n    }\r\n    guiEditorContainer.GUIEditor.Show({ liveGuiTexture: adt }, embed);\r\n}\r\n"]}