{"version":3,"file":"controlTreeItemComponent.js","sourceRoot":"","sources":["../../../../../src/components/sceneExplorer/entities/gui/controlTreeItemComponent.tsx"],"names":[],"mappings":";AAAA,OAAO,EAAE,aAAa,EAAE,aAAa,EAAE,KAAK,EAAE,UAAU,EAAE,MAAM,mCAAmC,CAAC;AAGpG,OAAO,EAAE,sBAAsB,EAAE,MAAM,8BAA8B,CAAC;AACtE,OAAO,EAAE,mBAAmB,EAAE,MAAM,2BAA2B,CAAC;AAChE,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,eAAe,EAAE,MAAM,gCAAgC,CAAC;AAQjE,MAAM,OAAO,wBAAyB,SAAQ,KAAK,CAAC,SAAoF;IACpI,YAAY,KAAqC;QAC7C,KAAK,CAAC,KAAK,CAAC,CAAC;QAEb,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;QACnC,IAAI,CAAC,KAAK,GAAG,EAAE,QAAQ,EAAE,OAAO,CAAC,aAAa,EAAE,SAAS,EAAE,OAAO,CAAC,SAAS,EAAE,CAAC;IACnF,CAAC;IAED,SAAS;QACL,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;QACnC,OAAO,CAAC,aAAa,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC;QAE/C,IAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,OAAO,CAAC,aAAa,EAAE,CAAC,CAAC;IACvD,CAAC;IAED,gBAAgB;QACZ,MAAM,QAAQ,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;QACvC,IAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC,CAAC;QACvC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,GAAG,QAAQ,CAAC;IAC5C,CAAC;IAEQ,MAAM;QACX,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;QACnC,MAAM,IAAI,GAAG,CAAC,OAAO,CAAC,IAAI,IAAI,SAAS,CAAC,GAAG,KAAK,OAAO,CAAC,YAAY,EAAE,GAAG,CAAC;QAC1E,MAAM,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAC,eAAe,IAAC,IAAI,EAAE,aAAa,GAAI,CAAC,CAAC,CAAC,KAAC,eAAe,IAAC,IAAI,EAAE,aAAa,EAAE,SAAS,EAAC,aAAa,GAAG,CAAC;QAC1J,MAAM,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,KAAC,eAAe,IAAC,IAAI,EAAE,KAAK,GAAI,CAAC,CAAC,CAAC,KAAC,eAAe,IAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAC,aAAa,GAAG,CAAC;QAElJ,OAAO,CACH,eAAK,SAAS,EAAC,cAAc,aACzB,KAAC,sBAAsB,IAAC,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,KAAK,EAAC,aAAa,GAAG,EACrH,cAAK,SAAS,EAAC,gBAAgB,EAAC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,KAAK,EAAC,wBAAwB,YAC1F,eAAe,GACd,EACN,cAAK,SAAS,EAAC,iBAAiB,EAAC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,gBAAgB,EAAE,EAAE,KAAK,EAAC,mBAAmB,YAC7F,iBAAiB,GAChB,EACN,KAAC,mBAAmB,IAAC,MAAM,EAAE,OAAO,EAAE,mBAAmB,EAAE,IAAI,CAAC,KAAK,CAAC,mBAAmB,GAAI,IAC3F,CACT,CAAC;IACN,CAAC;CACJ","sourcesContent":["import { faObjectGroup, faHighlighter, faEye, faEyeSlash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport type { IExplorerExtensibilityGroup } from \"core/Debug/debugLayer\";\r\nimport type { Control } from \"gui/2D/controls/control\";\r\nimport { TreeItemLabelComponent } from \"../../treeItemLabelComponent\";\r\nimport { ExtensionsComponent } from \"../../extensionsComponent\";\r\nimport * as React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\ninterface IControlTreeItemComponentProps {\r\n    control: Control;\r\n    extensibilityGroups?: IExplorerExtensibilityGroup[];\r\n    onClick: () => void;\r\n}\r\n\r\nexport class ControlTreeItemComponent extends React.Component<IControlTreeItemComponentProps, { isActive: boolean; isVisible: boolean }> {\r\n    constructor(props: IControlTreeItemComponentProps) {\r\n        super(props);\r\n\r\n        const control = this.props.control;\r\n        this.state = { isActive: control.isHighlighted, isVisible: control.isVisible };\r\n    }\r\n\r\n    highlight() {\r\n        const control = this.props.control;\r\n        control.isHighlighted = !control.isHighlighted;\r\n\r\n        this.setState({ isActive: control.isHighlighted });\r\n    }\r\n\r\n    switchVisibility(): void {\r\n        const newState = !this.state.isVisible;\r\n        this.setState({ isVisible: newState });\r\n        this.props.control.isVisible = newState;\r\n    }\r\n\r\n    override render() {\r\n        const control = this.props.control;\r\n        const name = (control.name || \"No name\") + ` [${control.getClassName()}]`;\r\n        const isActiveElement = this.state.isActive ? <FontAwesomeIcon icon={faHighlighter} /> : <FontAwesomeIcon icon={faHighlighter} className=\"isNotActive\" />;\r\n        const visibilityElement = this.state.isVisible ? <FontAwesomeIcon icon={faEye} /> : <FontAwesomeIcon icon={faEyeSlash} className=\"isNotActive\" />;\r\n\r\n        return (\r\n            <div className=\"controlTools\">\r\n                <TreeItemLabelComponent label={name} onClick={() => this.props.onClick()} icon={faObjectGroup} color=\"greenyellow\" />\r\n                <div className=\"highlight icon\" onClick={() => this.highlight()} title=\"Highlight this control\">\r\n                    {isActiveElement}\r\n                </div>\r\n                <div className=\"visibility icon\" onClick={() => this.switchVisibility()} title=\"Show/Hide control\">\r\n                    {visibilityElement}\r\n                </div>\r\n                <ExtensionsComponent target={control} extensibilityGroups={this.props.extensibilityGroups} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]}