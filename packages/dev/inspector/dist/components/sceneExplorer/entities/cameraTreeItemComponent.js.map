{"version":3,"file":"cameraTreeItemComponent.js","sourceRoot":"","sources":["../../../../src/components/sceneExplorer/entities/cameraTreeItemComponent.tsx"],"names":[],"mappings":";AAMA,OAAO,EAAE,eAAe,EAAE,MAAM,gCAAgC,CAAC;AACjE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,mCAAmC,CAAC;AAC7E,OAAO,EAAE,sBAAsB,EAAE,MAAM,2BAA2B,CAAC;AACnE,OAAO,EAAE,mBAAmB,EAAE,MAAM,wBAAwB,CAAC;AAC7D,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAW/B,MAAM,OAAO,uBAAwB,SAAQ,KAAK,CAAC,SAAwF;IAGvI,YAAY,KAAoC;QAC5C,KAAK,CAAC,KAAK,CAAC,CAAC;QAEb,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QACjC,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;QAEhC,IAAI,CAAC,KAAK,GAAG,EAAE,QAAQ,EAAE,KAAK,CAAC,YAAY,KAAK,MAAM,EAAE,cAAc,EAAE,MAAM,CAAC,iBAAiB,IAAI,MAAM,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC;IAC/I,CAAC;IAED,SAAS;QACL,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QACjC,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;QAEhC,MAAM,oBAAoB,GAAG,KAAK,CAAC,YAAY,CAAC;QAChD,KAAK,CAAC,YAAY,GAAG,MAAM,CAAC;QAC5B,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAE3B,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,2BAA2B,CAAC,eAAe,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,cAAc,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,oBAAoB,EAAE,CAAC,CAAC;QAEnK,IAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;IACtC,CAAC;IAEQ,iBAAiB;QACtB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;QAE3C,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC,wBAAwB,CAAC,GAAG,CAAC,GAAG,EAAE;YACnE,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;YACjC,6IAA6I;YAC7I,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,aAAa,IAAI,KAAK,CAAC,aAAa,CAAC,MAAM,IAAI,CAAC,IAAI,KAAK,CAAC,YAAY,KAAK,MAAM,EAAE;gBAChH,MAAM,CAAC,aAAa,EAAE,CAAC;aAC1B;YACD,MAAM,QAAQ,GAAG,KAAK,CAAC,YAAY,KAAK,MAAM,CAAC;YAE/C,IAAI,QAAQ,KAAK,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;gBAClC,IAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;aACzC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAEQ,oBAAoB;QACzB,IAAI,IAAI,CAAC,uBAAuB,EAAE;YAC9B,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;YACjC,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;YAEhC,KAAK,CAAC,wBAAwB,CAAC,MAAM,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;SACvE;IACL,CAAC;IAED,WAAW;QACP,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QACjC,IAAI,MAAM,CAAC,iBAAiB,IAAI,MAAM,CAAC,iBAAiB,CAAC,WAAW,EAAE;YAClE,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC,iBAAiB,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC,iBAAiB,CAAC,YAAY,EAAE;gBACzF,MAAM,CAAC,QAAQ,EAAE,CAAC,iBAAiB,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;aACvE;YACD,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,iBAAiB,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;YACxD,IAAI,CAAC,QAAQ,CAAC,EAAE,cAAc,EAAE,KAAK,EAAE,CAAC,CAAC;SAC5C;aAAM;YACH,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,iBAAiB,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;YAC/E,IAAI,CAAC,QAAQ,CAAC,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC,CAAC;SAC3C;IACL,CAAC;IAEQ,MAAM;QACX,MAAM,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAC,eAAe,IAAC,IAAI,EAAE,OAAO,GAAI,CAAC,CAAC,CAAC,KAAC,eAAe,IAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAC,aAAa,GAAG,CAAC;QAC9I,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAG,CAAC;QAC5C,MAAM,cAAc,GAChB,IAAI,CAAC,KAAK,CAAC,cAAc,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,iBAAiB,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CACzI,KAAC,eAAe,IAAC,IAAI,EAAE,KAAK,GAAI,CACnC,CAAC,CAAC,CAAC,CACA,KAAC,eAAe,IAAC,IAAI,EAAE,KAAK,EAAE,SAAS,EAAC,aAAa,GAAG,CAC3D,CAAC;QACN,OAAO,CACH,eAAK,SAAS,EAAC,aAAa,aACxB,KAAC,sBAAsB,IAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAC,OAAO,GAAG,EAC3H,CAAC,CAAC,KAAK,CAAC,aAAa,IAAI,KAAK,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,CAAC,IAAI,CAC3D,cAAK,SAAS,EAAC,mBAAmB,EAAC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,KAAK,EAAC,2CAA2C,YAChH,eAAe,GACd,CACT,EACD,cAAK,SAAS,EAAC,kBAAkB,EAAC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,KAAK,EAAC,gCAAgC,YACtG,cAAc,GACb,EACN,KAAC,mBAAmB,IAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,mBAAmB,EAAE,IAAI,CAAC,KAAK,CAAC,mBAAmB,GAAI,IACrG,CACT,CAAC;IACN,CAAC;CACJ","sourcesContent":["import type { Nullable } from \"core/types\";\r\nimport type { Observer } from \"core/Misc/observable\";\r\nimport type { IExplorerExtensibilityGroup } from \"core/Debug/debugLayer\";\r\nimport type { Camera } from \"core/Cameras/camera\";\r\nimport type { Scene } from \"core/scene\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faVideo, faCamera, faEye } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { TreeItemLabelComponent } from \"../treeItemLabelComponent\";\r\nimport { ExtensionsComponent } from \"../extensionsComponent\";\r\nimport * as React from \"react\";\r\nimport type { GlobalState } from \"../../globalState\";\r\n\r\ninterface ICameraTreeItemComponentProps {\r\n    camera: Camera;\r\n    extensibilityGroups?: IExplorerExtensibilityGroup[];\r\n    onClick: () => void;\r\n    globalState: GlobalState;\r\n    gizmoCamera?: Camera;\r\n}\r\n\r\nexport class CameraTreeItemComponent extends React.Component<ICameraTreeItemComponentProps, { isActive: boolean; isGizmoEnabled: boolean }> {\r\n    private _onBeforeRenderObserver: Nullable<Observer<Scene>>;\r\n\r\n    constructor(props: ICameraTreeItemComponentProps) {\r\n        super(props);\r\n\r\n        const camera = this.props.camera;\r\n        const scene = camera.getScene();\r\n\r\n        this.state = { isActive: scene.activeCamera === camera, isGizmoEnabled: camera.reservedDataStore && camera.reservedDataStore.cameraGizmo };\r\n    }\r\n\r\n    setActive(): void {\r\n        const camera = this.props.camera;\r\n        const scene = camera.getScene();\r\n\r\n        const previousActiveCamera = scene.activeCamera;\r\n        scene.activeCamera = camera;\r\n        camera.attachControl(true);\r\n\r\n        this.props.globalState.onPropertyChangedObservable.notifyObservers({ object: scene, property: \"activeCamera\", value: camera, initialValue: previousActiveCamera });\r\n\r\n        this.setState({ isActive: true });\r\n    }\r\n\r\n    override componentDidMount() {\r\n        const scene = this.props.camera.getScene();\r\n\r\n        this._onBeforeRenderObserver = scene.onBeforeRenderObservable.add(() => {\r\n            const camera = this.props.camera;\r\n            // This will deactivate the previous camera when the camera is changed. Multiple camera's cycle frequently so only do this for single cameras\r\n            if (this.state.isActive && scene.activeCameras && scene.activeCameras.length <= 1 && scene.activeCamera !== camera) {\r\n                camera.detachControl();\r\n            }\r\n            const newState = scene.activeCamera === camera;\r\n\r\n            if (newState !== this.state.isActive) {\r\n                this.setState({ isActive: newState });\r\n            }\r\n        });\r\n    }\r\n\r\n    override componentWillUnmount() {\r\n        if (this._onBeforeRenderObserver) {\r\n            const camera = this.props.camera;\r\n            const scene = camera.getScene();\r\n\r\n            scene.onBeforeRenderObservable.remove(this._onBeforeRenderObserver);\r\n        }\r\n    }\r\n\r\n    toggleGizmo(): void {\r\n        const camera = this.props.camera;\r\n        if (camera.reservedDataStore && camera.reservedDataStore.cameraGizmo) {\r\n            if (camera.getScene().reservedDataStore && camera.getScene().reservedDataStore.gizmoManager) {\r\n                camera.getScene().reservedDataStore.gizmoManager.attachToMesh(null);\r\n            }\r\n            this.props.globalState.enableCameraGizmo(camera, false);\r\n            this.setState({ isGizmoEnabled: false });\r\n        } else {\r\n            this.props.globalState.enableCameraGizmo(camera, true, this.props.gizmoCamera);\r\n            this.setState({ isGizmoEnabled: true });\r\n        }\r\n    }\r\n\r\n    override render() {\r\n        const isActiveElement = this.state.isActive ? <FontAwesomeIcon icon={faVideo} /> : <FontAwesomeIcon icon={faVideo} className=\"isNotActive\" />;\r\n        const scene = this.props.camera.getScene()!;\r\n        const isGizmoEnabled =\r\n            this.state.isGizmoEnabled || (this.props.camera && this.props.camera.reservedDataStore && this.props.camera.reservedDataStore.cameraGizmo) ? (\r\n                <FontAwesomeIcon icon={faEye} />\r\n            ) : (\r\n                <FontAwesomeIcon icon={faEye} className=\"isNotActive\" />\r\n            );\r\n        return (\r\n            <div className=\"cameraTools\">\r\n                <TreeItemLabelComponent label={this.props.camera.name} onClick={() => this.props.onClick()} icon={faCamera} color=\"green\" />\r\n                {(!scene.activeCameras || scene.activeCameras.length === 0) && (\r\n                    <div className=\"activeCamera icon\" onClick={() => this.setActive()} title=\"Set as main camera and attach to controls\">\r\n                        {isActiveElement}\r\n                    </div>\r\n                )}\r\n                <div className=\"enableGizmo icon\" onClick={() => this.toggleGizmo()} title=\"Turn on/off the camera's gizmo\">\r\n                    {isGizmoEnabled}\r\n                </div>\r\n                <ExtensionsComponent target={this.props.camera} extensibilityGroups={this.props.extensibilityGroups} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]}