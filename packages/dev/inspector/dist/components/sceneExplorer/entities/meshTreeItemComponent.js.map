{"version":3,"file":"meshTreeItemComponent.js","sourceRoot":"","sources":["../../../../src/components/sceneExplorer/entities/meshTreeItemComponent.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { IExplorerExtensibilityGroup } from \"core/Debug/debugLayer\";\r\nimport type { AbstractMesh } from \"core/Meshes/abstractMesh\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCube, faPen } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faEye, faEyeSlash, faSquare } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { TreeItemLabelComponent } from \"../treeItemLabelComponent\";\r\nimport { ExtensionsComponent } from \"../extensionsComponent\";\r\nimport * as React from \"react\";\r\nimport type { GlobalState } from \"../../globalState\";\r\n\r\nimport \"core/Rendering/boundingBoxRenderer\";\r\n\r\ninterface IMeshTreeItemComponentProps {\r\n    mesh: AbstractMesh;\r\n    extensibilityGroups?: IExplorerExtensibilityGroup[];\r\n    onClick: () => void;\r\n    globalState: GlobalState;\r\n}\r\n\r\nexport class MeshTreeItemComponent extends React.Component<IMeshTreeItemComponentProps, { isBoundingBoxEnabled: boolean; isVisible: boolean }> {\r\n    constructor(props: IMeshTreeItemComponentProps) {\r\n        super(props);\r\n\r\n        const mesh = this.props.mesh;\r\n\r\n        this.state = { isBoundingBoxEnabled: mesh.showBoundingBox, isVisible: this.props.mesh.isVisible };\r\n    }\r\n\r\n    showBoundingBox(): void {\r\n        const mesh = this.props.mesh;\r\n        mesh.showBoundingBox = !this.state.isBoundingBoxEnabled;\r\n        this.props.globalState.onPropertyChangedObservable.notifyObservers({\r\n            object: mesh,\r\n            property: \"showBoundingBox\",\r\n            value: mesh.showBoundingBox,\r\n            initialValue: !mesh.showBoundingBox,\r\n        });\r\n        this.setState({ isBoundingBoxEnabled: !this.state.isBoundingBoxEnabled });\r\n    }\r\n\r\n    switchVisibility(): void {\r\n        const newState = !this.state.isVisible;\r\n        this.setState({ isVisible: newState });\r\n        this.props.mesh.isVisible = newState;\r\n        this.props.globalState.onPropertyChangedObservable.notifyObservers({ object: this.props.mesh, property: \"isVisible\", value: newState, initialValue: !newState });\r\n    }\r\n\r\n    // mesh.name can fail the type check when we're in javascript, so\r\n    // we can check to avoid crashing\r\n    private _getNameForLabel(): string {\r\n        return typeof this.props.mesh.name === \"string\" ? this.props.mesh.name : \"no name\";\r\n    }\r\n\r\n    private _editGeometry(): void {\r\n        const mesh = this.props.mesh;\r\n        mesh._internalMetadata.nodeGeometry.edit({\r\n            nodeGeometryEditorConfig: {\r\n                backgroundColor: mesh.getScene().clearColor,\r\n                hostMesh: mesh,\r\n                hostScene: mesh.getScene(),\r\n            },\r\n        });\r\n    }\r\n\r\n    override render() {\r\n        const mesh = this.props.mesh;\r\n\r\n        const visibilityElement = this.state.isVisible ? <FontAwesomeIcon icon={faEye} /> : <FontAwesomeIcon icon={faEyeSlash} className=\"isNotActive\" />;\r\n\r\n        return (\r\n            <div className=\"meshTools\">\r\n                <TreeItemLabelComponent label={this._getNameForLabel()} onClick={() => this.props.onClick()} icon={faCube} color=\"dodgerblue\" />\r\n                {mesh._internalMetadata && mesh._internalMetadata.nodeGeometry && (\r\n                    <div className=\"edit icon\" onClick={() => this._editGeometry()} title=\"Edit Node Geometry\">\r\n                        <FontAwesomeIcon icon={faPen} />\r\n                    </div>\r\n                )}\r\n                <div\r\n                    className={this.state.isBoundingBoxEnabled ? \"bounding-box selected icon\" : \"bounding-box icon\"}\r\n                    onClick={() => this.showBoundingBox()}\r\n                    title=\"Show/Hide bounding box\"\r\n                >\r\n                    <FontAwesomeIcon icon={faSquare} />\r\n                </div>\r\n                <div className=\"visibility icon\" onClick={() => this.switchVisibility()} title=\"Show/Hide mesh\">\r\n                    {visibilityElement}\r\n                </div>\r\n                {<ExtensionsComponent target={mesh} extensibilityGroups={this.props.extensibilityGroups} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]}