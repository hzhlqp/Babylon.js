{"version":3,"file":"treeItemSpecializedComponent.js","sourceRoot":"","sources":["../../../src/components/sceneExplorer/treeItemSpecializedComponent.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { Camera } from \"core/Cameras/camera\";\r\nimport type { IExplorerExtensibilityGroup } from \"core/Debug/debugLayer\";\r\nimport type { AnimationGroup, TargetedAnimation } from \"core/Animations/animationGroup\";\r\nimport type { Material } from \"core/Materials/material\";\r\nimport type { Texture } from \"core/Materials/Textures/texture\";\r\nimport type { TransformNode } from \"core/Meshes/transformNode\";\r\nimport type { Light } from \"core/Lights/light\";\r\nimport type { AbstractMesh } from \"core/Meshes/abstractMesh\";\r\nimport type { PostProcess } from \"core/PostProcesses/postProcess\";\r\n\r\nimport { MeshTreeItemComponent } from \"./entities/meshTreeItemComponent\";\r\nimport { CameraTreeItemComponent } from \"./entities/cameraTreeItemComponent\";\r\nimport { LightTreeItemComponent } from \"./entities/lightTreeItemComponent\";\r\nimport { ExtensionsComponent } from \"./extensionsComponent\";\r\nimport { TreeItemLabelComponent } from \"./treeItemLabelComponent\";\r\nimport { faProjectDiagram } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { MaterialTreeItemComponent } from \"./entities/materialTreeItemComponent\";\r\nimport { TextureTreeItemComponent } from \"./entities/textureTreeItemComponent\";\r\nimport { TransformNodeItemComponent } from \"./entities/transformNodeTreeItemComponent\";\r\nimport * as React from \"react\";\r\nimport { ControlTreeItemComponent } from \"./entities/gui/controlTreeItemComponent\";\r\nimport type { Control } from \"gui/2D/controls/control\";\r\nimport type { AdvancedDynamicTexture } from \"gui/2D/advancedDynamicTexture\";\r\nimport { AdvancedDynamicTextureTreeItemComponent } from \"./entities/gui/advancedDynamicTextureTreeItemComponent\";\r\nimport { AnimationGroupItemComponent } from \"./entities/animationGroupTreeItemComponent\";\r\nimport type { GlobalState } from \"../globalState\";\r\nimport { PostProcessItemComponent } from \"./entities/postProcessTreeItemComponent\";\r\nimport { RenderingPipelineItemComponent } from \"./entities/renderingPipelineTreeItemComponent\";\r\nimport type { PostProcessRenderPipeline } from \"core/PostProcesses/RenderPipeline/postProcessRenderPipeline\";\r\nimport { SkeletonTreeItemComponent } from \"./entities/skeletonTreeItemComponent\";\r\nimport type { Skeleton } from \"core/Bones/skeleton\";\r\nimport { BoneTreeItemComponent } from \"./entities/boneTreeItemComponent\";\r\nimport type { Bone } from \"core/Bones/bone\";\r\nimport { ParticleSystemTreeItemComponent } from \"./entities/particleSystemTreeItemComponent\";\r\nimport type { IParticleSystem } from \"core/Particles/IParticleSystem\";\r\nimport { SpriteManagerTreeItemComponent } from \"./entities/spriteManagerTreeItemComponent\";\r\nimport type { SpriteManager } from \"core/Sprites/spriteManager\";\r\nimport { SpriteTreeItemComponent } from \"./entities/spriteTreeItemComponent\";\r\nimport type { Sprite } from \"core/Sprites/sprite\";\r\nimport { TargetedAnimationItemComponent } from \"./entities/targetedAnimationTreeItemComponent\";\r\nimport type { Sound } from \"core/Audio/sound\";\r\nimport { SoundTreeItemComponent } from \"./entities/soundTreeItemComponent\";\r\nimport { EffectLayerItemComponent } from \"./entities/effectLayerPipelineTreeItemComponent\";\r\nimport type { EffectLayer } from \"core/Layers/effectLayer\";\r\n\r\ninterface ITreeItemSpecializedComponentProps {\r\n    label: string;\r\n    entity?: any;\r\n    extensibilityGroups?: IExplorerExtensibilityGroup[];\r\n    globalState: GlobalState;\r\n    gizmoCamera?: Camera;\r\n    onClick?: () => void;\r\n}\r\n\r\nexport class TreeItemSpecializedComponent extends React.Component<ITreeItemSpecializedComponentProps> {\r\n    constructor(props: ITreeItemSpecializedComponentProps) {\r\n        super(props);\r\n    }\r\n\r\n    onClick() {\r\n        if (!this.props.onClick) {\r\n            return;\r\n        }\r\n\r\n        this.props.onClick();\r\n    }\r\n\r\n    override render() {\r\n        const entity = this.props.entity;\r\n\r\n        if (entity && entity.getClassName) {\r\n            const className = entity.getClassName();\r\n\r\n            if (className.indexOf(\"Mesh\") !== -1) {\r\n                const mesh = entity as AbstractMesh;\r\n                return (\r\n                    <MeshTreeItemComponent globalState={this.props.globalState} extensibilityGroups={this.props.extensibilityGroups} mesh={mesh} onClick={() => this.onClick()} />\r\n                );\r\n            }\r\n\r\n            if (className.indexOf(\"SpriteManager\") !== -1) {\r\n                return (\r\n                    <SpriteManagerTreeItemComponent extensibilityGroups={this.props.extensibilityGroups} spriteManager={entity as SpriteManager} onClick={() => this.onClick()} />\r\n                );\r\n            }\r\n\r\n            if (className.indexOf(\"Sprite\") !== -1) {\r\n                return <SpriteTreeItemComponent extensibilityGroups={this.props.extensibilityGroups} sprite={entity as Sprite} onClick={() => this.onClick()} />;\r\n            }\r\n\r\n            if (className.indexOf(\"Skeleton\") !== -1) {\r\n                return <SkeletonTreeItemComponent extensibilityGroups={this.props.extensibilityGroups} skeleton={entity as Skeleton} onClick={() => this.onClick()} />;\r\n            }\r\n\r\n            if (className.indexOf(\"Bone\") !== -1) {\r\n                return <BoneTreeItemComponent extensibilityGroups={this.props.extensibilityGroups} bone={entity as Bone} onClick={() => this.onClick()} />;\r\n            }\r\n\r\n            if (className.indexOf(\"TransformNode\") !== -1) {\r\n                return <TransformNodeItemComponent extensibilityGroups={this.props.extensibilityGroups} transformNode={entity as TransformNode} onClick={() => this.onClick()} />;\r\n            }\r\n\r\n            if (className.indexOf(\"Camera\") !== -1) {\r\n                return (\r\n                    <CameraTreeItemComponent\r\n                        globalState={this.props.globalState}\r\n                        gizmoCamera={this.props.gizmoCamera}\r\n                        extensibilityGroups={this.props.extensibilityGroups}\r\n                        camera={entity as Camera}\r\n                        onClick={() => this.onClick()}\r\n                    />\r\n                );\r\n            }\r\n\r\n            if (className.indexOf(\"Light\", className.length - 5) !== -1) {\r\n                return (\r\n                    <LightTreeItemComponent\r\n                        globalState={this.props.globalState}\r\n                        gizmoCamera={this.props.gizmoCamera}\r\n                        extensibilityGroups={this.props.extensibilityGroups}\r\n                        light={entity as Light}\r\n                        onClick={() => this.onClick()}\r\n                    />\r\n                );\r\n            }\r\n\r\n            if (className.indexOf(\"Material\") !== -1) {\r\n                return <MaterialTreeItemComponent extensibilityGroups={this.props.extensibilityGroups} material={entity as Material} onClick={() => this.onClick()} />;\r\n            }\r\n\r\n            if (className.indexOf(\"ParticleSystem\") !== -1) {\r\n                return <ParticleSystemTreeItemComponent extensibilityGroups={this.props.extensibilityGroups} system={entity as IParticleSystem} onClick={() => this.onClick()} />;\r\n            }\r\n\r\n            if (className === \"AdvancedDynamicTexture\") {\r\n                return (\r\n                    <AdvancedDynamicTextureTreeItemComponent\r\n                        onSelectionChangedObservable={this.props.globalState.onSelectionChangedObservable}\r\n                        extensibilityGroups={this.props.extensibilityGroups}\r\n                        texture={entity as AdvancedDynamicTexture}\r\n                        onClick={() => this.onClick()}\r\n                    />\r\n                );\r\n            }\r\n\r\n            if (className === \"AnimationGroup\") {\r\n                return (\r\n                    <AnimationGroupItemComponent extensibilityGroups={this.props.extensibilityGroups} animationGroup={entity as AnimationGroup} onClick={() => this.onClick()} />\r\n                );\r\n            }\r\n\r\n            if (className === \"TargetedAnimation\") {\r\n                return (\r\n                    <TargetedAnimationItemComponent\r\n                        extensibilityGroups={this.props.extensibilityGroups}\r\n                        targetedAnimation={entity as TargetedAnimation}\r\n                        onClick={() => this.onClick()}\r\n                    />\r\n                );\r\n            }\r\n\r\n            if (className.indexOf(\"Texture\") !== -1) {\r\n                return <TextureTreeItemComponent extensibilityGroups={this.props.extensibilityGroups} texture={entity as Texture} onClick={() => this.onClick()} />;\r\n            }\r\n\r\n            if (className.indexOf(\"RenderingPipeline\") !== -1) {\r\n                return (\r\n                    <RenderingPipelineItemComponent\r\n                        extensibilityGroups={this.props.extensibilityGroups}\r\n                        renderPipeline={entity as PostProcessRenderPipeline}\r\n                        onClick={() => this.onClick()}\r\n                    />\r\n                );\r\n            }\r\n\r\n            if (className.indexOf(\"PostProcess\") !== -1) {\r\n                return <PostProcessItemComponent extensibilityGroups={this.props.extensibilityGroups} postProcess={entity as PostProcess} onClick={() => this.onClick()} />;\r\n            }\r\n\r\n            if (className.indexOf(\"Layer\") !== -1) {\r\n                return <EffectLayerItemComponent extensibilityGroups={this.props.extensibilityGroups} layer={entity as EffectLayer} onClick={() => this.onClick()} />;\r\n            }\r\n\r\n            if (className.indexOf(\"Sound\") !== -1) {\r\n                return <SoundTreeItemComponent extensibilityGroups={this.props.extensibilityGroups} sound={entity as Sound} onClick={() => this.onClick()} />;\r\n            }\r\n\r\n            if (entity._host) {\r\n                return <ControlTreeItemComponent extensibilityGroups={this.props.extensibilityGroups} control={entity as Control} onClick={() => this.onClick()} />;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"meshTools\">\r\n                <TreeItemLabelComponent label={entity.name} onClick={() => this.onClick()} icon={faProjectDiagram} color=\"cornflowerblue\" />\r\n                {<ExtensionsComponent target={entity} extensibilityGroups={this.props.extensibilityGroups} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]}