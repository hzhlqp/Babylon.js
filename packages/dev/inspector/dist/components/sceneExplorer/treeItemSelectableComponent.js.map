{"version":3,"file":"treeItemSelectableComponent.js","sourceRoot":"","sources":["../../../src/components/sceneExplorer/treeItemSelectableComponent.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { Nullable } from \"core/types\";\r\nimport type { Camera } from \"core/Cameras/camera\";\r\nimport type { IExplorerExtensibilityGroup } from \"core/Debug/debugLayer\";\r\n\r\nimport { TreeItemSpecializedComponent } from \"./treeItemSpecializedComponent\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMinus, faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Tools } from \"../../tools\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport * as React from \"react\";\r\nimport type { GlobalState } from \"../globalState\";\r\n\r\nimport { setDebugNode } from \"./treeNodeDebugger\";\r\n\r\nexport interface ITreeItemSelectableComponentProps {\r\n    entity: any;\r\n    selectedEntity?: any;\r\n    mustExpand?: boolean;\r\n    offset: number;\r\n    globalState: GlobalState;\r\n    gizmoCamera?: Camera;\r\n    extensibilityGroups?: IExplorerExtensibilityGroup[];\r\n    filter: Nullable<string>;\r\n}\r\n\r\nexport class TreeItemSelectableComponent extends React.Component<ITreeItemSelectableComponentProps, { isExpanded: boolean; isSelected: boolean }> {\r\n    private _wasSelected = false;\r\n\r\n    constructor(props: ITreeItemSelectableComponentProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isSelected: this.props.entity === this.props.selectedEntity,\r\n            isExpanded: this.props.mustExpand || Tools.LookForItem(this.props.entity, this.props.selectedEntity),\r\n        };\r\n    }\r\n\r\n    switchExpandedState(): void {\r\n        this.setState({ isExpanded: !this.state.isExpanded });\r\n    }\r\n\r\n    override shouldComponentUpdate(nextProps: ITreeItemSelectableComponentProps, nextState: { isExpanded: boolean; isSelected: boolean }) {\r\n        if (!nextState.isExpanded && this.state.isExpanded) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.selectedEntity) {\r\n            if (nextProps.entity === nextProps.selectedEntity) {\r\n                nextState.isSelected = true;\r\n                return true;\r\n            } else {\r\n                nextState.isSelected = false;\r\n            }\r\n\r\n            if (Tools.LookForItem(nextProps.entity, nextProps.selectedEntity)) {\r\n                nextState.isExpanded = true;\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    scrollIntoView() {\r\n        const element = ReactDOM.findDOMNode(this) as Element;\r\n\r\n        if (element) {\r\n            element.scrollIntoView(false);\r\n        }\r\n    }\r\n\r\n    override componentDidMount() {\r\n        if (this.state.isSelected) {\r\n            this.scrollIntoView();\r\n        }\r\n    }\r\n\r\n    override componentDidUpdate() {\r\n        if (this.state.isSelected && !this._wasSelected) {\r\n            this.scrollIntoView();\r\n        }\r\n        this._wasSelected = false;\r\n    }\r\n\r\n    onSelect() {\r\n        if (!this.props.globalState.onSelectionChangedObservable) {\r\n            return;\r\n        }\r\n        this._wasSelected = true;\r\n        const entity = this.props.entity;\r\n        // Put selected node into window.debugNode\r\n        setDebugNode(entity);\r\n        this.props.globalState.onSelectionChangedObservable.notifyObservers(entity);\r\n    }\r\n\r\n    renderChildren() {\r\n        const entity = this.props.entity;\r\n        if ((!entity.getChildren && !entity.children) || !this.state.isExpanded) {\r\n            return null;\r\n        }\r\n\r\n        const children = Tools.SortAndFilter(entity, entity.getChildren ? entity.getChildren() : entity.children);\r\n        return children.map((item, i) => {\r\n            return (\r\n                <TreeItemSelectableComponent\r\n                    globalState={this.props.globalState}\r\n                    gizmoCamera={this.props.gizmoCamera}\r\n                    mustExpand={this.props.mustExpand}\r\n                    extensibilityGroups={this.props.extensibilityGroups}\r\n                    selectedEntity={this.props.selectedEntity}\r\n                    key={i}\r\n                    offset={this.props.offset + 2}\r\n                    entity={item}\r\n                    filter={this.props.filter}\r\n                />\r\n            );\r\n        });\r\n    }\r\n\r\n    override render() {\r\n        const marginStyle = {\r\n            paddingLeft: 10 * (this.props.offset + 0.5) + \"px\",\r\n        };\r\n        const entity = this.props.entity;\r\n\r\n        const chevron = this.state.isExpanded ? <FontAwesomeIcon icon={faMinus} /> : <FontAwesomeIcon icon={faPlus} />;\r\n        const children = entity.getClassName() === \"MultiMaterial\" ? [] : Tools.SortAndFilter(entity, entity.getChildren ? entity.getChildren() : entity.children);\r\n        const hasChildren = children.length > 0;\r\n\r\n        if (!entity.reservedDataStore) {\r\n            entity.reservedDataStore = {};\r\n        }\r\n\r\n        entity.reservedDataStore.setExpandedState = (value: boolean) => {\r\n            this.setState({ isExpanded: value });\r\n        };\r\n        entity.reservedDataStore.isExpanded = this.state.isExpanded;\r\n\r\n        if (this.props.filter) {\r\n            const lowerCaseFilter = this.props.filter.toLowerCase();\r\n            if (!entity.name || entity.name.toLowerCase().indexOf(lowerCaseFilter) === -1) {\r\n                if (!hasChildren) {\r\n                    return null;\r\n                }\r\n\r\n                if (entity.getDescendants) {\r\n                    if (\r\n                        entity.getDescendants(false, (n: any) => {\r\n                            return n.name && n.name.toLowerCase().indexOf(lowerCaseFilter) !== -1;\r\n                        }).length === 0\r\n                    ) {\r\n                        return null;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className={this.state.isSelected ? \"itemContainer selected\" : \"itemContainer\"} style={marginStyle}>\r\n                    {hasChildren && (\r\n                        <div className=\"arrow icon\" onClick={() => this.switchExpandedState()}>\r\n                            {chevron}\r\n                        </div>\r\n                    )}\r\n                    <TreeItemSpecializedComponent\r\n                        globalState={this.props.globalState}\r\n                        gizmoCamera={this.props.gizmoCamera}\r\n                        extensibilityGroups={this.props.extensibilityGroups}\r\n                        label={entity.name}\r\n                        entity={entity}\r\n                        onClick={() => this.onSelect()}\r\n                    />\r\n                </div>\r\n                {this.renderChildren()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]}