{"version":3,"file":"sceneExplorerComponent.js","sourceRoot":"","sources":["../../../src/components/sceneExplorer/sceneExplorerComponent.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\n\r\nimport type { Nullable } from \"core/types\";\r\nimport type { Observer } from \"core/Misc/observable\";\r\nimport type { IExplorerAdditionalNode, IExplorerExtensibilityGroup, IInspectorContextMenuItem, IInspectorOptions } from \"core/Debug/debugLayer\";\r\nimport type { Scene } from \"core/scene\";\r\nimport { EngineStore } from \"core/Engines/engineStore\";\r\n\r\nimport { TreeItemComponent } from \"./treeItemComponent\";\r\nimport { Resizable } from \"re-resizable\";\r\nimport { HeaderComponent } from \"../headerComponent\";\r\nimport { SceneTreeItemComponent } from \"./entities/sceneTreeItemComponent\";\r\nimport { Tools } from \"../../tools\";\r\nimport type { GlobalState } from \"../../components/globalState\";\r\nimport { DefaultRenderingPipeline } from \"core/PostProcesses/RenderPipeline/Pipelines/defaultRenderingPipeline\";\r\nimport { Vector3 } from \"core/Maths/math\";\r\nimport { PointLight } from \"core/Lights/pointLight\";\r\nimport { FreeCamera } from \"core/Cameras/freeCamera\";\r\nimport { DirectionalLight } from \"core/Lights/directionalLight\";\r\nimport { SSAORenderingPipeline } from \"core/PostProcesses/RenderPipeline/Pipelines/ssaoRenderingPipeline\";\r\nimport { NodeMaterial } from \"core/Materials/Node/nodeMaterial\";\r\nimport { ParticleHelper } from \"core/Particles/particleHelper\";\r\nimport { GPUParticleSystem } from \"core/Particles/gpuParticleSystem\";\r\nimport { SSAO2RenderingPipeline } from \"core/PostProcesses/RenderPipeline/Pipelines/ssao2RenderingPipeline\";\r\nimport { SSRRenderingPipeline } from \"core/PostProcesses/RenderPipeline/Pipelines/ssrRenderingPipeline\";\r\nimport { IblShadowsRenderPipeline } from \"core/Rendering/IBLShadows/iblShadowsRenderPipeline\";\r\nimport { StandardMaterial } from \"core/Materials/standardMaterial\";\r\nimport { PBRMaterial } from \"core/Materials/PBR/pbrMaterial\";\r\nimport { SpriteManager } from \"core/Sprites/spriteManager\";\r\nimport type { TargetCamera } from \"core/Cameras/targetCamera\";\r\nimport type { Camera } from \"core/Cameras/camera\";\r\nimport type { PostProcessRenderPipeline } from \"core/PostProcesses\";\r\nimport { NodeGeometry } from \"core/Meshes/Node/nodeGeometry\";\r\n\r\n// side effects\r\nimport \"core/Sprites/spriteSceneComponent\";\r\nimport \"core/Audio/audioSceneComponent\";\r\nimport \"core/PostProcesses/RenderPipeline/postProcessRenderPipelineManagerSceneComponent\";\r\n\r\nimport \"./sceneExplorer.scss\";\r\n\r\ninterface ISceneExplorerFilterComponentProps {\r\n    onFilter: (filter: string) => void;\r\n}\r\n\r\nconst ResizableCasted = Resizable as any as React.ComponentClass<any>;\r\n\r\nexport class SceneExplorerFilterComponent extends React.Component<ISceneExplorerFilterComponentProps> {\r\n    constructor(props: ISceneExplorerFilterComponentProps) {\r\n        super(props);\r\n    }\r\n\r\n    override render() {\r\n        return (\r\n            <div className=\"filter\">\r\n                <input type=\"text\" placeholder=\"Filter\" onChange={(evt) => this.props.onFilter(evt.target.value)} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\ninterface ISceneExplorerComponentProps {\r\n    scene: Scene;\r\n    contextMenu?: IInspectorOptions[\"contextMenu\"];\r\n    contextMenuOverride?: IInspectorOptions[\"contextMenuOverride\"];\r\n    gizmoCamera?: Camera;\r\n    noCommands?: boolean;\r\n    noHeader?: boolean;\r\n    noExpand?: boolean;\r\n    noClose?: boolean;\r\n    extensibilityGroups?: IExplorerExtensibilityGroup[];\r\n    additionalNodes?: IExplorerAdditionalNode[];\r\n    globalState: GlobalState;\r\n    popupMode?: boolean;\r\n    onPopup?: () => void;\r\n    onClose?: () => void;\r\n}\r\n\r\nexport class SceneExplorerComponent extends React.Component<ISceneExplorerComponentProps, { filter: Nullable<string>; selectedEntity: any; scene: Scene }> {\r\n    private _onSelectionChangeObserver: Nullable<Observer<any>>;\r\n    private _onSelectionRenamedObserver: Nullable<Observer<void>>;\r\n    private _onNewSceneAddedObserver: Nullable<Observer<Scene>>;\r\n    private _onNewSceneObserver: Nullable<Observer<Scene>>;\r\n    private _sceneExplorerRef: React.RefObject<Resizable>;\r\n    private _mutationTimeout: Nullable<number> = null;\r\n\r\n    private _once = true;\r\n    private _hooked = false;\r\n\r\n    private _sceneMutationFunc: () => void;\r\n\r\n    constructor(props: ISceneExplorerComponentProps) {\r\n        super(props);\r\n\r\n        this.state = { filter: null, selectedEntity: null, scene: this.props.scene };\r\n\r\n        this._sceneMutationFunc = this.processMutation.bind(this);\r\n\r\n        this._sceneExplorerRef = React.createRef();\r\n        this._onNewSceneObserver = this.props.globalState.onNewSceneObservable.add((scene: Scene) => {\r\n            this.setState({\r\n                scene,\r\n            });\r\n        });\r\n    }\r\n\r\n    processMutation() {\r\n        if (this.props.globalState.blockMutationUpdates) {\r\n            return;\r\n        }\r\n\r\n        // To avoid perf hits we want to make sure that we are not rebuilding the entire tree on each call\r\n        if (this._mutationTimeout !== null) {\r\n            window.clearTimeout(this._mutationTimeout);\r\n        }\r\n\r\n        this._mutationTimeout = window.setTimeout(() => {\r\n            this._mutationTimeout = null;\r\n            this.forceUpdate();\r\n        }, 32);\r\n    }\r\n\r\n    override componentDidMount() {\r\n        this._onSelectionChangeObserver = this.props.globalState.onSelectionChangedObservable.add((entity) => {\r\n            if (this.state.selectedEntity !== entity) {\r\n                this.setState({ selectedEntity: entity });\r\n            }\r\n        });\r\n\r\n        this._onSelectionRenamedObserver = this.props.globalState.onSelectionRenamedObservable.add(() => {\r\n            this.forceUpdate();\r\n        });\r\n    }\r\n\r\n    override componentWillUnmount() {\r\n        if (this._onSelectionChangeObserver) {\r\n            this.props.globalState.onSelectionChangedObservable.remove(this._onSelectionChangeObserver);\r\n        }\r\n\r\n        if (this._onSelectionRenamedObserver) {\r\n            this.props.globalState.onSelectionRenamedObservable.remove(this._onSelectionRenamedObserver);\r\n        }\r\n\r\n        if (this._onNewSceneAddedObserver) {\r\n            EngineStore.LastCreatedEngine!.onNewSceneAddedObservable.remove(this._onNewSceneAddedObserver);\r\n        }\r\n\r\n        if (this._onNewSceneObserver) {\r\n            this.props.globalState.onNewSceneObservable.remove(this._onNewSceneObserver);\r\n        }\r\n\r\n        const scene = this.state.scene;\r\n\r\n        scene.onNewSkeletonAddedObservable.removeCallback(this._sceneMutationFunc);\r\n        scene.onNewCameraAddedObservable.removeCallback(this._sceneMutationFunc);\r\n        scene.onNewLightAddedObservable.removeCallback(this._sceneMutationFunc);\r\n        scene.onNewMaterialAddedObservable.removeCallback(this._sceneMutationFunc);\r\n        scene.onNewMeshAddedObservable.removeCallback(this._sceneMutationFunc);\r\n        scene.onNewTextureAddedObservable.removeCallback(this._sceneMutationFunc);\r\n        scene.onNewTransformNodeAddedObservable.removeCallback(this._sceneMutationFunc);\r\n\r\n        scene.onSkeletonRemovedObservable.removeCallback(this._sceneMutationFunc);\r\n        scene.onMeshRemovedObservable.removeCallback(this._sceneMutationFunc);\r\n        scene.onCameraRemovedObservable.removeCallback(this._sceneMutationFunc);\r\n        scene.onLightRemovedObservable.removeCallback(this._sceneMutationFunc);\r\n        scene.onMaterialRemovedObservable.removeCallback(this._sceneMutationFunc);\r\n        scene.onTransformNodeRemovedObservable.removeCallback(this._sceneMutationFunc);\r\n        scene.onTextureRemovedObservable.removeCallback(this._sceneMutationFunc);\r\n    }\r\n\r\n    filterContent(filter: string) {\r\n        this.setState({ filter: filter });\r\n    }\r\n\r\n    findSiblings(parent: any, items: any[], target: any, goNext: boolean, data: { previousOne?: any; found?: boolean }): boolean {\r\n        if (!items) {\r\n            return false;\r\n        }\r\n\r\n        const sortedItems = Tools.SortAndFilter(parent, items);\r\n\r\n        if (!items || sortedItems.length === 0) {\r\n            return false;\r\n        }\r\n\r\n        for (const item of sortedItems) {\r\n            if (item === target) {\r\n                // found the current selection!\r\n                data.found = true;\r\n                if (!goNext) {\r\n                    if (data.previousOne) {\r\n                        this.props.globalState.onSelectionChangedObservable.notifyObservers(data.previousOne);\r\n                    }\r\n                    return true;\r\n                }\r\n            } else {\r\n                if (data.found) {\r\n                    this.props.globalState.onSelectionChangedObservable.notifyObservers(item);\r\n                    return true;\r\n                }\r\n                data.previousOne = item;\r\n            }\r\n\r\n            if (item.getChildren && item.reservedDataStore && item.reservedDataStore.isExpanded) {\r\n                if (this.findSiblings(item, item.getChildren(), target, goNext, data)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    processKeys(keyEvent: React.KeyboardEvent<HTMLDivElement>, allNodes: any[]) {\r\n        if (!this.state.selectedEntity) {\r\n            return;\r\n        }\r\n\r\n        const scene = this.state.scene;\r\n        let search = false;\r\n        let goNext = false;\r\n\r\n        if (keyEvent.keyCode === 38) {\r\n            // up\r\n            search = true;\r\n        } else if (keyEvent.keyCode === 40) {\r\n            // down\r\n            goNext = true;\r\n            search = true;\r\n        } else if (keyEvent.keyCode === 13 || keyEvent.keyCode === 39) {\r\n            // enter or right\r\n            const reservedDataStore = this.state.selectedEntity.reservedDataStore;\r\n            if (reservedDataStore && reservedDataStore.setExpandedState) {\r\n                reservedDataStore.setExpandedState(true);\r\n            }\r\n            keyEvent.preventDefault();\r\n            return;\r\n        } else if (keyEvent.keyCode === 37) {\r\n            // left\r\n            const reservedDataStore = this.state.selectedEntity.reservedDataStore;\r\n            if (reservedDataStore && reservedDataStore.setExpandedState) {\r\n                reservedDataStore.setExpandedState(false);\r\n            }\r\n            keyEvent.preventDefault();\r\n            return;\r\n        } else if (keyEvent.keyCode === 46) {\r\n            // delete\r\n            this.state.selectedEntity.dispose();\r\n            this.props.globalState.onSelectionChangedObservable.notifyObservers(scene);\r\n        }\r\n\r\n        if (!search) {\r\n            return;\r\n        }\r\n\r\n        keyEvent.preventDefault();\r\n\r\n        const data = {};\r\n        for (const nodeGroup of allNodes) {\r\n            if (this.findSiblings(null, nodeGroup, this.state.selectedEntity, goNext, data)) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    private _getPipelineContextMenus(scene: Scene, pipelines: PostProcessRenderPipeline[]): IInspectorContextMenuItem[] {\r\n        const defaultMenuItems: IInspectorContextMenuItem[] = [];\r\n\r\n        if (scene.activeCamera) {\r\n            if (!pipelines.some((p) => p.getClassName() === \"DefaultRenderingPipeline\")) {\r\n                defaultMenuItems.push({\r\n                    label: \"Add new Default Rendering Pipeline\",\r\n                    action: () => {\r\n                        const newPipeline = new DefaultRenderingPipeline(\"Default rendering pipeline\", true, scene, scene.cameras);\r\n                        this.props.globalState.onSelectionChangedObservable.notifyObservers(newPipeline);\r\n                    },\r\n                });\r\n            }\r\n\r\n            if (!pipelines.some((p) => p.getClassName() === \"SSAORenderingPipeline\")) {\r\n                defaultMenuItems.push({\r\n                    label: \"Add new SSAO Rendering Pipeline\",\r\n                    action: () => {\r\n                        const newPipeline = new SSAORenderingPipeline(\"SSAO rendering pipeline\", scene, 1, scene.cameras);\r\n                        this.props.globalState.onSelectionChangedObservable.notifyObservers(newPipeline);\r\n                    },\r\n                });\r\n            }\r\n\r\n            if (scene.getEngine().getCaps().drawBuffersExtension && !pipelines.some((p) => p.getClassName() === \"SSAORenderingPipeline\")) {\r\n                defaultMenuItems.push({\r\n                    label: \"Add new SSAO2 Rendering Pipeline\",\r\n                    action: () => {\r\n                        const newPipeline = new SSAO2RenderingPipeline(\"SSAO2 rendering pipeline\", scene, 1, scene.cameras);\r\n                        this.props.globalState.onSelectionChangedObservable.notifyObservers(newPipeline);\r\n                    },\r\n                });\r\n            }\r\n\r\n            if (scene.getEngine().getCaps().drawBuffersExtension && scene.getEngine().getCaps().texelFetch && !pipelines.some((p) => p.getClassName() === \"SSRRenderingPipeline\")) {\r\n                defaultMenuItems.push({\r\n                    label: \"Add new SSR Rendering Pipeline\",\r\n                    action: () => {\r\n                        const newPipeline = new SSRRenderingPipeline(\"SSR rendering pipeline\", scene, scene.cameras);\r\n                        this.props.globalState.onSelectionChangedObservable.notifyObservers(newPipeline);\r\n                    },\r\n                });\r\n            }\r\n\r\n            if (\r\n                scene.getEngine().getCaps().drawBuffersExtension &&\r\n                scene.getEngine().getCaps().texelFetch &&\r\n                !pipelines.some((p) => p.getClassName() === \"IBLShadowsRenderingPipeline\")\r\n            ) {\r\n                defaultMenuItems.push({\r\n                    label: \"Add new IBL Shadows Rendering Pipeline\",\r\n                    action: () => {\r\n                        const newPipeline = new IblShadowsRenderPipeline(\"IBL Shadows rendering pipeline\", scene, {}, scene.cameras);\r\n                        this.props.globalState.onSelectionChangedObservable.notifyObservers(newPipeline);\r\n                    },\r\n                });\r\n            }\r\n        }\r\n\r\n        const customMenuItems = this.props.contextMenu?.pipeline || [];\r\n        const useDefaults = !this.props.contextMenuOverride?.includes(\"pipeline\");\r\n\r\n        return useDefaults ? [...defaultMenuItems, ...customMenuItems] : customMenuItems;\r\n    }\r\n\r\n    private _getNodeContextMenus(scene: Scene): IInspectorContextMenuItem[] {\r\n        const defaultMenuItems: IInspectorContextMenuItem[] = [];\r\n\r\n        defaultMenuItems.push({\r\n            label: \"Add new point light\",\r\n            action: () => {\r\n                const newPointLight = new PointLight(\"point light\", Vector3.Zero(), scene);\r\n                this.props.globalState.onSelectionChangedObservable.notifyObservers(newPointLight);\r\n            },\r\n        });\r\n        defaultMenuItems.push({\r\n            label: \"Add new directional light\",\r\n            action: () => {\r\n                const newDirectionalLight = new DirectionalLight(\"directional light\", new Vector3(-1, -1, -0.5), scene);\r\n                this.props.globalState.onSelectionChangedObservable.notifyObservers(newDirectionalLight);\r\n            },\r\n        });\r\n        defaultMenuItems.push({\r\n            label: \"Add new free camera\",\r\n            action: () => {\r\n                const newFreeCamera = new FreeCamera(\"free camera\", scene.activeCamera ? scene.activeCamera.globalPosition : new Vector3(0, 0, -5), scene);\r\n\r\n                if (scene.activeCamera) {\r\n                    newFreeCamera.minZ = scene.activeCamera.minZ;\r\n                    newFreeCamera.maxZ = scene.activeCamera.maxZ;\r\n                    if ((scene.activeCamera as any).getTarget) {\r\n                        newFreeCamera.setTarget((scene.activeCamera as TargetCamera).getTarget());\r\n                    }\r\n                }\r\n\r\n                this.props.globalState.onSelectionChangedObservable.notifyObservers(newFreeCamera);\r\n            },\r\n        });\r\n        defaultMenuItems.push({\r\n            label: \"Add new mesh from Node Geometry\",\r\n            action: () => {\r\n                const ng = new NodeGeometry(\"Node Geometry\");\r\n                ng.setToDefault();\r\n                ng.build();\r\n                const newMesh = ng.createMesh(\"Node geometry mesh\", scene);\r\n\r\n                this.props.globalState.onSelectionChangedObservable.notifyObservers(newMesh);\r\n            },\r\n        });\r\n\r\n        const customMenuItems = this.props.contextMenu?.node || [];\r\n        const useDefaults = !this.props.contextMenuOverride?.includes(\"node\");\r\n\r\n        return useDefaults ? [...defaultMenuItems, ...customMenuItems] : customMenuItems;\r\n    }\r\n\r\n    private _getMaterialsContextMenus(scene: Scene): IInspectorContextMenuItem[] {\r\n        const getUniqueName = (name: string): string => {\r\n            let idSubscript = 1;\r\n            while (scene.getMaterialById(name)) {\r\n                name = name + \" \" + idSubscript++;\r\n            }\r\n            return name;\r\n        };\r\n\r\n        const defaultMenuItems: IInspectorContextMenuItem[] = [];\r\n\r\n        defaultMenuItems.push({\r\n            label: \"Add new standard material\",\r\n            action: () => {\r\n                const newStdMaterial = new StandardMaterial(getUniqueName(\"Standard material\"), scene);\r\n                this.props.globalState.onSelectionChangedObservable.notifyObservers(newStdMaterial);\r\n            },\r\n        });\r\n        defaultMenuItems.push({\r\n            label: \"Add new PBR material\",\r\n            action: () => {\r\n                const newPBRMaterial = new PBRMaterial(getUniqueName(\"PBR material\"), scene);\r\n                this.props.globalState.onSelectionChangedObservable.notifyObservers(newPBRMaterial);\r\n            },\r\n        });\r\n        defaultMenuItems.push({\r\n            label: \"Add new node material\",\r\n            action: () => {\r\n                const newNodeMaterial = new NodeMaterial(getUniqueName(\"node material\"), scene);\r\n                newNodeMaterial.setToDefault();\r\n                newNodeMaterial.build(false, false, true);\r\n                this.props.globalState.onSelectionChangedObservable.notifyObservers(newNodeMaterial);\r\n            },\r\n        });\r\n\r\n        const customMenuItems = this.props.contextMenu?.materials || [];\r\n        const useDefaults = !this.props.contextMenuOverride?.includes(\"materials\");\r\n\r\n        return useDefaults ? [...defaultMenuItems, ...customMenuItems] : customMenuItems;\r\n    }\r\n\r\n    private _getSpriteManagersContextMenus(scene: Scene): IInspectorContextMenuItem[] {\r\n        const defaultMenuItems: IInspectorContextMenuItem[] = [];\r\n\r\n        defaultMenuItems.push({\r\n            label: \"Add new sprite manager\",\r\n            action: () => {\r\n                const newSpriteManager = new SpriteManager(\"Default sprite manager\", \"//playground.babylonjs.com/textures/player.png\", 500, 64, scene);\r\n                this.props.globalState.onSelectionChangedObservable.notifyObservers(newSpriteManager);\r\n            },\r\n        });\r\n\r\n        const customMenuItems = this.props.contextMenu?.spriteManagers || [];\r\n        const useDefaults = !this.props.contextMenuOverride?.includes(\"spriteManagers\");\r\n\r\n        return useDefaults ? [...defaultMenuItems, ...customMenuItems] : customMenuItems;\r\n    }\r\n\r\n    private _getParticleSystemsContextMenus(scene: Scene): IInspectorContextMenuItem[] {\r\n        const defaultMenuItems: IInspectorContextMenuItem[] = [];\r\n\r\n        defaultMenuItems.push({\r\n            label: \"Add new CPU particle system\",\r\n            action: () => {\r\n                const newSystem = ParticleHelper.CreateDefault(Vector3.Zero(), 10000, scene);\r\n                newSystem.name = \"CPU particle system\";\r\n                newSystem.start();\r\n                this.props.globalState.onSelectionChangedObservable.notifyObservers(newSystem);\r\n            },\r\n        });\r\n\r\n        if (GPUParticleSystem.IsSupported) {\r\n            defaultMenuItems.push({\r\n                label: \"Add new GPU particle system\",\r\n                action: () => {\r\n                    const newSystem = ParticleHelper.CreateDefault(Vector3.Zero(), 10000, scene, true);\r\n                    newSystem.name = \"GPU particle system\";\r\n                    newSystem.start();\r\n                    this.props.globalState.onSelectionChangedObservable.notifyObservers(newSystem);\r\n                },\r\n            });\r\n        }\r\n\r\n        const customMenuItems = this.props.contextMenu?.particleSystems || [];\r\n        const useDefaults = !this.props.contextMenuOverride?.includes(\"particleSystems\");\r\n\r\n        return useDefaults ? [...defaultMenuItems, ...customMenuItems] : customMenuItems;\r\n    }\r\n\r\n    renderContent(allNodes: any[]) {\r\n        const scene = this.state.scene;\r\n\r\n        if (!scene) {\r\n            this._onNewSceneAddedObserver = EngineStore.LastCreatedEngine!.onNewSceneAddedObservable.addOnce((scene) => this.setState({ scene: scene }));\r\n            return null;\r\n        }\r\n\r\n        if (!this._hooked) {\r\n            this._hooked = true;\r\n            scene.onNewSkeletonAddedObservable.add(this._sceneMutationFunc);\r\n            scene.onNewCameraAddedObservable.add(this._sceneMutationFunc);\r\n            scene.onNewLightAddedObservable.add(this._sceneMutationFunc);\r\n            scene.onNewMaterialAddedObservable.add(this._sceneMutationFunc);\r\n            scene.onNewMeshAddedObservable.add(this._sceneMutationFunc);\r\n            scene.onNewTextureAddedObservable.add(this._sceneMutationFunc);\r\n            scene.onNewTransformNodeAddedObservable.add(this._sceneMutationFunc);\r\n\r\n            scene.onSkeletonRemovedObservable.add(this._sceneMutationFunc);\r\n            scene.onMeshRemovedObservable.add(this._sceneMutationFunc);\r\n            scene.onCameraRemovedObservable.add(this._sceneMutationFunc);\r\n            scene.onLightRemovedObservable.add(this._sceneMutationFunc);\r\n            scene.onMaterialRemovedObservable.add(this._sceneMutationFunc);\r\n            scene.onTransformNodeRemovedObservable.add(this._sceneMutationFunc);\r\n            scene.onTextureRemovedObservable.add(this._sceneMutationFunc);\r\n        }\r\n\r\n        const guiElements = scene.textures.filter((t) => t.getClassName() === \"AdvancedDynamicTexture\");\r\n        const textures = scene.textures.filter((t) => t.getClassName() !== \"AdvancedDynamicTexture\");\r\n        const postProcesses = scene.postProcesses;\r\n        const pipelines = scene.postProcessRenderPipelineManager.supportedPipelines;\r\n\r\n        // Context menus\r\n        const pipelineContextMenus = this._getPipelineContextMenus(scene, pipelines);\r\n        const nodeContextMenus = this._getNodeContextMenus(scene);\r\n        const materialsContextMenus = this._getMaterialsContextMenus(scene);\r\n        const spriteManagersContextMenus = this._getSpriteManagersContextMenus(scene);\r\n        const particleSystemsContextMenus = this._getParticleSystemsContextMenus(scene);\r\n\r\n        const materials = [];\r\n\r\n        materials.push(...scene.materials);\r\n\r\n        if (scene.multiMaterials && scene.multiMaterials.length) {\r\n            materials.push(...scene.multiMaterials);\r\n        }\r\n\r\n        const rootNodes = scene.rootNodes.slice(0);\r\n\r\n        // Adding nodes parented to a bone\r\n        for (const mesh of scene.meshes) {\r\n            if (mesh.parent && mesh.parent.getClassName() === \"Bone\") {\r\n                rootNodes.push(mesh);\r\n            }\r\n        }\r\n\r\n        allNodes.push(\r\n            rootNodes,\r\n            scene.skeletons,\r\n            materials,\r\n            textures,\r\n            postProcesses,\r\n            pipelines,\r\n            scene.effectLayers,\r\n            scene.particleSystems,\r\n            scene.spriteManagers,\r\n            guiElements,\r\n            scene.animationGroups\r\n        );\r\n        if (scene.mainSoundTrack) {\r\n            allNodes.push(scene.mainSoundTrack.soundCollection);\r\n        }\r\n\r\n        return (\r\n            <div id=\"tree\" onContextMenu={(e) => e.preventDefault()}>\r\n                <SceneExplorerFilterComponent onFilter={(filter) => this.filterContent(filter)} />\r\n                <SceneTreeItemComponent\r\n                    globalState={this.props.globalState}\r\n                    gizmoCamera={this.props.gizmoCamera}\r\n                    extensibilityGroups={this.props.extensibilityGroups}\r\n                    selectedEntity={this.state.selectedEntity}\r\n                    scene={scene}\r\n                    onRefresh={() => this.forceUpdate()}\r\n                    onSelectionChangedObservable={this.props.globalState.onSelectionChangedObservable}\r\n                />\r\n                <TreeItemComponent\r\n                    globalState={this.props.globalState}\r\n                    gizmoCamera={this.props.gizmoCamera}\r\n                    contextMenuItems={nodeContextMenus}\r\n                    extensibilityGroups={this.props.extensibilityGroups}\r\n                    selectedEntity={this.state.selectedEntity}\r\n                    items={rootNodes}\r\n                    label=\"Nodes\"\r\n                    offset={1}\r\n                    filter={this.state.filter}\r\n                />\r\n                {scene.skeletons.length > 0 && (\r\n                    <TreeItemComponent\r\n                        globalState={this.props.globalState}\r\n                        extensibilityGroups={this.props.extensibilityGroups}\r\n                        selectedEntity={this.state.selectedEntity}\r\n                        items={scene.skeletons}\r\n                        label=\"Skeletons\"\r\n                        offset={1}\r\n                        filter={this.state.filter}\r\n                    />\r\n                )}\r\n                <TreeItemComponent\r\n                    globalState={this.props.globalState}\r\n                    extensibilityGroups={this.props.extensibilityGroups}\r\n                    selectedEntity={this.state.selectedEntity}\r\n                    items={materials}\r\n                    contextMenuItems={materialsContextMenus}\r\n                    label=\"Materials\"\r\n                    offset={1}\r\n                    filter={this.state.filter}\r\n                />\r\n                <TreeItemComponent\r\n                    globalState={this.props.globalState}\r\n                    extensibilityGroups={this.props.extensibilityGroups}\r\n                    selectedEntity={this.state.selectedEntity}\r\n                    items={textures}\r\n                    label=\"Textures\"\r\n                    offset={1}\r\n                    filter={this.state.filter}\r\n                />\r\n                {postProcesses.length > 0 && (\r\n                    <TreeItemComponent\r\n                        globalState={this.props.globalState}\r\n                        extensibilityGroups={this.props.extensibilityGroups}\r\n                        selectedEntity={this.state.selectedEntity}\r\n                        items={postProcesses}\r\n                        label=\"Post-processes\"\r\n                        offset={1}\r\n                        filter={this.state.filter}\r\n                    />\r\n                )}\r\n                <TreeItemComponent\r\n                    globalState={this.props.globalState}\r\n                    extensibilityGroups={this.props.extensibilityGroups}\r\n                    contextMenuItems={pipelineContextMenus}\r\n                    selectedEntity={this.state.selectedEntity}\r\n                    items={pipelines}\r\n                    label=\"Rendering pipelines\"\r\n                    offset={1}\r\n                    filter={this.state.filter}\r\n                />\r\n                {scene.effectLayers && scene.effectLayers.length > 0 && (\r\n                    <TreeItemComponent\r\n                        globalState={this.props.globalState}\r\n                        extensibilityGroups={this.props.extensibilityGroups}\r\n                        selectedEntity={this.state.selectedEntity}\r\n                        items={scene.effectLayers}\r\n                        label=\"Effect layers\"\r\n                        offset={1}\r\n                        filter={this.state.filter}\r\n                    />\r\n                )}\r\n                <TreeItemComponent\r\n                    globalState={this.props.globalState}\r\n                    contextMenuItems={particleSystemsContextMenus}\r\n                    extensibilityGroups={this.props.extensibilityGroups}\r\n                    selectedEntity={this.state.selectedEntity}\r\n                    items={scene.particleSystems}\r\n                    label=\"Particle systems\"\r\n                    offset={1}\r\n                    filter={this.state.filter}\r\n                />\r\n                <TreeItemComponent\r\n                    globalState={this.props.globalState}\r\n                    contextMenuItems={spriteManagersContextMenus}\r\n                    forceSubitems={true}\r\n                    extensibilityGroups={this.props.extensibilityGroups}\r\n                    selectedEntity={this.state.selectedEntity}\r\n                    items={scene.spriteManagers}\r\n                    label=\"Sprite managers\"\r\n                    offset={1}\r\n                    filter={this.state.filter}\r\n                />\r\n                {guiElements && guiElements.length > 0 && (\r\n                    <TreeItemComponent\r\n                        globalState={this.props.globalState}\r\n                        extensibilityGroups={this.props.extensibilityGroups}\r\n                        selectedEntity={this.state.selectedEntity}\r\n                        items={guiElements}\r\n                        label=\"GUI\"\r\n                        offset={1}\r\n                        filter={this.state.filter}\r\n                    />\r\n                )}\r\n                {scene.animationGroups.length > 0 && (\r\n                    <TreeItemComponent\r\n                        globalState={this.props.globalState}\r\n                        extensibilityGroups={this.props.extensibilityGroups}\r\n                        selectedEntity={this.state.selectedEntity}\r\n                        items={scene.animationGroups}\r\n                        label=\"Animation groups\"\r\n                        offset={1}\r\n                        filter={this.state.filter}\r\n                    />\r\n                )}\r\n                {scene.mainSoundTrack && scene.mainSoundTrack.soundCollection.length > 0 && (\r\n                    <TreeItemComponent\r\n                        globalState={this.props.globalState}\r\n                        extensibilityGroups={this.props.extensibilityGroups}\r\n                        selectedEntity={this.state.selectedEntity}\r\n                        items={scene.mainSoundTrack.soundCollection}\r\n                        label=\"Sounds\"\r\n                        offset={1}\r\n                        filter={this.state.filter}\r\n                    />\r\n                )}\r\n                {this.props.additionalNodes &&\r\n                    this.props.additionalNodes.map((additionalNode) => {\r\n                        return (\r\n                            <TreeItemComponent\r\n                                key={additionalNode.name}\r\n                                globalState={this.props.globalState}\r\n                                extensibilityGroups={this.props.extensibilityGroups}\r\n                                selectedEntity={this.state.selectedEntity}\r\n                                items={additionalNode.getContent()}\r\n                                label={additionalNode.name}\r\n                                offset={1}\r\n                                filter={this.state.filter}\r\n                            />\r\n                        );\r\n                    })}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onClose() {\r\n        if (!this.props.onClose) {\r\n            return;\r\n        }\r\n\r\n        this.props.onClose();\r\n    }\r\n\r\n    onPopup() {\r\n        if (!this.props.onPopup) {\r\n            return;\r\n        }\r\n\r\n        this.props.onPopup();\r\n    }\r\n\r\n    override render() {\r\n        const allNodes: any[] = [];\r\n\r\n        if (this.props.popupMode) {\r\n            return (\r\n                <div id=\"sceneExplorer\" tabIndex={0} onKeyDown={(keyEvent) => this.processKeys(keyEvent, allNodes)}>\r\n                    {!this.props.noHeader && (\r\n                        <HeaderComponent\r\n                            title=\"SCENE EXPLORER\"\r\n                            noClose={this.props.noClose}\r\n                            noExpand={this.props.noExpand}\r\n                            noCommands={this.props.noCommands}\r\n                            onClose={() => this.onClose()}\r\n                            onPopup={() => this.onPopup()}\r\n                        />\r\n                    )}\r\n                    {this.renderContent(allNodes)}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (this._once) {\r\n            this._once = false;\r\n            // A bit hacky but no other way to force the initial width to 300px and not auto\r\n            setTimeout(() => {\r\n                const element = document.getElementById(\"sceneExplorer\");\r\n                if (!element) {\r\n                    return;\r\n                }\r\n                element.style.width = \"300px\";\r\n            }, 150);\r\n        }\r\n\r\n        return (\r\n            <ResizableCasted\r\n                tabIndex={-1}\r\n                id=\"sceneExplorer\"\r\n                defaultSize={{ height: \"100%\" }}\r\n                ref={this._sceneExplorerRef}\r\n                minWidth={300}\r\n                maxWidth={600}\r\n                minHeight=\"100%\"\r\n                enable={{ top: false, right: true, bottom: false, left: false, topRight: false, bottomRight: false, bottomLeft: false, topLeft: false }}\r\n                onKeyDown={(keyEvent: React.KeyboardEvent<HTMLDivElement>) => this.processKeys(keyEvent, allNodes)}\r\n            >\r\n                {!this.props.noHeader && (\r\n                    <HeaderComponent\r\n                        title=\"SCENE EXPLORER\"\r\n                        noClose={this.props.noClose}\r\n                        noExpand={this.props.noExpand}\r\n                        noCommands={this.props.noCommands}\r\n                        onClose={() => this.onClose()}\r\n                        onPopup={() => this.onPopup()}\r\n                    />\r\n                )}\r\n                {this.renderContent(allNodes)}\r\n            </ResizableCasted>\r\n        );\r\n    }\r\n}\r\n"]}