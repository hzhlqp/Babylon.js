{"version":3,"file":"engine.debugging.js","sourceRoot":"","sources":["../../../../src/Engines/WebGPU/Extensions/engine.debugging.ts"],"names":[],"mappings":"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","sourcesContent":["import { WebGPUEngine } from \"../../webgpuEngine\";\r\n\r\nWebGPUEngine.prototype._debugPushGroup = function (groupName: string, targetObject?: number): void {\r\n    if (!this._options.enableGPUDebugMarkers) {\r\n        return;\r\n    }\r\n\r\n    if (targetObject === 0 || targetObject === 1) {\r\n        if (targetObject === 1) {\r\n            if (this._currentRenderTarget) {\r\n                this.unBindFramebuffer(this._currentRenderTarget);\r\n            } else {\r\n                this._endCurrentRenderPass();\r\n            }\r\n        }\r\n        this._renderEncoder.pushDebugGroup(groupName);\r\n    } else if (this._currentRenderPass) {\r\n        this._currentRenderPass.pushDebugGroup(groupName);\r\n        this._debugStackRenderPass.push(groupName);\r\n    } else {\r\n        this._pendingDebugCommands.push([\"push\", groupName, targetObject]);\r\n    }\r\n};\r\n\r\nWebGPUEngine.prototype._debugPopGroup = function (targetObject?: number): void {\r\n    if (!this._options.enableGPUDebugMarkers) {\r\n        return;\r\n    }\r\n\r\n    if (targetObject === 0 || targetObject === 1) {\r\n        if (targetObject === 1) {\r\n            if (this._currentRenderTarget) {\r\n                this.unBindFramebuffer(this._currentRenderTarget);\r\n            } else {\r\n                this._endCurrentRenderPass();\r\n            }\r\n        }\r\n        this._renderEncoder.popDebugGroup();\r\n    } else if (this._currentRenderPass) {\r\n        this._currentRenderPass.popDebugGroup();\r\n        this._debugStackRenderPass.pop();\r\n    } else {\r\n        this._pendingDebugCommands.push([\"pop\", null, targetObject]);\r\n    }\r\n};\r\n\r\nWebGPUEngine.prototype._debugInsertMarker = function (text: string, targetObject?: number): void {\r\n    if (!this._options.enableGPUDebugMarkers) {\r\n        return;\r\n    }\r\n\r\n    if (targetObject === 0 || targetObject === 1) {\r\n        if (targetObject === 1) {\r\n            if (this._currentRenderTarget) {\r\n                this.unBindFramebuffer(this._currentRenderTarget);\r\n            } else {\r\n                this._endCurrentRenderPass();\r\n            }\r\n        }\r\n        this._renderEncoder.insertDebugMarker(text);\r\n    } else if (this._currentRenderPass) {\r\n        this._currentRenderPass.insertDebugMarker(text);\r\n    } else {\r\n        this._pendingDebugCommands.push([\"insert\", text, targetObject]);\r\n    }\r\n};\r\n\r\nWebGPUEngine.prototype._debugFlushPendingCommands = function (): void {\r\n    if (this._debugStackRenderPass.length !== 0) {\r\n        const currentDebugStack = this._debugStackRenderPass.slice();\r\n        this._debugStackRenderPass.length = 0;\r\n        for (let i = 0; i < currentDebugStack.length; ++i) {\r\n            this._debugPushGroup(currentDebugStack[i], 2);\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < this._pendingDebugCommands.length; ++i) {\r\n        const [name, param, targetObject] = this._pendingDebugCommands[i];\r\n\r\n        switch (name) {\r\n            case \"push\":\r\n                this._debugPushGroup(param!, targetObject);\r\n                break;\r\n            case \"pop\":\r\n                this._debugPopGroup(targetObject);\r\n                break;\r\n            case \"insert\":\r\n                this._debugInsertMarker(param!, targetObject);\r\n                break;\r\n        }\r\n    }\r\n    this._pendingDebugCommands.length = 0;\r\n};\r\n"]}