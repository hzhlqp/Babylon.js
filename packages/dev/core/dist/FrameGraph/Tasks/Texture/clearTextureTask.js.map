{"version":3,"file":"clearTextureTask.js","sourceRoot":"","sources":["../../../../src/FrameGraph/Tasks/Texture/clearTextureTask.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,MAAM,EAAE,MAAM,2BAA2B,CAAC;AACnD,OAAO,EAAE,cAAc,EAAE,MAAM,sBAAsB,CAAC;AAEtD;;GAEG;AACH,MAAM,OAAO,0BAA2B,SAAQ,cAAc;IA+B1D,YAAY,IAAY,EAAE,UAAsB;QAC5C,KAAK,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;QA/B5B;;WAEG;QACI,UAAK,GAAG,IAAI,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QAE5C;;WAEG;QACI,eAAU,GAAG,IAAI,CAAC;QAEzB;;WAEG;QACI,eAAU,GAAG,KAAK,CAAC;QAE1B;;WAEG;QACI,iBAAY,GAAG,KAAK,CAAC;QAexB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,oBAAoB,EAAE,CAAC;IACjE,CAAC;IAEM,MAAM;QACT,IAAI,IAAI,CAAC,kBAAkB,KAAK,SAAS,EAAE;YACvC,MAAM,IAAI,KAAK,CAAC,8BAA8B,IAAI,CAAC,IAAI,kCAAkC,CAAC,CAAC;SAC9F;QAED,IAAI,CAAC,WAAW,CAAC,qBAAqB,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAEpF,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEvD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAC9C,IAAI,CAAC,cAAc,CAAC,CAAC,OAAO,EAAE,EAAE;YAC5B,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACzF,CAAC,CAAC,CAAC;QAEH,MAAM,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,GAAG,WAAW,EAAE,IAAI,CAAC,CAAC;QAEnF,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACtD,YAAY,CAAC,cAAc,CAAC,CAAC,QAAQ,EAAE,EAAE,GAAE,CAAC,CAAC,CAAC;IAClD,CAAC;CACJ","sourcesContent":["// eslint-disable-next-line import/no-internal-modules\r\nimport type { FrameGraph, FrameGraphTextureHandle } from \"core/index\";\r\nimport { Color4 } from \"../../../Maths/math.color\";\r\nimport { FrameGraphTask } from \"../../frameGraphTask\";\r\n\r\n/**\r\n * Task used to clear a texture.\r\n */\r\nexport class FrameGraphClearTextureTask extends FrameGraphTask {\r\n    /**\r\n     * The color to clear the texture with.\r\n     */\r\n    public color = new Color4(0.2, 0.2, 0.3, 1);\r\n\r\n    /**\r\n     * If the color should be cleared.\r\n     */\r\n    public clearColor = true;\r\n\r\n    /**\r\n     * If the depth should be cleared.\r\n     */\r\n    public clearDepth = false;\r\n\r\n    /**\r\n     * If the stencil should be cleared.\r\n     */\r\n    public clearStencil = false;\r\n\r\n    /**\r\n     * The texture to clear.\r\n     */\r\n    public destinationTexture: FrameGraphTextureHandle;\r\n\r\n    /**\r\n     * The output texture (same as destinationTexture, but the handle may be different).\r\n     */\r\n    public readonly outputTexture: FrameGraphTextureHandle;\r\n\r\n    constructor(name: string, frameGraph: FrameGraph) {\r\n        super(name, frameGraph);\r\n\r\n        this.outputTexture = this._frameGraph.createDanglingHandle();\r\n    }\r\n\r\n    public record() {\r\n        if (this.destinationTexture === undefined) {\r\n            throw new Error(`FrameGraphClearTextureTask ${this.name}: destinationTexture is required`);\r\n        }\r\n\r\n        this._frameGraph.resolveDanglingHandle(this.outputTexture, this.destinationTexture);\r\n\r\n        const pass = this._frameGraph.addRenderPass(this.name);\r\n\r\n        pass.setRenderTarget(this.destinationTexture);\r\n        pass.setExecuteFunc((context) => {\r\n            context.clear(this.color, !!this.clearColor, !!this.clearDepth, !!this.clearStencil);\r\n        });\r\n\r\n        const passDisabled = this._frameGraph.addRenderPass(this.name + \"_disabled\", true);\r\n\r\n        passDisabled.setRenderTarget(this.destinationTexture);\r\n        passDisabled.setExecuteFunc((_context) => {});\r\n    }\r\n}\r\n"]}